操作系统概述操作系统概念：操作系统是控制和管理计算机硬件和软件资源、合理地组织和管理计算机的工作流程以方便用户使用的程序的集合 。地位：位于硬件（裸机）之上，所有其他（应用）软件之下。它是对硬件...<hr />
<h2 id="toc_79">操作系统概述</h2><h3 id="toc_80">操作系统</h3><ol><li><strong>概念</strong>：操作系统是控制和管理计算机硬件和软件资源、合理地组织和管理计算机的工作流程以方便用户使用的程序的集合 。</li><li><strong>地位</strong>：位于硬件（裸机）之上，所有其他（应用）软件之下。它是对硬件系统功能的首次扩充（虚拟机）。</li></ol><h3 id="toc_81">操作系统发展史</h3><ol><li>串行处理（真空管）</li><li>脱机批处理（晶体管）</li><li>多道批处理（集成电路）</li><li>个人计算机（大规模集成电路）</li></ol><h3 id="toc_82">现代操作系统的特征</h3><ol><li><strong>并发</strong>：指两个或者多个事件在同一时间间隔内发生，是宏观上的并行和微观上的串行。</li><li><strong>共享</strong>：系统中软硬件资源不再为某个用户（程序）独占，而是可供多个程序共同使用。</li><li><strong>虚拟</strong>：指将一个物理实体变为若干逻辑单元。</li><li><strong>不确定性</strong>：也称为并发程序的异步执行性，主要指程序的执行过程存在高度动态的特征，从而可能引发执行结果的不确定，操作系统必须有效解决这一问题。</li></ol><h3 id="toc_83">操作系统的分类</h3><ol><li><strong>分时系统</strong>：独立性，同时性，及时性，交互性。</li><li><strong>实时系统</strong>：响应速度快，可靠性和安全性高。</li><li><strong>主要区别</strong></li></ol><table><thead><tr><th align="center"> </th><th>实时系统</th><th>分时系统</th></tr></thead><tbody><tr><td align="center">设计目标不同</td><td>多是专用系统</td><td>多是通用系统</td></tr><tr><td align="center">交互性强弱不同</td><td>外界操作是严格控制的，交互性弱</td><td>允许系统和用户之间有较强的会话能力，交互性强</td></tr><tr><td align="center">响应时间长短不同</td><td>以控制过程中信息处理能接受的延迟为标准</td><td>以人能接受的等待时间为标准</td></tr></tbody></table><h3 id="toc_84">操作系统内核结构</h3><h4 id="toc_85">微内核</h4><ul><li>内核保持尽量小，只实现操作系统的基本功能，而将更多功能放在内核之外运行，各模块之间通过消息进行通讯。</li><li><strong>特点</strong>：内核简单，安全可靠，可移植性好。</li></ul><h4 id="toc_86">单内核</h4><ul><li>内核容纳更多的功能，分为若干个模块，模块间的通信通过调用其它模块中的函数实现（直接调用）。</li><li><strong>特点</strong>：执行效率高，但可移植性相对减弱。</li></ul><h4 id="toc_87">混合内核</h4><ul><li>单内核和微内核的结合，取长补短，为大多数商业操作系统采用。</li></ul><h2 id="toc_88">作业管理和用户接口</h2><h3 id="toc_89">用户接口类型</h3><ol><li><p><strong>作业控制级接口</strong>——面向人</p><ol><li>命令驱动</li><li>图形化驱动</li></ol></li><li><p><strong>程序级接口</strong>——面向应用程序</p><ul><li>系统功能调用</li></ul></li></ol><h3 id="toc_90">系统功能调用</h3><h4 id="toc_91">程序的管态和算态</h4><ol><li>操作系统运行的状态称为管态（系统态， 核心态）</li><li>用户程序运行的状态称为算态（用户态， 目态）</li></ol><h4 id="toc_92">指令类型</h4><ol><li><strong>特权指令</strong>：一类只能在管态下执行而不能在算态下执行的特殊指令。</li><li><strong>访管指令</strong>：引发访管中断的指令，运行在算态。</li><li><strong>广义指令</strong>：操作系统提供的每一个子功能（系统调用程序）被抽象成的一个系统调用命令。</li></ol><blockquote><p>访管指令本身不是特权指令，它会引发访管中断，进而进入系统态执行系统调用（广义指令），在系统调用程序中可能会嵌入特权指令。</p></blockquote><h4 id="toc_93">系统调用</h4><p><strong>概念</strong>：系统调用是指用户在程序中调用操作系统提供的一些子功能，是用户在程序级请求操作系统服务的一种手段。</p><h5 id="toc_94">过程</h5><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="452px" height="321px" viewBox="-0.5 -0.5 452 321" content="&lt;mxfile host=&quot;Electron&quot; modified=&quot;2022-06-21T05:24:53.947Z&quot; agent=&quot;5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/15.8.7 Chrome/91.0.4472.164 Electron/13.6.2 Safari/537.36&quot; etag=&quot;kAHyp_jutfYlrab-mVb0&quot; version=&quot;15.8.7&quot; type=&quot;device&quot;&gt;&lt;diagram id=&quot;dCws1yf_HOOZkeMMr0yw&quot; name=&quot;第 1 页&quot;&gt;7Vpbk+IoFP41VO0+2JWQi8ljonH2WtW1Xbsz84gGY2ZicBFb3V+/QMAkipdpYzvb2y8K5xwg4Zzv4wABzmC++UDRYvY7SXEBoJVugDMEEPaDgP8KwbYS+JZbCTKap5XIrgVP+T9YCS0lXeUpXrYMGSEFyxdt4YSUJZ6wlgxRStZtsykp2qMuUIYPBE8TVBxKP+Ypm1VS1w8aip9wns3U0I5jqSefI22tBMsZSsm6IXIS4AwoIawqzTcDXIjJ0xNTtRsd0e4egOKSXdLgQ2/+88cvX70/Nh7+9Otfz4P1L9serHp5RsVKvTFIXBAHIBqCxAehLwseiFwQuCDpg9ACgQ+SAMQjEPSFJApAEKtXZFs9cZSsyhSLoS3gxOtZzvDTAk2Eds0jhctmbF7wms2LU1Iy5Xvb5/UCjXHxSJY5y0nJhRP+iphyxTOmLOfe+W3PYJ6nqRg5RkWeGVtESsGIGFu9NdfhzdHptHdO4tGNyRwzuuUmqgHsK7+qyHZVdV2HCXSUbNaMEB0PSIVmtuu6dh4vKP99gy9tgy89EEcgrDznClftHFapgtH/z3Ne23E2PPScbfKcfTvPuQdewCnnIVUtSSlmqO0YQtmMZKTkU0rEzEh3fMGMbZU/0IqRtrPwJmefRPMHT9U+NzTDjepZVraq0nSwo+oDUhDuoWGKp2hVsJ1XxDOf9gl/RbKiE3xiLnzF8ohmmJ2wC80+prhALH9uP0fnDvMNUOOcmYA4EQiLh6IsCg6IY1mIQTiStMn502nA0RMQjPuiEEIQDJQkgJJ+PWHfGUCdjpgvaAOob2A+28R8N4OP/93Ch08p3TYaiernpq5uJmt3g114Iexsyxwbr4O70JyujEAo05UgEokKtAaPf/JfgbIgEQgS4BqI5e57h5JpLXplLPXfsXQtlrTDzoPpSHS8Dpj0YzbRBH05GXwAJHZVM0SX6g38v1dipxKv2LQX1NVWqGihmOHeUk45x5xlO4uNNK0b+Zn6l8MtF6j8po6sSlHZC01J6BwVDd1agUUoXcuqNAWPSUx7fLhJXmaHLTmQWS/nkV2qlpYeT2oYReVyyu11S4kFgVZC03avu4ZjNPmaSbj0JlXMCTXNxj9AzwOQe85qFn5sDJfiCaGoypPb46X5clGgbSXOyyLXimlBENuzPph0kViMQOTJlIUX4KWZCt8KhpZhByFsIrk/5LmLJ3uWSUzkaOatKHgIBN35Cm6jyus6Erpk5lMI75av75/7BO98fTVf65Ols3wN78rXhg3+C/j6hdTrvlNvJ9QbhCDqS+q15XbvkGgPT2jeEmXC+6e44TtlXk2Z8FLKdO5KmYbz7XfK/G9RprxqCGVyGfLcNNFJqiMT2UTkl2+LIO+eU0LHcMxicoNasPiiFsgzTF8k+Ppq7Ai91kya1NIO2bbBtTXzXnO2jYuxvLbT9xHgBbcc1d3F2SuOMWGMzDtmaudSpj4ZpT3rwQlcddB6MXmr7h5Jzh+7NiHTqeDc/TjdjXoF4RtC9yW0Da2TzN1S75M3PM/f2sRI4S2licW1gZnItfYMl1sNOrcajN4a3Ujq2sLE67uJ2aN2cypsy8OH6naZO+TEue1bInjn7hkw9O5J0bp8CUXXCXErHa6z46sSYgO1d8i80L2Qef0rU2TZNKIUbRsGC8G5SwMJ66h09tIO22vG1Vn7wNsLw+oBOmVzaLpn5bvigbgZrc4YQ9vwwYopuOWS3A7Is+vx7uMEivn6gMayPxFeanJ5514MvOH1bKK+X1JDgN0muRl3J6B8lHusB8vXY7x01dafbrUb3G4N17hped10cCLu2+XpMy9wobAZyI+SXLFBiA4/qrj3dZ+/BznrcCGwX3chOH16fOtcvfPvUG5M6P0LCb2K4HsdeujHbOHnghueTtFylEq7h5Ht3Q5GvFp/oVkRXP2dq5P8Cw==&lt;/diagram&gt;&lt;/mxfile&gt;" style="background-color: rgb(255, 255, 255);"><defs/><g><rect x="220" y="0" width="230" height="320" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 228px; height: 1px; padding-top: 7px; margin-left: 221px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 16px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">中断处理过程</div></div></div></foreignObject><text x="335" y="23" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="16px" text-anchor="middle">中断处理过程</text></switch></g><rect x="0" y="80" width="130" height="120" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 128px; height: 1px; padding-top: 87px; margin-left: 1px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 16px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">应用程序</div></div></div></foreignObject><text x="65" y="103" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="16px" text-anchor="middle">应用程序</text></switch></g><path d="M 335 60 L 335 73.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 335 78.88 L 331.5 71.88 L 335 73.63 L 338.5 71.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="230" y="30" width="210" height="30" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 208px; height: 1px; padding-top: 45px; margin-left: 231px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 13px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">设置系统调用号和参数</div></div></div></foreignObject><text x="335" y="49" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="13px" text-anchor="middle">设置系统调用号和参数</text></switch></g><path d="M 335 110 L 335 123.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 335 128.88 L 331.5 121.88 L 335 123.63 L 338.5 121.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="230" y="80" width="210" height="30" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 208px; height: 1px; padding-top: 95px; margin-left: 231px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 13px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">保护 CPU 现场</div></div></div></foreignObject><text x="335" y="99" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="13px" text-anchor="middle">保护 CPU 现场</text></switch></g><path d="M 335 160 L 335 173.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 335 178.88 L 331.5 171.88 L 335 173.63 L 338.5 171.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="230" y="130" width="210" height="30" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 208px; height: 1px; padding-top: 145px; margin-left: 231px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 13px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><span style="font-size: 13px ; font-style: normal ; font-weight: 400 ; letter-spacing: normal ; text-indent: 0px ; text-transform: none ; word-spacing: 0px ; background-color: rgb(255 , 255 , 255) ; text-decoration: none ; display: inline ; float: none">查询系统调用子程序的入口地址</span></div></div></div></foreignObject><text x="335" y="149" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="13px" text-anchor="middle">查询系统调用子程序的入口地址</text></switch></g><path d="M 335 210 L 335 223.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 335 228.88 L 331.5 221.88 L 335 223.63 L 338.5 221.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="230" y="180" width="210" height="30" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 208px; height: 1px; padding-top: 195px; margin-left: 231px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 13px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><span style="font-size: 14px ; font-style: normal ; font-weight: 400 ; letter-spacing: normal ; text-indent: 0px ; text-transform: none ; word-spacing: 0px ; background-color: rgb(255 , 255 , 255) ; text-decoration: none ; display: inline ; float: none">执行调用程序</span></div></div></div></foreignObject><text x="335" y="199" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="13px" text-anchor="middle">执行调用程序</text></switch></g><path d="M 335 260 L 335 273.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 335 278.88 L 331.5 271.88 L 335 273.63 L 338.5 271.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="230" y="230" width="210" height="30" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 208px; height: 1px; padding-top: 245px; margin-left: 231px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 13px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><span style="font-size: 14px ; font-style: normal ; font-weight: 400 ; letter-spacing: normal ; text-indent: 0px ; text-transform: none ; word-spacing: 0px ; background-color: rgb(255 , 255 , 255) ; text-decoration: none ; display: inline ; float: none">返回结果</span></div></div></div></foreignObject><text x="335" y="249" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="13px" text-anchor="middle">返回结果</text></switch></g><path d="M 230 295 L 65 295 L 65 206.37" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 65 201.12 L 68.5 208.12 L 65 206.37 L 61.5 208.12 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-end; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 292px; margin-left: 150px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 13px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">返回用户态</div></div></div></foreignObject><text x="150" y="292" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="13px" text-anchor="middle">返回用户态</text></switch></g><rect x="230" y="280" width="210" height="30" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 208px; height: 1px; padding-top: 295px; margin-left: 231px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 13px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><span style="font-size: 14px ; font-style: normal ; font-weight: 400 ; letter-spacing: normal ; text-indent: 0px ; text-transform: none ; word-spacing: 0px ; background-color: rgb(255 , 255 , 255) ; text-decoration: none ; display: inline ; float: none">恢复 CPU 现场</span></div></div></div></foreignObject><text x="335" y="299" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="13px" text-anchor="middle">恢复 CPU 现场</text></switch></g><path d="M 120 175 L 180 175 L 180 45 L 223.63 45" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 228.88 45 L 221.88 48.5 L 223.63 45 L 221.88 41.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 114px; margin-left: 180px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 13px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">引发中断</div></div></div></foreignObject><text x="180" y="118" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="13px" text-anchor="middle">引发中断</text></switch></g><rect x="10" y="160" width="110" height="30" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 108px; height: 1px; padding-top: 175px; margin-left: 11px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 13px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">执行访管指令</div></div></div></foreignObject><text x="65" y="179" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="13px" text-anchor="middle">执行访管指令</text></switch></g><path d="M 65 140 L 65 160 L 65 140 L 65 153.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 65 158.88 L 61.5 151.88 L 65 153.63 L 68.5 151.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="10" y="110" width="110" height="30" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 108px; height: 1px; padding-top: 125px; margin-left: 11px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 13px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">系统调用</div></div></div></foreignObject><text x="65" y="129" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="13px" text-anchor="middle">系统调用</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Viewer does not support full SVG 1.1</text></a></switch></svg><h4 id="toc_95">一般的过程调用和系统调用的区别</h4><table><thead><tr><th align="center"> </th><th>一般过程调用</th><th>系统调用</th></tr></thead><tbody><tr><td align="center">运行状态不同</td><td>调用过程和被调用过程运行在相同的状态</td><td>调用过程运行在用户态（算态），被调用的系统功能子程序运行在系统态（管态）</td></tr><tr><td align="center">进入方式不同</td><td>可以直接由调用过程转向被调用的过程</td><td>由于调用过程与被调用过程是处于不同的状态，只能通过软中断机制进入系统核心态，然后转向相应的处理子程序</td></tr><tr><td align="center">返回方式不同</td><td>执行完后，直接返回调用过程继续执行</td><td>在返回时需要进行一次重新的调度选择</td></tr></tbody></table><h3 id="toc_96">作业管理</h3><h4 id="toc_97">作业</h4><ol><li><strong>脱机作业</strong>：用户不直接和计算机系统交互，其执行过程由操作员辅助完成。</li><li><strong>联机作业</strong>：用户在作业执行过程中可直接和计算机系统交互（人机对话），控制执行的过程。</li><li><strong>处理过程</strong>：输入、注册、调度、终止。</li></ol><h4 id="toc_98">作业的输入/输出</h4><ol><li>脱机输入/输出（人工干预）：输入输出机可以并行工作。</li><li>联机输入/输出</li><li><p><strong>SPOOLing系统</strong>（外围设备同时联机操作）</p><ul><li>兼具脱机和联机方式的优点， 可以实现联机方式下的主机和外围设备的同时工作，又称为假脱机，也即以联机的方式得到脱机的效果。</li><li>将一台物理 I/O 设备虚拟出多个 I/O 设备，通过缓冲区来实现多设备的并行工作。</li></ul></li></ol><h4 id="toc_99">作业注册</h4><p>作业控制块（JCB）</p><ol><li>标识信息</li><li>状态信息</li><li>调度参数</li></ol><h4 id="toc_100">作业调度</h4><ol><li><p><strong>单道批处理系统作业调度</strong></p><ol><li>先来先服务调度算法（FCFS, First Come First Served）</li><li><strong>最短作业优先调度算法</strong>（SJF, Shortest Job First）</li><li><p><strong>最高响应比优先调度算法</strong>（HRP, Highest Ratio Priority）</p><ol><li>响应比即优先级</li><li><p><strong>响应比</strong>：作业响应时间 / 作业运行时间</p><ul><li>即 (作业等待时间 + 作业运行时间) / 作业运行时间</li><li>即 1 + (作业等待时间 / 作业运行时间)</li></ul></li></ol></li></ol></li><li><p><strong>多道批处理系统作业调度算法</strong></p><ol><li>一次可以选择多个作业同时执行（并发）。</li><li>优先级调度算法</li><li>均衡调度算法：分类和轮流服务。</li></ol></li><li><p><strong>性能分析</strong></p><ol><li>CPU 利用率</li><li>吞吐量：单位时间内CPU完成作业的数量。（SJF 擅长）</li><li>周转时间：$T_i=T_\text{完成}-T_\text{提交}$</li><li>周转系数：$W_i=\frac{T_i}{T_\text{执行}}$</li><li>平均周转时间：$T=\frac{T_1+T_2+\cdots+T_n}{n}=\frac{1}{n}\sum_{i=1}^{n}T_i$</li><li>平均周转系数：$W=\frac{W_1+W_2+\cdots+W_n}{n}=\frac{1}{n}\sum_{i=1}^{n}W_i$</li></ol></li></ol><h2 id="toc_101">进程管理</h2><h3 id="toc_102">进程</h3><ol><li>进程是程序的一次执行，该进程可与其它进程并发执行；它 是一个动态的实体，是资源的基本分配单元。</li><li><p>与程序的区别和联系</p><ol><li><p>区别</p><ol><li>程序是静态的，是有序代码的集合；进程是动态的，是程序的一次执行。</li><li>程序的永久的，没有生命周期，可长久保存；进程是暂时的，有生命周期，是一个动态不断变化的过程。</li><li>进程是操作系统资源分配和保护的基本单位；程序没有此功能。</li><li>进程与程序的结构不同。</li></ol></li><li><p>联系</p><ol><li>通过多次执行，一个程序可对应多个进程；</li><li>通过调用关系，一个进程可包括多个程序。</li></ol></li></ol></li><li><p>组成（内存映像）</p><ul><li>PCB</li><li>程序</li><li>数据</li><li>工作区</li></ul></li></ol><h3 id="toc_103">进程控制块（PCB）</h3><ol><li><strong>定义</strong>：是操作系统用来记录进程详细状态和相关信息的基本数据结构，它和进程是一一对应的，是进程存在的<strong>唯一标识</strong>。</li><li><p>作用</p><ol><li>提供进程的各种信息，以便操作系统查询、控制和管理。</li><li>进程的档案，描述进程的特征，记载进程的历史，决定进程的命运。</li></ol></li><li><p><strong>结构</strong></p><ol><li><strong>标识信息</strong>：唯一的标识一个进程，主要包含进程标识、用户标识、父进程标识。</li><li><strong>现场信息</strong>：记录进程使用处理器时的各种现场信息。主要有 CPU 通用寄存器的内容、CPU 状态寄存器内容及栈指针等信息。</li><li><strong>控制信息</strong>：操作系统对进程进行调度管理时用到的信息，主要有进程状态、调度信息、数据结构信息、队列指针、位置信息、通信信息、特权信息、存储信息等。</li></ol></li><li>进程控制块PCB在内存中是以<strong>表</strong>的形式存在的，操作系统对PCB进行集中统一的管理，所有的 PCB 集中在一个固定的存储空间上，形成了PCB表。PCB之间是以<strong>双向链式队列</strong>的形式关联的。</li></ol><h3 id="toc_104">进程的产生与消失</h3><ol><li><p>进程的产生</p><ol><li>系统初始化</li><li>用户执行程序（命令，双击）</li><li>程序启动程序（子进程）</li><li>批处理系统：作业初始化</li></ol></li><li><p>进程的消失</p><ol><li>寿终：运行结束而退出</li><li>自杀：因错误而自行终止</li><li>他杀：被其他进程/用户强行终止</li><li>处决：因异常而被系统强行终结</li></ol></li></ol><h3 id="toc_105">进程的执行与控制</h3><ol><li><strong>进程的基本状态及其转换</strong></li></ol><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="371px" height="151px" viewBox="-0.5 -0.5 371 151" content="&lt;mxfile host=&quot;Electron&quot; modified=&quot;2022-06-21T12:44:46.997Z&quot; agent=&quot;5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/19.0.3 Chrome/102.0.5005.63 Electron/19.0.3 Safari/537.36&quot; etag=&quot;Yg1sfU7PX2SbWQaWiSSG&quot; version=&quot;19.0.3&quot; type=&quot;device&quot;&gt;&lt;diagram id=&quot;z0JrxFd6R5Qa72TInH-X&quot; name=&quot;第 1 页&quot;&gt;3VlLc6M4EP41OjoFCIM4Cj9mtipTla0cMpkbMTJmCiOvkGN7fv2qhXgZ7PFsnMS1l0RqtVpI/XV/LRnhyXr/RUSb1Tcesww5VrxHeIocxx1b6i8IDqXACexSkIg0LkUtwWP6ixmhmZds05gVHUXJeSbTTVe44HnOFrIji4Tgu67akmfdVTdRwnqCx0WU9aVPaSxXZlseaQ18ZWmyMktjbJkvX0eVthEUqyjmu5YIzxCeCM5l2VrvJyyDw6sOppw3PzFaf4BgubxkgsR/O2u6368Or/ghjL4tv7h0ZBszhTxUW2axOgHTzXmu/oWCb/OYgR1L9biQK57wPMruOd8ooa2EP5mUB+O/aCu5Eq3kOjOjbJ/K7zD9zh+b7rOxBu3pvt05VJ1cisP3due5ZQL6zTzdqyYueS7Np9jQL2QkJAU0NFvSsnmaZbWFuNLgG5aXkta4Uk+YfGAiXTPJxOMmWqR5YgbLM4SDO+mb6pz5ViyMVsh/cPG02xVPf8UFy51Z8WM+cgzI9XJn9HCNIBV6jKuPEgc1T7Askulr9zsiEwRJrdfARDUMUv4ENbg0/BplW7MUmvmIThEJ0GyMwhkiY5AEFBEXzQgKx7rhoZCiwAIdMkd0rnVcRAlyvExtN3wRqpVA66xBF+yQUDdCFHqgQ5XOBJYgBJYYgvV99KLSUweZUZYmytvThfIUE0rwyoRMVQKgZuCFS8nXEASsSH9FL9oeOH3D01zqkx2HaDwdwF0Gyz3wIpUpH1zj/khBQjipaJOREWDHruEFk9h+KOuZj2pSTRt4Z8K+Dx9j3rqzsGOQeDGijLUHOJaWCl8uC4XkY8jVi16EwnOh0gFhgAICkAA82CiY9WDQpDI42d0qlQxiGUZ3isGOwCEWxp/j47zi1X4ZiPKeq06etFsRneFHXLlw17CNb0SrFs+41juFtnPmxN6Y/Kt2mcUrHhjO/WfT7VGupsUhX/QS9mVJv2KYu5pTnttjJwjmivkeX5jv3Tfm+6PoNPDzgy78ergyfihnvSmEB9E2wCOGCIpNlHdw6P2zhUpJB+Go0FijSsG2NnvtkWq84Q8PBb7mhkA3XOAPRSfEb1inpg2zqtpEubCx0WKlt3zK9fZEEHUQLTcX6j0F0FVJD6hwohtj4EpFgmqXiiWpr/l3DvpAqUTzpmJJCqZAeYqodfIAPp9F23RI/jurXp9End9xqIudTnTZt86oQ2WdKr4sFNoaTSGi9NYZdewdpTT7kxnV/+AbFnb8FtGOFA6tSjDMtVe4Lg1T8HkSV59QD12fV9+HLz38uXxJBgK0n9wJhCzBOnZVlveulsXN/eT9L0INXRwl/+tncf9sNlHhY2PX7Th9dEt5fPh6N3z9fbec8weFfV1y291Hnf/zm457YY1/oqD4oDedoev00BNMiPUFW5cDwVxXkCrt6DKb6Gqy/9wz8LjTf8EpDWJd2k7B8g3UnjdTa9rWMDaaYtMj+IbS0rk46CDMA3iVdxRq65vYbZeX/sc92Khu8+tA6YPmNxY8+xc=&lt;/diagram&gt;&lt;/mxfile&gt;" style="background-color: rgb(255, 255, 255);"><defs/><g><path d="M 52.5 110 L 148.27 31.42" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 145.94 37.86 L 149.14 30.71 L 141.5 32.44" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)rotate(321 101.53058412584721 66.50718590898293)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-end; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 67px; margin-left: 102px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">等待的资源可用<br />等待的事件完成</div></div></div></foreignObject><text x="102" y="67" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px" text-anchor="middle">等待的资源可用&#xa;等待的事件完成</text></switch></g><rect x="0" y="110" width="70" height="40" rx="20" ry="20" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 68px; height: 1px; padding-top: 130px; margin-left: 1px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 16px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">阻塞</div></div></div></foreignObject><text x="35" y="135" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="16px" text-anchor="middle">阻塞</text></switch></g><path d="M 220 20 L 335 110" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 335 110 L 331.64 102.93" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)rotate(38 282.3581231936787 64.32711195558534)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-end; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 64px; margin-left: 282px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;"><span style="font-size: 10px;">时间片用完</span><br style="font-size: 10px;" /><span style="font-size: 10px;">被更高优先级进程抢占</span></div></div></div></foreignObject><text x="282" y="64" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px" text-anchor="middle">时间片用完&#xa;被更高优先级进程抢占</text></switch></g><rect x="150" y="0" width="70" height="40" rx="20" ry="20" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 68px; height: 1px; padding-top: 20px; margin-left: 151px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 16px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">就绪</div></div></div></foreignObject><text x="185" y="25" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="16px" text-anchor="middle">就绪</text></switch></g><path d="M 322.89 109.72 L 220 30" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 220 30 L 223.39 37.05" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)rotate(38 274.9625420590812 80.17680624533784)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 80px; margin-left: 275px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">进程调度</div></div></div></foreignObject><text x="275" y="90" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px" text-anchor="middle">进程调度</text></switch></g><path d="M 300 130 L 72.24 130" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 78.12 126.5 L 71.12 130 L 78.12 133.5" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-end; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 127px; margin-left: 177px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">等待系统分配资源<br />事件结束</div></div></div></foreignObject><text x="177" y="127" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px" text-anchor="middle">等待系统分配资源&#xa;事件结束</text></switch></g><rect x="300" y="110" width="70" height="40" rx="20" ry="20" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 68px; height: 1px; padding-top: 130px; margin-left: 301px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 16px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">执行</div></div></div></foreignObject><text x="335" y="135" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="16px" text-anchor="middle">执行</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg><ol><li><p>进程控制</p><ul><li>系统对进程的控制和管理是通过操作系统内核中的原语实现的。</li></ul></li></ol><h3 id="toc_106">进程调度</h3><ol><li><p>交互式系统（分时系统）下的调度策略</p><ol><li><strong>时间片轮转法</strong>（RR, Round Robin）</li><li><strong>优先级调度算法</strong>：为系统中的每个进程规定一个优先数，就绪队列中具有最高优先数的进程有优先获得处理机的权利；如果几个进程的优先数相同，可则对它们实行 RR 调度策略。</li><li><p><strong>多级反馈队列调度算法</strong></p><ul><li>系统中维持多个不同优先级的就绪队列，每个就绪队列具有不同长度的时间片。</li><li>优先级高的就绪队列里的进程，获得的时间片短；优先级低的就绪队列里的进程，获得的时间片长。</li><li>新进程进入时加入优先级最高的就绪队列的末尾。</li></ul></li></ol></li></ol><h3 id="toc_107">进程间的相互作用</h3><ol><li><p><strong>两种相互作用</strong></p><ol><li><strong>同步</strong>：进程之间相互合作、协同工作的关系称为进程的同步。（直接制约）</li><li><p><strong>互斥</strong>：多个进程因为争夺临界资源而相互排斥执行的过程。（间接制约）</p><ul><li><strong>临界资源</strong>：也称独占资源，是指 在一段时间内只允许一个进程访问的资源。</li><li><strong>临界区</strong>：使用临界资源的程序段。</li></ul></li></ol></li><li><p><strong>实现同步与互斥</strong></p><ol><li>加锁法</li><li><p><strong>信号量和 P、V 操作</strong></p><ol><li><p>信号量</p><ol><li><strong>公用信号量</strong>：用于进程间的互斥，初值通常为 1；</li><li><strong>私有信号量</strong>：用于进程间的同步，初值通常为 0 或 n。</li></ol></li><li><strong>P 操作</strong>：请求分配一个单位的资源。</li><li><strong>V 操作</strong>：释放/增加一个单位的资源。</li></ol></li><li><p>管程</p><ol><li>关于共享资源的一组数据结构和在这组数据结构上的一组相关操作。</li><li><p>工作原理</p><ol><li>条件变量（c）</li><li><code>wait(c)</code></li><li><code>signal(c)</code></li></ol></li></ol></li></ol></li></ol><h3 id="toc_108">进程通信</h3><ol><li>共享内存</li><li>消息传递</li><li>共享文件模式：管道（pipe）</li></ol><h2 id="toc_109">死锁</h2><h3 id="toc_110">死锁产生的必要条件</h3><ol><li>互斥使用（资源独占）</li><li>非剥夺控制（不可强占）</li><li>零散请求</li><li>循环等待</li></ol><h3 id="toc_111">死锁的解决策略</h3><ol><li>置之不理法：鸵鸟政策</li><li>事后处理法：让死锁发生，事后处理</li><li>积极防御法：不让死锁发生</li></ol><h3 id="toc_112">死锁的预防</h3><p>即破坏必要条件。</p><h3 id="toc_113">死锁的避免</h3><blockquote><p>允许死锁产生的条件存在。</p></blockquote><p><strong>安全状态</strong>：在这种状态下，存在一种资源分配顺序，使得所有进程顺利完成。</p><ol><li><strong>单银行家算法</strong>：满足最大需求后释放所有资源。</li><li><p><strong>多银行家算法</strong>：多个资源的单银行家算法。</p><ol><li>sum 向量：系统资源总量</li><li>allocation 向量：当前系统已分配资源</li><li>available 向量：系统剩余资源</li><li>sum(i)：第 i 个进程资源需求总量</li><li>allocation(i)：第 i 个进程已分配资源总量</li><li>claim(i)：第 i 个资源仍需申请资源数</li></ol></li></ol><h3 id="toc_114">死锁的检测和解除</h3><h4 id="toc_115">资源分配图</h4><h5 id="toc_116">两类资源</h5><ol><li><p><strong>永久性资源</strong></p><ol><li><strong>圆</strong>（椭圆）表示一个进程。</li><li><strong>方块</strong>表示一个资源类，其中的圆点表示该类型资源中的单个资源。</li><li>从<strong>资源指向进程的箭头</strong>表示资源被<strong>分配</strong>给了这个进程。</li><li>从<strong>进程指向资源的箭头</strong>表示进程<strong>申请</strong>一个这类资源。</li></ol></li><li><p><strong>临时性资源</strong></p><ol><li><strong>圆</strong>（椭圆）表示一个进程。</li><li><strong>方块</strong>表示一个资源类，其中的圆点表示该类型资源中的单个资源。</li><li>由<strong>进程指向资源的箭头</strong>表示该进程申请这种资源，一个箭头只表示申请一个资源。</li><li>由<strong>资源类指向进程的箭头</strong>表示该进程产生这种资源，<strong>一个箭头可表示产生一到多个资源，每个资源类至少有一个生产者进程</strong>。</li></ol></li></ol><h5 id="toc_117">化简</h5><blockquote><p>对于临时性资源，如果其生产者进程不被阻塞，就可以认为其数量是无穷的。</p></blockquote><p>从那些没有阻塞的进程入手，删除那些没有阻塞的进程的请求边，并使资源类中资源数（黑点的数目）减 1，删至直到图中不存在无阻塞的进程。</p><p>如果图中仍有请求边且无法再化简，则系统死锁。</p><h4 id="toc_118">死锁的解除</h4><ol><li>重新启动</li><li>撤消进程</li><li>剥夺资源</li><li>进程回退</li></ol><h2 id="toc_119">存储管理</h2><h3 id="toc_120">程序的转化过程</h3><ol><li><p>链接</p><ol><li>静态链接</li><li>装入时动态链接</li><li>运行时动态链接</li></ol></li><li><p>程序的装入（涉及到<strong>地址重定位</strong>）</p><ol><li>绝对装入（Absolute loading）/ 固定地址再定位</li><li>可重定位装入（Relocatable Loading）/ 静态重定位</li><li>运行时重定位 / 动态重定位</li></ol></li></ol><h3 id="toc_121">分区存储管理方案</h3><ul><li><strong>内碎片</strong>：指占用分区之内未被利用的空间。</li><li><strong>外碎片</strong>：指占用的分区之间难以利用的狭小空闲分区。</li></ul><h4 id="toc_122">连续分配方式</h4><ol><li>单一连续分区管理：内存中一次只能装入一个用户程序，程序独占整个用户区。</li><li><p>固定分区管理</p><ol><li>优点：内存的利用率提高了；可以支持多道程序。</li><li>缺点：存在内碎片，造成存储空间的浪费；分区总数固定，限制了并发执行的程序数目。</li></ol></li><li>动态分区管理（可变分区）</li></ol><p><strong>分区分配算法</strong></p><ol><li><p><strong>最先（首次）适应算法</strong>（first-fit）：顺序查找</p><ul><li>倾向于使用内存中低地址部分的空闲分区，在高地址部分的空闲分区很少被利用，从而保留了高地址部分的大空闲区，可为以后到达的大作业分配大的内存空间创造了条件。</li><li>缺点：低址部分不断被划分，留下许多难以利用、很小的空闲区（外碎片），而每次查找又都从低址部分开始，会增加查找的开销。</li></ul></li><li><p><strong>邻近（下次/循环）适应算法</strong>（next-fit）：从最近处顺序查找</p><ul><li>能使空闲中的内存分区分布得更加均匀，但将会缺乏大的空闲分区。</li></ul></li><li><p><strong>最佳适应算法</strong>（best-fit）：按从小到大顺序</p><ul><li>在存储器中将留下许多难以利用的小空闲区（外碎片）。每次分配后必须重新排序，这也带来了一定的开销。</li></ul></li><li><p><strong>最坏适应算法</strong>（worst-fit）：按从大到小顺序</p><ul><li>克服了最佳适应算法留下的许多小的碎片的不足，但保留大的空闲区的可能性减小了。</li></ul></li></ol><p><strong>分区释放方式</strong>：相邻合并，否则插入。</p><h4 id="toc_123">离散分配方式</h4><h5 id="toc_124">页式存储管理：等分内存空间</h5><p><strong>页表</strong>：记录每一个作业的页号到页框号（实页号）之间的映射关系。</p><ol><li><p><strong>优点</strong></p><ol><li>程序不必连续存放</li><li>没有外碎片</li></ol></li><li><p><strong>缺点</strong></p><ol><li>程序要一次全部装入内存</li><li>页表体积庞大，维护麻烦</li><li>依然存在内碎片（大小平均为半个页面）</li></ol></li><li><p>局限性</p><ol><li>不便于实现共享</li><li>一个程序只有一个虚拟地址空间</li></ol></li></ol><h5 id="toc_125">段式存储管理：按逻辑分段</h5><ol><li><p><strong>优点</strong></p><ol><li>程序不必连续存放</li><li>没有内碎片</li><li>程序尺寸几乎不受限制</li><li>便于实现共享</li><li>段表很小（段数量很少）</li></ol></li><li><p><strong>缺点</strong></p><ol><li>作业要一次全部装入内存（至少一个段要全部加载到连续内存）</li><li>存在外碎片</li></ol></li></ol><h5 id="toc_126">段页式存储管理</h5><p>结合了页式和段式，段里存页。</p><p>为了获得一条指令或者数据，需要访问内存三次（访问表两次，访问物理地址一次）。</p><h3 id="toc_127">内存扩充技术</h3><ol><li>覆盖技术（Overlay）（作业内部，对程序结构有影响）</li><li>交换技术（Swapping）（作业之间，对程序结构无影响）</li></ol><h3 id="toc_128">虚拟页式存储技术</h3><h4 id="toc_129">工作原理</h4><h4 id="toc_130">页面淘汰算法</h4><ol><li><p>先进先出页面淘汰算法（FIFO）</p><ul><li>可用页面数增大，缺页率反而升高（Belady 现象）。</li></ul></li><li><p>最近最少使用页面淘汰算法（LRU, Least Recently Used）</p><ul><li>无 Belady 现象。</li></ul></li></ol><h3 id="toc_131">颠簸 / 抖动</h3><ol><li>页面在内存与外存之间频繁调度，以至于调度页面所需时间比进程实际运行的时间还多，此时系统效率急剧下降，甚至导致系统崩溃。这种现象称为<strong>颠簸</strong>或<strong>抖动</strong>。</li><li><p><strong>原因</strong></p><ol><li>页面淘汰算法不合理。</li><li>分配给进程的物理页面数太少。</li></ol></li><li><p><strong>解决办法</strong></p><ol><li>给定更合适的页面淘汰算法（不一定奏效）</li><li>分配给个更多的物理内存页面（一般会有效果，而且效果较好，但给多了并发度就会降低）</li><li>较好的方法是使用工作集机制处理。</li></ol></li></ol><h3 id="toc_132">工作集</h3><ul><li>常驻集：实际给进程<strong>分配</strong>的内存页面的集合。</li><li><strong>工作集</strong>：在某段时间间隔里，进程实际<strong>要访问</strong>的页面的集合。</li><li>活跃页面：在某段时间间隔里，进程频繁访问的页面。</li></ul><h2 id="toc_133">文件管理</h2><h3 id="toc_134">文件的结构</h3><h4 id="toc_135">逻辑结构</h4><ol><li>是用户所观察到的文件内容组织形式，它独立于物理存储设备。</li><li><p>分类</p><ol><li>有结构的文件（关系导向型结构）</li><li>无结构的文件（非关系导向型结构）</li></ol></li></ol><h4 id="toc_136">物理结构</h4><ol><li><p>物理存储方式</p><ol><li>连续存储（顺序结构）</li><li>链接结构</li><li>索引结构</li></ol></li><li><p>索引表的组织方式</p><ol><li>链接文件方式：将多个索引表块按链接文件的方式串联起来。</li><li>多重索引方式：将一个大文件的所有索引表的地址放在另一个索引表中。（UNIX 三级索引）</li><li>Hash 文件：采用计算寻址结构，它由主文件和溢出文件组成。</li></ol></li></ol><h3 id="toc_137">文件的目录</h3><ol><li><p>文件的目录结构</p><ol><li>一级目录结构</li><li>二级目录结构</li><li>多级目录结构（UNIX树形）</li></ol></li><li>文件的查找——线性检索法</li></ol><h3 id="toc_138">文件共享</h3><ol><li><p><strong>硬链接</strong></p><ul><li>不能链接目录、无法跨文件系统</li><li>会增加链接计数</li></ul></li><li><p><strong>软链接</strong>（符号链接）</p><ul><li>可链接目录、可跨文件系统甚至网络</li><li>不会增加链接计数</li></ul></li></ol><h3 id="toc_139">文件的操作</h3><h4 id="toc_140">打开文件机构</h4><ol><li>内存文件控制块（内存索引节点）</li><li><p>系统打开文件控制块</p><ul><li>用于记录所有打开文件的控制信息。</li></ul></li><li><p>用户打开文件表</p><ul><li>每一个进程可打开多个文件，都有一张打开文件表。</li></ul></li></ol><h3 id="toc_141">外存空间管理</h3><p>外存空闲空间管理的数据结构通常称为磁盘分配表（Disk Allocation Table）。</p><h4 id="toc_142">空闲空间管理方法</h4><ol><li><p>空闲区表</p><ul><li>其缺点是当外存中有大量的空闲区时，空闲区表会变得很大，分配效率降低。</li></ul></li><li><p>位示图</p><ul><li>大小由磁盘空间的大小（物理块数）决定，位示图的描述能力强，适应各种物理结构。</li></ul></li><li><p>空闲块链</p><ul><li>释放和分配都从链头处进行，主要问题是要修改几个有关的链接字，需要反复读写磁盘和分配物理块，系统开销大。</li></ul></li><li><p>成组链接法（UNIX）</p><ul><li>将空闲块分成若干组，每 100 个空闲块为一组。每组的第一个空闲块登记了下一组空闲块的物理盘块号和本组空闲块总数。</li><li>专用块，空闲块索引表 filsys</li></ul></li></ol><h3 id="toc_143">磁盘调度</h3><h4 id="toc_144">移臂调度</h4><ol><li>先来先服务算法（FCFS, First Come First Served）</li><li><p>最短寻道时间优先算法（SSF, Shortest Seek First）</p><ul><li>会发生「饥饿」现象。</li></ul></li><li>电梯调度算法（SCAN）</li></ol><h4 id="toc_145">旋转调度</h4><p>优先级：柱面 &gt; 扇区 &gt; 磁头</p><h4 id="toc_146">信息分布</h4><h2 id="toc_147">设备管理</h2><h3 id="toc_148">外设的分类</h3><h4 id="toc_149">按数据组织方式分类</h4><ol><li><p><strong>块设备</strong>：指以数据块为单位来组织和传送数据信息的设备。属于有结构设备。</p><ol><li>传输速率较高</li><li>可寻址</li><li>采用 DMA 方式控制</li></ol></li><li><p><strong>字符设备</strong>：以单个字符为单位来传送数据信息的设备。</p><ol><li>传输速率较低</li><li>不可寻址</li><li>常采用中断驱动方式</li></ol></li></ol><h4 id="toc_150">按数据传输率分类</h4><ol><li>低速设备（Byte 级别）：键盘、鼠标</li><li>中速设备（KB 级别）：打印机</li><li>高速设备（MB 级别）：硬盘、磁带、光盘</li></ol><h3 id="toc_151">I/O系统及结构</h3><h4 id="toc_152">结构</h4><ol><li>单总线结构</li><li>多总线结构</li><li>通道系统</li></ol><h4 id="toc_153">控制方式</h4><ol><li><p><strong>程序控制 I/O</strong>（直接控制方式、可编程I/O模式）</p><ul><li>效率低下</li></ul></li><li><p><strong>中断驱动 I/O</strong></p><ul><li>数据仍然需要通过CPU进行传输，由于CPU每次处理的数据量少，因此这种方式只适于数据传输率较低的设备。</li></ul></li><li><p><strong>直接存储访问 I/O</strong>（DMA, Direct Memory Access）</p><ul><li>CPU只需干预I/O操作的开始和结束，而其中的数据读写无需CPU控制，适 于高速设备。</li></ul></li><li><p><strong>通道控制方式 I/O</strong></p><ul><li>一个CPU可以连接若干个通道，一个通道可以连接若干个控制器，一个控制器可以连接若干个设备。</li></ul></li></ol><h3 id="toc_154">I/O 软件</h3><h4 id="toc_155">组成成分</h4><ol><li>I/O 交通管制程序</li><li>I/O 调度程序</li><li>I/O 设备处理程序</li></ol><h4 id="toc_156">设计目标</h4><p>设备独立、统一命名、错误处理、数据传输、缓冲管理、设备共享……</p><h4 id="toc_157">结构</h4><ol><li><p><strong>设备驱动程序</strong>：内核软件模块</p><ul><li>向上：接受来自与设备无关的上层软件的抽象请求；</li><li>向下：进行与设备相关的操作。</li></ul></li><li><strong>设备无关系统软件</strong>：负责实现对所有设备都具有共性的功能，并向上提供一个统一的接口。</li><li><strong>用户空间 I/O 软件</strong>：具有 I/O 功能但在用户态下运行的软件（函数）或功能模块。</li></ol><h3 id="toc_158">具有通道的设备管理</h3><ol><li>通道命令（Channel Command Word, CCW）：I/O 处理机的指令</li><li>通道程序：用通道命令编写的程序</li><li>通道地址字（Channel Address Word, CAW）：通道程序首地址的内存单元</li><li>通道状态字（Channel Status Word, CSW）</li></ol><h3 id="toc_159">缓冲技术</h3><ol><li><p><strong>设置目的</strong></p><ol><li>缓解缓冲两端设备（程序）速度的差异</li><li>协调数据大小的不一致性</li><li>实现应用程序 I/O 的语义拷贝</li></ol></li><li><p><strong>分类</strong></p><ol><li>单缓冲（single buffer）：输出输出速率相差大时可用</li><li>双缓冲（double buffer）</li><li>环形缓冲</li><li>缓冲池（buffer pool）：可供多个进程共享的双向缓冲技术。</li></ol></li><li><p>缓冲管理队列</p><ol><li>自由 buf 队列（FIFO）</li><li>设备 buf 队列</li><li><em>NODEV 设备队列</em></li></ol></li><li><p>字符设备的缓存管理</p><ul><li>解决 CPU 与字符设备间速度不匹配的矛盾</li><li>自由字符缓存队列：由空闲的字符缓存构成自由队列。</li><li>I/O 字符缓存队列</li></ul></li></ol><h3 id="toc_160">设备管理数据结构</h3><ol><li>设备控制表（DCT）</li><li>控制器控制表（COCT）</li><li>通道控制表（CHCT）</li><li>系统设备表（SDT）</li></ol>
