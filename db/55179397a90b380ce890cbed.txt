<blockquote><h1 id="合宙Air601连接阿里云物联网平台-MQTT协议学习"><a href="#合宙Air601连接阿里云物联网平台-MQTT协议学习" class="headerlink" title="合宙Air601连接阿里云物联网平台-MQTT协议学习"></a>合宙Air</blockquote><h1 id="合宙Air601连接阿里云物联网平台-MQTT协议学习"><a href="#合宙Air601连接阿里云物联网平台-MQTT协议学习" class="headerlink" title="合宙Air601连接阿里云物联网平台-MQTT协议学习"></a>合宙Air601连接阿里云物联网平台-MQTT协议学习</h1><p>开发板9块9包邮）买来玩玩。</p><p>首先赞美一下其他模块有现成AT&#x2F;MQTT固件，因为Air601刚出来不久，现在还没有AT&#x2F;MQTT固件，所以要TCP连接后手搓MQTT协议，就当学习了~</p><p>鼓捣了一晚上，记录记录过程~</p><p>一些官方介绍：</p><blockquote><p>Air601-12F 是合宙通信推出的 Wi-Fi - BLE二合一通信模块；<br>Air601-12F采用合宙Air601芯片平台，支持Wi-Fi 802.11b&#x2F;g&#x2F;n协议，支持BLE 4.2协议；<br>Air601-12F 兼容业内主流12F封装(SMD-22)，板载PCB天线，极致成本，满足小型化低成本需求；<br>Air601-12F 支持AT指令开发，指令集兼容，可无缝替换。<br>Wi-Fi 安全支持 Wi-Fi WMM&#x2F;WMM-PS&#x2F;WPA&#x2F;WPA2&#x2F;WPS；<br>支持20&#x2F;40MHz带宽，最高支持150Mbps速率；<br>支持 Station 、Station + SoftAP 、SoftAP 模式；<br>支持TLS加密通信，硬件加密模块加速，支持多路TLS连接；<br>支持fota空中升级；<br>支持低功耗休眠，休眠电流小于20 μA</p><img src="http://images.elecfans.top/uploads/20230717/3902cb10-2457-11ee-962d-dac502259ad0.png" style="zoom: 25%;" /></blockquote><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="获取AT指令手册"><a href="#获取AT指令手册" class="headerlink" title="获取AT指令手册"></a>获取AT指令手册</h3><p><a href="https://cdn.openluat-luatcommunity.openluat.com/attachment/20230717162214038_%E4%B8%8A%E6%B5%B7%E5%90%88%E5%AE%99WIFI%E6%A8%A1%E7%BB%84(Air601%E7%B3%BB%E5%88%97)AT%E5%91%BD%E4%BB%A4%E6%89%8B%E5%86%8CV1.0.3.pdf">上海合宙WIFI模组(Air601系列)AT命令手册V1.0.3.pdf</a></p><p>因为直接买的开发板，所以开箱即用。使用type-c数据线，通过串口进行操作。</p><p>具体指令信息可以参考手册，这里只记录必要过程。</p><h3 id="连接wifi"><a href="#连接wifi" class="headerlink" title="连接wifi"></a>连接wifi</h3><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">AT+CWJAP&#x3D;&quot;WiFi名&quot;,&quot;WiFi密码&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>若返回<code>WIFI CONNECTED</code>，则连接成功。</p><h3 id="阿里云物联网平台创建好设备"><a href="#阿里云物联网平台创建好设备" class="headerlink" title="阿里云物联网平台创建好设备"></a>阿里云物联网平台创建好设备</h3><p>比较简单就不演示了。</p><h2 id="计算MQTT协议报文内容"><a href="#计算MQTT协议报文内容" class="headerlink" title="计算MQTT协议报文内容"></a>计算MQTT协议报文内容</h2><p>MQTT(消息队列遥测传输)是一个基于客户端-服务器的消息发布&#x2F;订阅传输协议。</p><p><a href="https://mcxiaoke.gitbooks.io/mqtt-cn/content/">MQTT中文手册</a></p><h3 id="MQTT控制报文"><a href="#MQTT控制报文" class="headerlink" title="MQTT控制报文"></a>MQTT控制报文</h3><p>MQTT控制报文由三部分组成：</p><table><thead><tr><th>报文部分</th><th>描述</th></tr></thead><tbody><tr><td>Fixed header</td><td>固定报头，所有控制报文都包含</td></tr><tr><td>Variable header</td><td>可变报头，部分控制报文包含</td></tr><tr><td>Payload</td><td>有效载荷，部分控制报文包含</td></tr></tbody></table><h3 id="CONNECT-报文结构"><a href="#CONNECT-报文结构" class="headerlink" title="CONNECT 报文结构"></a>CONNECT 报文结构</h3><p>建立客户端（Client）到服务端（Server）的网络连接后，客户端发送给服务端的第一个报文必须是 CONNECT 报文（连接到服务端）。<br>并且在一次连接中，只能发送一次 CONNECT 报文，服务端会将客服端发送的第二个CONNECT报文当做协议违规处理并断开连接。<br>CONNECT报文结构为：<strong>固定报头+可变报头+有效载荷。</strong></p><h4 id="固定报头"><a href="#固定报头" class="headerlink" title="固定报头"></a>固定报头</h4><table>    <tr>        <th colspan="9"><center>固定报文格式</center></th>    </tr >    <tr>        <td ><center><strong>Bit</strong></center></td>        <td ><center><strong>7</strong></center></td>        <td ><center><strong>6</strong></center></td>        <td ><center><strong>5</strong></center></td>        <td ><center><strong>4</strong></center></td>        <td ><center><strong>3</strong></center></td>        <td ><center><strong>2</strong></center></td>        <td ><center><strong>1</strong></center></td>        <td ><center><strong>0</strong></center></td>    </tr >    <tr >        <td><center>byte1</center></td>        <td colspan="4"><center>MQTT控制报文的类型（1）</center></td>        <td colspan="4"><center>Reserved 保留位</center></td>    </tr>    <tr>        <td><center>byte2...</center></td>        <td colspan="8"><center>剩余长度</center></td>    </tr></table><p>其中<strong>剩余长度&#x3D;可变报头长度+有效载荷长度</strong> ，这个在最后计算。</p><h5 id="剩余长度详解"><a href="#剩余长度详解" class="headerlink" title="剩余长度详解"></a>剩余长度详解</h5><p><strong>位置：</strong>从第2个字节开始。</p><p>剩余长度（Remaining Length）表示当前报文剩余部分的字节数，包括可变报头和负载的数据。剩余长度不包括用于编码剩余长度字段本身的字节数。</p><p>剩余长度字段使用一个变长度编码方案，对小于128的值它使用单字节编码。若剩余长度大于等于128字节，则使用双字节低端编码的方式（低八位 - 高八位），最多使用 4 个字节来表示长度：</p><table><thead><tr><th align="center">字节数</th><th align="center">最小值</th><th align="center">最大值</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">0 (0x00)</td><td align="center">127 (0x7F)</td></tr><tr><td align="center">2</td><td align="center">128 (0x80, 0x01)</td><td align="center">16 383 (0xFF, 0x7F)</td></tr><tr><td align="center">3</td><td align="center">16 384 (0x80, 0x80, 0x01)</td><td align="center">2 097 151 (0xFF, 0xFF, 0x7F)</td></tr><tr><td align="center">4</td><td align="center">2 097 152 (0x80, 0x80, 0x80, 0x01)</td><td align="center">268 435 455 (0xFF, 0xFF, 0xFF, 0x7F)</td></tr></tbody></table><p>其中，每个字节的低七位用于编码数据，第八位延续位用于指示是否有更多的字节。因此每个字节可以编码127个数值（0111 1111）和一个延续位。</p><blockquote><p>例：</p><ol><li><p>小于128字节时：</p><p>剩余长度98个字节（0110 0010）转换成16进制为 0x62。</p></li><li><p>大于128字节小于16384字节时</p><p>剩余长度300个字节时，按照低八位 - 高八位排列，低八位的最高位为1（延续位）。</p><p>300 &#x3D; 1 0010 1100</p><p>低八位：1(固定)+300低7位(010 1100)  -&gt; 1010 1100</p><p>高八位：300低7位前(10) -&gt; 0000 0010</p><p>所以剩余长度表示为 AC 02</p></li></ol></blockquote><h5 id="得到固定报头："><a href="#得到固定报头：" class="headerlink" title="得到固定报头："></a>得到固定报头：</h5><p>16进制，后面均为16进制，不再说明：</p><figure><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token number">10</span> ??<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>其中<code>??</code>为剩余长度，由最后计算获得。</p><h4 id="可变报头"><a href="#可变报头" class="headerlink" title="可变报头"></a>可变报头</h4><p>某些MQTT控制报文包含一个可变报头部分。它在固定报头和负载之间。可变报头的内容根据报文类型的不同而不同。</p><p>CONNECT报文的可变报头按下列次序包含四个字段：协议名（Protocol Name），协议级别（Protocol Level），连接标志（Connect Flags）和保持连接（Keep Alive）。</p><h5 id="协议名-Protocol-Name"><a href="#协议名-Protocol-Name" class="headerlink" title="协议名 Protocol Name"></a>协议名 Protocol Name</h5><table><thead><tr><th align="center"></th><th align="center">说明</th><th align="center">7</th><th align="center">6</th><th align="center">5</th><th align="center">4</th><th align="center">3</th><th align="center">2</th><th align="center">1</th><th align="center">0</th></tr></thead><tbody><tr><td align="center">byte 1</td><td align="center">长度 MSB (0)</td><td align="center">0</td><td align="center">0</td><td align="center">0</td><td align="center">0</td><td align="center">0</td><td align="center">0</td><td align="center">0</td><td align="center">0</td></tr><tr><td align="center">byte 2</td><td align="center">长度 LSB (4)</td><td align="center">0</td><td align="center">0</td><td align="center">0</td><td align="center">0</td><td align="center">0</td><td align="center">1</td><td align="center">0</td><td align="center">0</td></tr><tr><td align="center">byte 3</td><td align="center">‘M’</td><td align="center">0</td><td align="center">1</td><td align="center">0</td><td align="center">0</td><td align="center">1</td><td align="center">1</td><td align="center">0</td><td align="center">1</td></tr><tr><td align="center">byte 4</td><td align="center">‘Q’</td><td align="center">0</td><td align="center">1</td><td align="center">0</td><td align="center">1</td><td align="center">0</td><td align="center">0</td><td align="center">0</td><td align="center">1</td></tr><tr><td align="center">byte 5</td><td align="center">‘T’</td><td align="center">0</td><td align="center">1</td><td align="center">0</td><td align="center">1</td><td align="center">0</td><td align="center">1</td><td align="center">0</td><td align="center">0</td></tr><tr><td align="center">byte 6</td><td align="center">‘T’</td><td align="center">0</td><td align="center">1</td><td align="center">0</td><td align="center">1</td><td align="center">0</td><td align="center">1</td><td align="center">0</td><td align="center">0</td></tr></tbody></table><p>协议名是表示协议名 <em>MQTT</em> 的UTF-8编码的字符串。MQTT规范的后续版本不会改变这个字符串的偏移和长度。</p><p>如果协议名不正确服务端<strong>可以</strong>断开客户端的连接，也<strong>可以</strong>按照某些其它规范继续处理CONNECT报文。对于后一种情况，按照本规范，服务端<strong>不能</strong>继续处理CONNECT报文。</p><blockquote><p>数据包检测工具，例如防火墙，可以使用协议名来识别MQTT流量。</p></blockquote><h5 id="协议级别-Protocol-Level"><a href="#协议级别-Protocol-Level" class="headerlink" title="协议级别 Protocol Level"></a>协议级别 Protocol Level</h5><table><thead><tr><th align="center"></th><th align="center">说明</th><th align="center">7</th><th align="center">6</th><th align="center">5</th><th align="center">4</th><th align="center">3</th><th align="center">2</th><th align="center">1</th><th align="center">0</th></tr></thead><tbody><tr><td align="center">byte 7</td><td align="center">Level(4)</td><td align="center">0</td><td align="center">0</td><td align="center">0</td><td align="center">0</td><td align="center">0</td><td align="center">1</td><td align="center">0</td><td align="center">0</td></tr></tbody></table><p>客户端用8位的无符号值表示协议的修订版本。对于3.1.1版协议，协议级别字段的值是4(0x04)。如果发现不支持的协议级别，服务端<strong>必须</strong>给发送一个返回码为0x01（不支持的协议级别）的CONNACK报文响应CONNECT报文，然后断开客户端的连接。</p><h5 id="连接标志-Connect-Flags"><a href="#连接标志-Connect-Flags" class="headerlink" title="连接标志 Connect Flags"></a>连接标志 Connect Flags</h5><p>连接标志字节包含一些用于指定MQTT连接行为的参数。它还指出有效载荷中的字段是否存在。</p><table>    <tr>        <th colspan="9"><center>连接标志</center></th>    </tr >    <tr>        <td ><center><strong>Bit</strong></center></td>        <td ><center><strong>7</strong></center></td>        <td ><center><strong>6</strong></center></td>        <td ><center><strong>5</strong></center></td>        <td ><center><strong>4</strong></center></td>        <td ><center><strong>3</strong></center></td>        <td ><center><strong>2</strong></center></td>        <td ><center><strong>1</strong></center></td>        <td ><center><strong>0</strong></center></td>    </tr >    <tr >        <td ><center> </center></td>        <td ><center>User Name Flag</center></td>        <td ><center>Password Flag</center></td>        <td ><center>Will Retain</center></td>        <td colspan="2"><center>Will QoS</center></td>        <td ><center>Will Flag</center></td>        <td ><center>Clean Session</center></td>        <td ><center>Reserved</center></td>    </tr>    <tr >        <td ><center>byte 8</center></td>        <td ><center>X</center></td>        <td ><center>X</center></td>        <td ><center>X</center></td>        <td ><center>X</center></td>        <td ><center>X</center></td>        <td ><center>X</center></td>        <td ><center>X</center></td>        <td ><center>0</center></td>    </tr></table><p>一共有6个：清理会话 Clean Session，遗嘱标志 Will Flag，遗嘱QoS Will QoS，遗嘱保留 Will Retain，密码标志 Password Flag，用户名标志 User Name Flag。</p><p>服务端<strong>必须</strong>验证CONNECT控制报文的保留标志位（第0位）是否为0，如果不为0必须断开客户端连接。</p><p>各个有效位的具体解释见参考文档</p><p><strong>一般使用 1100 0010 （用户名、密码、清理会话），转换成16进制为：C2</strong></p><h5 id="保持连接-Keep-Alive"><a href="#保持连接-Keep-Alive" class="headerlink" title="保持连接 Keep Alive"></a>保持连接 Keep Alive</h5><table><thead><tr><th align="center">Bit</th><th align="center">7</th><th align="center">6</th><th align="center">5</th><th align="center">4</th><th align="center">3</th><th align="center">2</th><th align="center">1</th><th align="center">0</th></tr></thead><tbody><tr><td align="center">byte 9</td><td align="center">保持连接 Keep Alive MSB</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">byte 10</td><td align="center">保持连接 Keep Alive LSB</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><p>保持连接（Keep Alive）是一个以秒为单位的时间间隔，表示为一个16位的字，它是指在客户端传输完成一个控制报文的时刻到发送下一个报文的时刻，两者之间允许空闲的最大时间间隔。客户端负责保证控制报文发送的时间间隔不超过保持连接的值。如果没有任何其它的控制报文可以发送，客户端<strong>必须</strong>发送一个PINGREQ报文。</p><blockquote><p>如：设置100s表示成16进制为 00 64</p></blockquote><table>    <tr>        <th colspan="10"><center>可变报头非规范示例</center></th>    </tr >    <tr>        <td ><center></center></td>        <td ><center><strong>Description</strong></center></td>        <td ><center><strong>7</strong></center></td>        <td ><center><strong>6</strong></center></td>        <td ><center><strong>5</strong></center></td>        <td ><center><strong>4</strong></center></td>        <td ><center><strong>3</strong></center></td>        <td ><center><strong>2</strong></center></td>        <td ><center><strong>1</strong></center></td>        <td ><center><strong>0</strong></center></td>     </tr >    <tr>        <th colspan="10"><center>Protocol Name</center></th>    </tr >    <tr>        <td ><center>byte 1</center></td>        <td ><center>Length MSB(0)</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>     </tr >    <tr>        <td ><center>byte 2</center></td>        <td ><center>Length LSB(4)</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>1</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>     </tr >    <tr>        <td ><center>byte 3</center></td>        <td ><center>'M'</center></td>        <td ><center>0</center></td>        <td ><center>1</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>1</center></td>        <td ><center>1</center></td>        <td ><center>0</center></td>        <td ><center>1</center></td>     </tr >    <tr>        <td ><center>byte 4</center></td>        <td ><center>'Q'</center></td>        <td ><center>0</center></td>        <td ><center>1</center></td>        <td ><center>0</center></td>        <td ><center>1</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>1</center></td>     </tr >    <tr>        <td ><center>byte 5</center></td>        <td ><center>'T'</center></td>        <td ><center>0</center></td>        <td ><center>1</center></td>        <td ><center>0</center></td>        <td ><center>1</center></td>        <td ><center>0</center></td>        <td ><center>1</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>     </tr >    <tr>        <td ><center>byte 6</center></td>        <td ><center>'T'</center></td>        <td ><center>0</center></td>        <td ><center>1</center></td>        <td ><center>0</center></td>        <td ><center>1</center></td>        <td ><center>0</center></td>        <td ><center>1</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>     </tr >    <tr>        <th colspan="10"><center>Protocol Level</center></th>    </tr >    <tr>        <td ><center>byte 7</center></td>        <td ><center>Level(4)</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>1</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>     </tr >    <tr>        <th colspan="10"><center>Connect Flags</center></th>    </tr >    <tr >        <td rowspan="7"><center>byte 8</center></td>        <td ><center>User Name Flag(1)</center></td>        <td rowspan="7"><center>1</center></td>        <td rowspan="7"><center>1</center></td>        <td rowspan="7"><center>0</center></td>        <td rowspan="7"><center>0</center></td>        <td rowspan="7"><center>1</center></td>        <td rowspan="7"><center>1</center></td>        <td rowspan="7"><center>1</center></td>        <td rowspan="7"><center>0</center></td>    </tr>    <tr >        <td ><center>Password Flag(1)</center></td>    </tr>    <tr >        <td ><center>Will Retain(0)</center></td>    </tr>    <tr >        <td ><center>Will QoS(01)</center></td>    </tr>    <tr >        <td ><center>Will Flag(1)</center></td>    </tr>    <tr >        <td ><center>Clean Session(1)</center></td>    </tr>    <tr >        <td ><center>Reserved(0)</center></td>    </tr>    <tr>        <th colspan="10"><center>Keep Alive</center></th>    </tr >    <tr >        <td ><center>byte 9</center></td>        <td ><center>Keep Alive MSB(0)</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>    </tr>    <tr >        <td ><center>byte 10</center></td>        <td ><center>Keep Alive LSB(10)</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>1</center></td>        <td ><center>0</center></td>        <td ><center>1</center></td>        <td ><center>0</center></td>    </tr></table><h5 id="得到可变报头"><a href="#得到可变报头" class="headerlink" title="得到可变报头"></a>得到可变报头</h5><p>用户名、密码、清理回话，100s</p><figure><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token number">00</span> <span class="token number">04</span> 4D <span class="token number">51</span> <span class="token number">54</span> <span class="token number">54</span> <span class="token number">04</span> C2 <span class="token number">00</span> <span class="token number">64</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h4 id="有效载荷"><a href="#有效载荷" class="headerlink" title="有效载荷"></a>有效载荷</h4><blockquote><p>需要用到的工具：</p><p><a href="http://www.metools.info/code/c25.html">在线HMAC计算-ME2在线工具 (metools.info)</a></p><p><a href="https://www.rapidtables.com/convert/number/hex-to-ascii.html">Hex to ASCII Text String Converter (rapidtables.com)</a></p><p><a href="https://www.rapidtables.com/convert/number/ascii-to-hex.html">ASCII to Hex | Text to Hex Code Converter (rapidtables.com)</a></p></blockquote><p>对于各参数的具体信息可以参考阿里云文档：<a href="https://help.aliyun.com/zh/iot/user-guide/establish-mqtt-connections-over-tcp#section-llx-5ay-oma">MQTT-TCP连接通信 (aliyun.com)</a></p><p>有效载荷（payload）包含一个或多个以长度为前缀的字段，可变报头中的标志决定是否包含这些字段。如果包含的话，必须按这个顺序出现：客户端标识符，遗嘱主题，遗嘱消息，用户名，密码，且每个字段必须使用UTF-8编码字符串（<strong>需要在最前面添加表示长度的16进制字符</strong>）</p><table>    <tr>        <th colspan="2"><center>每个字段示例</center></th>    </tr >    <tr>        <th ><center>Bit</center></th>        <th ><center>7 - 0</center></th>    </tr >    <tr >        <td ><center>byte 1</center></td>        <td ><center>数据长度 MSB</center></td>    </tr>    <tr >        <td ><center>byte 2</center></td>        <td ><center>数据长度 LSB</center></td>    </tr>    <tr >        <td ><center>byte 3...</center></td>        <td ><center>数据长度大于0，这里就是数据部分</center></td>    </tr></table><p>我们此时需要去阿里云获取三元组（我随便编一编）：</p><figure><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"ProductKey"</span><span class="token operator">:</span> <span class="token string">"ksf114514"</span><span class="token punctuation">,</span>  <span class="token property">"DeviceName"</span><span class="token operator">:</span> <span class="token string">"Air601"</span><span class="token punctuation">,</span>  <span class="token property">"DeviceSecret"</span><span class="token operator">:</span> <span class="token string">"ksf1145141919810dj15ltc137666"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>我们约定：</p><ul><li>#：ProductKey</li><li>*：DeviceName</li><li>&amp;：DeviceSecret</li></ul><h5 id="客户端标识符"><a href="#客户端标识符" class="headerlink" title="客户端标识符"></a>客户端标识符</h5><p>通用格式：</p><figure><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json">*|securemode=<span class="token number">3</span><span class="token punctuation">,</span>signmethod=hmacsha1|<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>进行填充：</p><figure><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json">Air601|securemode=<span class="token number">3</span><span class="token punctuation">,</span>signmethod=hmacsha1|<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>转换为16进制：</p><figure><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token number">41</span> <span class="token number">69</span> <span class="token number">72</span> <span class="token number">36</span> <span class="token number">30</span> <span class="token number">31</span> 7C <span class="token number">73</span> <span class="token number">65</span> <span class="token number">63</span> <span class="token number">75</span> <span class="token number">72</span> <span class="token number">65</span> 6D 6F <span class="token number">64</span> <span class="token number">65</span> 3D <span class="token number">33</span> 2C <span class="token number">73</span> <span class="token number">69</span> <span class="token number">67</span> 6E 6D <span class="token number">65</span> <span class="token number">74</span> <span class="token number">68</span> 6F <span class="token number">64</span> 3D <span class="token number">68</span> 6D <span class="token number">61</span> <span class="token number">63</span> <span class="token number">73</span> <span class="token number">68</span> <span class="token number">61</span> <span class="token number">31</span> 7C<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>添加长度（40 -&gt; 00 28）：</p><figure><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token number">00</span> <span class="token number">28</span> <span class="token number">41</span> <span class="token number">69</span> <span class="token number">72</span> <span class="token number">36</span> <span class="token number">30</span> <span class="token number">31</span> 7C <span class="token number">73</span> <span class="token number">65</span> <span class="token number">63</span> <span class="token number">75</span> <span class="token number">72</span> <span class="token number">65</span> 6D 6F <span class="token number">64</span> <span class="token number">65</span> 3D <span class="token number">33</span> 2C <span class="token number">73</span> <span class="token number">69</span> <span class="token number">67</span> 6E 6D <span class="token number">65</span> <span class="token number">74</span> <span class="token number">68</span> 6F <span class="token number">64</span> 3D <span class="token number">68</span> 6D <span class="token number">61</span> <span class="token number">63</span> <span class="token number">73</span> <span class="token number">68</span> <span class="token number">61</span> <span class="token number">31</span> 7C<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h5 id="用户名"><a href="#用户名" class="headerlink" title="用户名"></a>用户名</h5><p>通用格式：</p><figure><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json">*&amp;#<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>进行填充：</p><figure><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json">Air601&amp;ksf114514<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>转换为16进制</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">41 69 72 36 30 31 26 6B 73 66 31 31 34 35 31 34<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>添加长度（16 -&gt; 00 10）</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">00 10 41 69 72 36 30 31 26 6B 73 66 31 31 34 35 31 34<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h5 id="密码"><a href="#密码" class="headerlink" title="密码"></a>密码</h5><p>通用格式：</p><figure><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json">clientId*deviceName*productKey#<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>进行填充：</p><figure><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json">clientIdAir601deviceNameAir601productKeyksf114514<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>加密：</p><p>将填充后的内容<strong>使用DeviceSecret做密钥</strong>，进行<strong>HmacSHA1加密</strong>：</p><figure><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json">e4b931f38037ef7241455709458b4b630b22eac2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>转为16进制：</p><figure><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token number">65</span> <span class="token number">34</span> <span class="token number">62</span> <span class="token number">39</span> <span class="token number">33</span> <span class="token number">31</span> <span class="token number">66</span> <span class="token number">33</span> <span class="token number">38</span> <span class="token number">30</span> <span class="token number">33</span> <span class="token number">37</span> <span class="token number">65</span> <span class="token number">66</span> <span class="token number">37</span> <span class="token number">32</span> <span class="token number">34</span> <span class="token number">31</span> <span class="token number">34</span> <span class="token number">35</span> <span class="token number">35</span> <span class="token number">37</span> <span class="token number">30</span> <span class="token number">39</span> <span class="token number">34</span> <span class="token number">35</span> <span class="token number">38</span> <span class="token number">62</span> <span class="token number">34</span> <span class="token number">62</span> <span class="token number">36</span> <span class="token number">33</span> <span class="token number">30</span> <span class="token number">62</span> <span class="token number">32</span> <span class="token number">32</span> <span class="token number">65</span> <span class="token number">61</span> <span class="token number">63</span> <span class="token number">32</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>添加长度（40 -&gt; 00 28）</p><figure><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token number">00</span> <span class="token number">28</span> <span class="token number">65</span> <span class="token number">34</span> <span class="token number">62</span> <span class="token number">39</span> <span class="token number">33</span> <span class="token number">31</span> <span class="token number">66</span> <span class="token number">33</span> <span class="token number">38</span> <span class="token number">30</span> <span class="token number">33</span> <span class="token number">37</span> <span class="token number">65</span> <span class="token number">66</span> <span class="token number">37</span> <span class="token number">32</span> <span class="token number">34</span> <span class="token number">31</span> <span class="token number">34</span> <span class="token number">35</span> <span class="token number">35</span> <span class="token number">37</span> <span class="token number">30</span> <span class="token number">39</span> <span class="token number">34</span> <span class="token number">35</span> <span class="token number">38</span> <span class="token number">62</span> <span class="token number">34</span> <span class="token number">62</span> <span class="token number">36</span> <span class="token number">33</span> <span class="token number">30</span> <span class="token number">62</span> <span class="token number">32</span> <span class="token number">32</span> <span class="token number">65</span> <span class="token number">61</span> <span class="token number">63</span> <span class="token number">32</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h5 id="合并，得到最终有效载荷"><a href="#合并，得到最终有效载荷" class="headerlink" title="合并，得到最终有效载荷"></a>合并，得到最终有效载荷</h5><p>根据我们在可变报头中的选择：<strong>最终有效载荷&#x3D;客户端标识符+用户名+密码</strong></p><figure><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token number">00</span> <span class="token number">28</span> <span class="token number">41</span> <span class="token number">69</span> <span class="token number">72</span> <span class="token number">36</span> <span class="token number">30</span> <span class="token number">31</span> 7C <span class="token number">73</span> <span class="token number">65</span> <span class="token number">63</span> <span class="token number">75</span> <span class="token number">72</span> <span class="token number">65</span> 6D 6F <span class="token number">64</span> <span class="token number">65</span> 3D <span class="token number">33</span> 2C <span class="token number">73</span> <span class="token number">69</span> <span class="token number">67</span> 6E 6D <span class="token number">65</span> <span class="token number">74</span> <span class="token number">68</span> 6F <span class="token number">64</span> 3D <span class="token number">68</span> 6D <span class="token number">61</span> <span class="token number">63</span> <span class="token number">73</span> <span class="token number">68</span> <span class="token number">61</span> <span class="token number">31</span> 7C <span class="token number">00</span> <span class="token number">10</span> <span class="token number">41</span> <span class="token number">69</span> <span class="token number">72</span> <span class="token number">36</span> <span class="token number">30</span> <span class="token number">31</span> <span class="token number">26</span> 6B <span class="token number">73</span> <span class="token number">66</span> <span class="token number">31</span> <span class="token number">31</span> <span class="token number">34</span> <span class="token number">35</span> <span class="token number">31</span> <span class="token number">34</span> <span class="token number">00</span> <span class="token number">28</span> <span class="token number">65</span> <span class="token number">34</span> <span class="token number">62</span> <span class="token number">39</span> <span class="token number">33</span> <span class="token number">31</span> <span class="token number">66</span> <span class="token number">33</span> <span class="token number">38</span> <span class="token number">30</span> <span class="token number">33</span> <span class="token number">37</span> <span class="token number">65</span> <span class="token number">66</span> <span class="token number">37</span> <span class="token number">32</span> <span class="token number">34</span> <span class="token number">31</span> <span class="token number">34</span> <span class="token number">35</span> <span class="token number">35</span> <span class="token number">37</span> <span class="token number">30</span> <span class="token number">39</span> <span class="token number">34</span> <span class="token number">35</span> <span class="token number">38</span> <span class="token number">62</span> <span class="token number">34</span> <span class="token number">62</span> <span class="token number">36</span> <span class="token number">33</span> <span class="token number">30</span> <span class="token number">62</span> <span class="token number">32</span> <span class="token number">32</span> <span class="token number">65</span> <span class="token number">61</span> <span class="token number">63</span> <span class="token number">32</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h4 id="得到最终报文"><a href="#得到最终报文" class="headerlink" title="得到最终报文"></a>得到最终报文</h4><p>首先计算固定报头中的剩余长度：<strong>剩余长度&#x3D;可变报头长度+有效载荷长度</strong></p><p>可得剩余长度为：10+102&#x3D;112 -&gt; 70。（小于128，所以正常编码）</p><p>最终报文：<strong>固定报头+可变报头+有效载荷</strong></p><figure><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token number">10</span> <span class="token number">70</span> <span class="token number">00</span> <span class="token number">04</span> 4D <span class="token number">51</span> <span class="token number">54</span> <span class="token number">54</span> <span class="token number">04</span> C2 <span class="token number">00</span> <span class="token number">64</span> <span class="token number">00</span> <span class="token number">28</span> <span class="token number">41</span> <span class="token number">69</span> <span class="token number">72</span> <span class="token number">36</span> <span class="token number">30</span> <span class="token number">31</span> 7C <span class="token number">73</span> <span class="token number">65</span> <span class="token number">63</span> <span class="token number">75</span> <span class="token number">72</span> <span class="token number">65</span> 6D 6F <span class="token number">64</span> <span class="token number">65</span> 3D <span class="token number">33</span> 2C <span class="token number">73</span> <span class="token number">69</span> <span class="token number">67</span> 6E 6D <span class="token number">65</span> <span class="token number">74</span> <span class="token number">68</span> 6F <span class="token number">64</span> 3D <span class="token number">68</span> 6D <span class="token number">61</span> <span class="token number">63</span> <span class="token number">73</span> <span class="token number">68</span> <span class="token number">61</span> <span class="token number">31</span> 7C <span class="token number">00</span> <span class="token number">10</span> <span class="token number">41</span> <span class="token number">69</span> <span class="token number">72</span> <span class="token number">36</span> <span class="token number">30</span> <span class="token number">31</span> <span class="token number">26</span> 6B <span class="token number">73</span> <span class="token number">66</span> <span class="token number">31</span> <span class="token number">31</span> <span class="token number">34</span> <span class="token number">35</span> <span class="token number">31</span> <span class="token number">34</span> <span class="token number">00</span> <span class="token number">28</span> <span class="token number">65</span> <span class="token number">34</span> <span class="token number">62</span> <span class="token number">39</span> <span class="token number">33</span> <span class="token number">31</span> <span class="token number">66</span> <span class="token number">33</span> <span class="token number">38</span> <span class="token number">30</span> <span class="token number">33</span> <span class="token number">37</span> <span class="token number">65</span> <span class="token number">66</span> <span class="token number">37</span> <span class="token number">32</span> <span class="token number">34</span> <span class="token number">31</span> <span class="token number">34</span> <span class="token number">35</span> <span class="token number">35</span> <span class="token number">37</span> <span class="token number">30</span> <span class="token number">39</span> <span class="token number">34</span> <span class="token number">35</span> <span class="token number">38</span> <span class="token number">62</span> <span class="token number">34</span> <span class="token number">62</span> <span class="token number">36</span> <span class="token number">33</span> <span class="token number">30</span> <span class="token number">62</span> <span class="token number">32</span> <span class="token number">32</span> <span class="token number">65</span> <span class="token number">61</span> <span class="token number">63</span> <span class="token number">32</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>现在可以愉快的与阿里云物联网平台建立连接了~</p><h2 id="与阿里云物联网平台建立连接"><a href="#与阿里云物联网平台建立连接" class="headerlink" title="与阿里云物联网平台建立连接"></a>与阿里云物联网平台建立连接</h2><h3 id="获取连接地址"><a href="#获取连接地址" class="headerlink" title="获取连接地址"></a>获取连接地址</h3><p>直接在阿里云物联网平台的控制台就可以看见，比如我的（瞎编的）：<code>iot-ksf114514.mqtt.iothub.aliyuncs.com</code>。</p><h3 id="建立TCP连接"><a href="#建立TCP连接" class="headerlink" title="建立TCP连接"></a>建立TCP连接</h3><p>使用串口助手发送：</p><figure><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json">AT+CIPSTART=<span class="token string">"TCP"</span><span class="token punctuation">,</span><span class="token string">"iot-ksf114514.mqtt.iothub.aliyuncs.com"</span><span class="token punctuation">,</span><span class="token number">1883</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>如果建立连接10s不上报消息，阿里云物联网平台会发送<code>CLOSED</code>，并断开连接，这时候需要我们关闭TCP连接然后重新建立连接。</p><p>关闭连接：</p><figure><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json">AT+CIPCLOSE<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h3 id="发送报文"><a href="#发送报文" class="headerlink" title="发送报文"></a>发送报文</h3><p>这里都是在单连接的情况（<code>AT+CIPMUX=0</code>）。</p><p>根据文档，有两种发送方式：</p><ol><li><p><code>AT+CIPSEND=&lt;length&gt;</code></p><p>需要指定发送长度，达到指定长度后自动发送。</p></li><li><p><code>AT+CIPSENDEX=&lt;length&gt;</code></p><p>指定发送长度，但可以使用字符串 <code> \0 (0x5c, 0x30 ASCII)</code> 触发数据发送。</p></li></ol><p>选择哪种？从实践来看，因为使用16进制发送CONNECT报文，报文中出现00同样会触发数据发送（emmmm），所以使用第一种指定长度的发送方式，毕竟报文已经提前算好了。</p><h4 id="设置发送"><a href="#设置发送" class="headerlink" title="设置发送"></a>设置发送</h4><p>最终报文长度：114</p><figure><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json">AT+CIPSEND=<span class="token number">114</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h4 id="发送报文-1"><a href="#发送报文-1" class="headerlink" title="发送报文"></a>发送报文</h4><p>注意，这里要使用16进制（就是切换成HEX）进行发送：</p><figure><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token number">10</span> <span class="token number">70</span> <span class="token number">00</span> <span class="token number">04</span> 4D <span class="token number">51</span> <span class="token number">54</span> <span class="token number">54</span> <span class="token number">04</span> C2 <span class="token number">00</span> <span class="token number">64</span> <span class="token number">00</span> <span class="token number">28</span> <span class="token number">41</span> <span class="token number">69</span> <span class="token number">72</span> <span class="token number">36</span> <span class="token number">30</span> <span class="token number">31</span> 7C <span class="token number">73</span> <span class="token number">65</span> <span class="token number">63</span> <span class="token number">75</span> <span class="token number">72</span> <span class="token number">65</span> 6D 6F <span class="token number">64</span> <span class="token number">65</span> 3D <span class="token number">33</span> 2C <span class="token number">73</span> <span class="token number">69</span> <span class="token number">67</span> 6E 6D <span class="token number">65</span> <span class="token number">74</span> <span class="token number">68</span> 6F <span class="token number">64</span> 3D <span class="token number">68</span> 6D <span class="token number">61</span> <span class="token number">63</span> <span class="token number">73</span> <span class="token number">68</span> <span class="token number">61</span> <span class="token number">31</span> 7C <span class="token number">00</span> <span class="token number">10</span> <span class="token number">41</span> <span class="token number">69</span> <span class="token number">72</span> <span class="token number">36</span> <span class="token number">30</span> <span class="token number">31</span> <span class="token number">26</span> 6B <span class="token number">73</span> <span class="token number">66</span> <span class="token number">31</span> <span class="token number">31</span> <span class="token number">34</span> <span class="token number">35</span> <span class="token number">31</span> <span class="token number">34</span> <span class="token number">00</span> <span class="token number">28</span> <span class="token number">65</span> <span class="token number">34</span> <span class="token number">62</span> <span class="token number">39</span> <span class="token number">33</span> <span class="token number">31</span> <span class="token number">66</span> <span class="token number">33</span> <span class="token number">38</span> <span class="token number">30</span> <span class="token number">33</span> <span class="token number">37</span> <span class="token number">65</span> <span class="token number">66</span> <span class="token number">37</span> <span class="token number">32</span> <span class="token number">34</span> <span class="token number">31</span> <span class="token number">34</span> <span class="token number">35</span> <span class="token number">35</span> <span class="token number">37</span> <span class="token number">30</span> <span class="token number">39</span> <span class="token number">34</span> <span class="token number">35</span> <span class="token number">38</span> <span class="token number">62</span> <span class="token number">34</span> <span class="token number">62</span> <span class="token number">36</span> <span class="token number">33</span> <span class="token number">30</span> <span class="token number">62</span> <span class="token number">32</span> <span class="token number">32</span> <span class="token number">65</span> <span class="token number">61</span> <span class="token number">63</span> <span class="token number">32</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h3 id="返回参数"><a href="#返回参数" class="headerlink" title="返回参数"></a>返回参数</h3><p>串口返回数据：</p><figure><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">[</span>Rx<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">02</span><span class="token operator">:</span><span class="token number">12</span><span class="token operator">:</span><span class="token number">09.437</span><span class="token punctuation">]</span> 0D 0A 2B <span class="token number">49</span> <span class="token number">50</span> <span class="token number">44</span> 2C <span class="token number">34</span> 3A <span class="token number">20</span> <span class="token number">02</span> <span class="token number">00</span> <span class="token number">00</span> 0D 0A<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p> 末尾的<code>0D</code> 是回车符，<code>0A</code>是换行符，因为使用串口助手，这俩不可避免。</p><p>其中前面的 <code>0D 0A 2B 49 50 44 2C 34 3A</code>，是<code>+IPD,4</code>，我们只需要关注后面的字节：**<code>20 02 00 00</code>** 。</p><p>要知道这玩意的意思，首先要了解CONNACK – 确认连接请求。</p><h2 id="CONNACK-–-确认连接请求"><a href="#CONNACK-–-确认连接请求" class="headerlink" title="CONNACK – 确认连接请求"></a>CONNACK – 确认连接请求</h2><p>服务端发送CONNACK报文响应从客户端收到的CONNECT报文。服务端发送给客户端的第一个报文<strong>必须</strong>是CONNACK。</p><h3 id="固定报头-1"><a href="#固定报头-1" class="headerlink" title="固定报头"></a>固定报头</h3><table>    <tr>        <th colspan="9"><center>CONNACK报文固定报头</center></th>    </tr >    <tr>        <th ><center>Bit</center></th>        <th ><center>7</center></th>        <th ><center>6</center></th>        <th ><center>5</center></th>        <th ><center>4</center></th>        <th ><center>3</center></th>        <th ><center>2</center></th>        <th ><center>1</center></th>        <th ><center>0</center></th>    </tr >    <tr >        <td ><center>byte 1</center></td>        <td colspan="4"><center>MQTT报文类型(2)</center></td>        <td colspan="4"><center>Reserved 保留位</center></td>    </tr>    <tr >        <td ><center></center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>1</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>    </tr>    <tr >        <td ><center>byte 2...</center></td>        <td colspan="8"><center>剩余长度(2)</center></td>    </tr>    <tr >        <td ><center></center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>1</center></td>        <td ><center>0</center></td>    </tr></table><p><strong>剩余长度字段：</strong>表示可变报头的长度。对于CONNACK报文这个值等于2。</p><h4 id="固定报头编码"><a href="#固定报头编码" class="headerlink" title="固定报头编码"></a>固定报头编码</h4><figure><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token number">20</span> <span class="token number">02</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h3 id="可变报头-1"><a href="#可变报头-1" class="headerlink" title="可变报头"></a>可变报头</h3><table>    <tr>        <th colspan="10"><center>CONNACK报文可变报头</center></th>    </tr >    <tr>        <th ><center></center></th>        <th ><center>描述</center></th>        <th ><center>7</center></th>        <th ><center>6</center></th>        <th ><center>5</center></th>        <th ><center>4</center></th>        <th ><center>3</center></th>        <th ><center>2</center></th>        <th ><center>1</center></th>        <th ><center>0</center></th>    </tr >    <tr >        <td colspan="2"><center>连接确认标志</center></td>        <td colspan="7"><center>Reserved 保留位</center></td>        <td ><center>SP<sup>1<sup></center></td>    </tr>    <tr >        <td ><center>byte1</center></td>        <td ><center></center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>0</center></td>        <td ><center>X</center></td>    </tr>    <tr >        <td colspan="10"><center>连接返回码</center></td>    </tr>    <tr >        <td ><center>byte2</center></td>        <td ><center></center></td>        <td ><center>X</center></td>        <td ><center>X</center></td>        <td ><center>X</center></td>        <td ><center>X</center></td>        <td ><center>X</center></td>        <td ><center>X</center></td>        <td ><center>X</center></td>        <td ><center>X</center></td>    </tr></table><h4 id="连接确认标志-Connect-Acknowledge-Flags"><a href="#连接确认标志-Connect-Acknowledge-Flags" class="headerlink" title="连接确认标志 Connect Acknowledge Flags"></a>连接确认标志 Connect Acknowledge Flags</h4><p>第1个字节是 <em>连接确认标志</em>，位7-1是保留位且<strong>必须</strong>设置为0。 第0 (SP)位 是当前会话（Session Present）标志。</p><h5 id="当前会话-Session-Present"><a href="#当前会话-Session-Present" class="headerlink" title="当前会话 Session Present"></a>当前会话 Session Present</h5><p><strong>位置：</strong>连接确认标志的第0位。</p><p>如果服务端收到清理会话（CleanSession）标志为1的连接，除了将CONNACK报文中的返回码设置为0之外，还<strong>必须</strong>将CONNACK报文中的当前会话设置（Session Present）标志为0。</p><p>)我们在发送报文中清理会话标志位为1，所以返回码为0。（其他情况参阅资料）</p><h4 id="连接返回码-Connect-Return-code"><a href="#连接返回码-Connect-Return-code" class="headerlink" title="连接返回码 Connect Return code"></a>连接返回码 Connect Return code</h4><p><strong>位置：</strong>可变报头的第2个字节。</p><p>连接返回码字段使用一个字节的无符号值，在下表中列出。</p><table><thead><tr><th>值</th><th>返回码响应</th><th>描述</th></tr></thead><tbody><tr><td>0</td><td>0x00连接已接受</td><td>连接已被服务端接受</td></tr><tr><td>1</td><td>0x01连接已拒绝，不支持的协议版本</td><td>服务端不支持客户端请求的MQTT协议级别</td></tr><tr><td>2</td><td>0x02连接已拒绝，不合格的客户端标识符</td><td>客户端标识符是正确的UTF-8编码，但服务端不允许使用</td></tr><tr><td>3</td><td>0x03连接已拒绝，服务端不可用</td><td>网络连接已建立，但MQTT服务不可用</td></tr><tr><td>4</td><td>0x04连接已拒绝，无效的用户名或密码</td><td>用户名或密码的数据格式无效</td></tr><tr><td>5</td><td>0x05连接已拒绝，未授权</td><td>客户端未被授权连接到此服务器</td></tr><tr><td>6-255</td><td></td><td>保留</td></tr></tbody></table><p>如果服务端收到一个合法的CONNECT报文，但出于某些原因无法处理它，服务端应该尝试发送一个包含非零返回码（表格中的某一个）的CONNACK报文。如果服务端发送了一个包含非零返回码的CONNACK报文，那么它<strong>必须</strong>关闭网络连接。</p><h4 id="正确连接的可变报头"><a href="#正确连接的可变报头" class="headerlink" title="正确连接的可变报头"></a>正确连接的可变报头</h4><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">00 00<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h3 id="有效载荷-1"><a href="#有效载荷-1" class="headerlink" title="有效载荷"></a>有效载荷</h3><p>CONNACK报文没有有效载荷。</p><h2 id="最终结果"><a href="#最终结果" class="headerlink" title="最终结果"></a>最终结果</h2><p>串口返回数据：</p><figure><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">[</span>Rx<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">02</span><span class="token operator">:</span><span class="token number">12</span><span class="token operator">:</span><span class="token number">09.437</span><span class="token punctuation">]</span> 0D 0A 2B <span class="token number">49</span> <span class="token number">50</span> <span class="token number">44</span> 2C <span class="token number">34</span> 3A <span class="token number">20</span> <span class="token number">02</span> <span class="token number">00</span> <span class="token number">00</span> 0D 0A<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>根据我们在串口看到的返回结果<code>20 02 00 00</code>，可知连接已经建立成功。</p><p>这时候在阿里云物联网平台的设备页面，我们看见我们的设备上线了！</p><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">最后上线时间  2023/07/23 02:12:13.847<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><blockquote><p><a href="https://doc.openluat.com/wiki/49">Luat社区 (openluat.com)</a></p><p><a href="https://help.aliyun.com/zh/iot/user-guide/establish-mqtt-connections-over-tcp#section-llx-5ay-oma">MQTT-TCP连接通信 (aliyun.com)</a></p><p><a href="https://mcxiaoke.gitbooks.io/mqtt-cn/content/">MQTT中文手册</a></p><p><a href="https://www.codenong.com/cs105877395/">MQTT协议学习一、MQTT控制报文的结构与CONNECT报文构建 | 码农家园 (codenong.com)</a></p><p><a href="https://mcxiaoke.gitbooks.io/mqtt-cn/content/mqtt/01-Introduction.html">第一章 - MQTT介绍 · MQTT协议中文版 (gitbooks.io)</a></p><p><a href="https://blog.csdn.net/weixin_52672120/article/details/112308318">MQTT - CONNECT报文_mqtt_connect_Hebo42的博客-CSDN博客</a></p><p><a href="https://blog.csdn.net/cw_huang/article/details/105815349">ESP8266-12F AT指令连接阿里云_GEEK.攻城狮的博客-CSDN博客</a></p><p><a href="https://www.cnblogs.com/huangcw/p/12778758.html">ESP8266-12F AT指令连接阿里云 - 黄豆爸 - 博客园 (cnblogs.com)</a></p><p><a href="https://baijiahao.baidu.com/s?id=1715575644678049062&wfr=spider&for=pc">MQTT协议报文格式解析 (baidu.com)</a></p></blockquote>