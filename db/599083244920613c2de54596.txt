<h1 id="CubeMX初配置PWM-amp-驱动MG995舵机"><a href="#CubeMX初配置PWM-amp-驱动MG995舵机" class="headerlink" title="CubeMX初配置PWM&amp;驱动MG995舵机"></a>CubeMX初配<hr /><h1 id="CubeMX初配置PWM-amp-驱动MG995舵机"><a href="#CubeMX初配置PWM-amp-驱动MG995舵机" class="headerlink" title="CubeMX初配置PWM&amp;驱动MG995舵机"></a>CubeMX初配置PWM&amp;驱动MG995舵机</h1><p><del>最近在重学STM32，发现大二上整的像s一样</del></p><h3 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h3><blockquote><p>[<a href="https://www.emoe.xyz/bonjour-stm32-timer-cookbook/">Bonjour STM32] No.6-定时器简单理解与使用 - Emoe-Studio</a></p><p><a href="https://blog.csdn.net/qq_42967008/article/details/89267010"> STM32CubeMX学习笔记1——PWM配置_夏沫不学习的博客-CSDN博客_cubemx配置pwm</a></p><p><a href="https://www.jianshu.com/p/6151e6d4b207">HAL库函数之呼吸灯——PWM波 - 简书 (jianshu.com)</a></p><p><a href="https://blog.csdn.net/he__yuan/article/details/79195435">(37条消息) MG995舵机工作原理及基于STM32的驱动源代码_斜杠青年&#x2F;的博客-CSDN博客_mg995舵机</a></p></blockquote><h3 id="PWM"><a href="#PWM" class="headerlink" title="PWM"></a>PWM</h3><p>个人理解：PWM就是方波，具体使用的时候改变这玩意的占空比就行。 <span class="diana_biu"></span></p><p><img src="https://s2.ax1x.com/2019/09/12/nBut8s.gif"></p><h3 id="配置PWM"><a href="#配置PWM" class="headerlink" title="配置PWM"></a>配置PWM</h3><p>要知道 <code>CNT</code> (计数器当前值), <code>ARR</code> (自动重装载值), <code>CCRx</code> (捕获&#x2F;比较寄存器值)</p><p>当 <code>CNT</code> 小于 <code>CCRx</code> 时，通道输出高电平；</p><p>当 <code>CNT</code> 等于或大于 <code>CCRx</code> 时，通道输出低电平；</p><p><img src="https://s1.ax1x.com/2020/06/13/tjSq39.jpg"></p><p>因为目前使用 <code>STM32F103C8T6</code> ,首先设置使用外部时钟，再设置时钟为72Mhz</p><p><img src="/img/posts/mg995/0.webp" alt="3"></p><p>直接输入 72 就行，CubeMX 会自动配置</p><p><img src="/img/posts/mg995/4.webp" alt="4"></p><p>然后贴一段参考博客里的： <span class="diana_bixin"></span></p><blockquote><p>确定时钟源频率后，我们就可以设置<strong>PSC</strong>和<strong>ARR</strong>了。按照之前的要求，我们想让定时器的溢出频率为5Hz，则240MHz&#x2F;5Hz&#x3D;48M分频。我们知道，一个模值（“容量”）为48M的定时器即可完成此分频，可是我们的<strong>CNT</strong>寄存器只有16位，也就是说模值最大设置为65535，远远不够呀。这就是预分频器<strong>PSC</strong>存在的意义了，“时钟源太快了，<strong>CNT</strong>没有足够的容量来实现较长周期的定时，所以需要预分频器把时钟降慢一些”。所以说，我们把48M拆成2400*20000就可以了。注意实际填入<strong>PSC</strong>和<strong>ARR</strong>都有一个“-1”，这是因为定时器是从0开始计数的，由0计到239正好是240次。总结一个定时器频率公式，就是这样：</p></blockquote><p>$$f_{TIM}&#x3D;\frac{f_{CLK}}{(PSC+1)\times(ARR+1)}$$</p><p>改变占空比只需要改变对应计时器的 CCRx 就行</p><p>$$Duty_x&#x3D;\frac{CCRx}{ARR}$$</p><p>因为 MG995 电机需要一个20ms的时基脉冲，所以需要频率50Hz，为我们设置 <code>PSC=7200-1</code> <code>ARR=200-1</code></p><p><code>72000000/7200/200=50</code></p><p>所以计数器每次 <code>+1</code> 的时间为 <code>20ms/ARR=20ms/200=0.1ms</code></p><p>在CubeMX配置如下</p><p>设置 TIM3 定时器 ，只用一个通道就行，设置为 PWM模式，默认是 GPIOA16 管脚</p><img src="/img/posts/mg995/5.webp" alt="5" style="zoom:80%;" /><h3 id="先点个灯"><a href="#先点个灯" class="headerlink" title="先点个灯"></a>先点个灯</h3><p><del>历时108个秒，我做出了苹果手机没有的功能，呼吸灯</del> <span class="diana_yiyanzhen"></span></p><p>呼吸灯的呼吸，就是灯的强弱状态，改变 PWM 的占空比便可调整</p><p>具体配置和前面差不多，这里设置为 <code>ARR=500</code></p><p> 改变 CRRx 的两种方式</p><figure><div class="code-wrapper"><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">//ld1_duty 为我们设置的CCRx具体数值</span><span class="token comment">//方法一，直接操作</span>TIM3 <span class="token operator">-></span> CCR1 <span class="token operator">=</span> ld1_duty<span class="token punctuation">;</span><span class="token comment">//方法二，使用库函数</span><span class="token function">__HAL_TIM_SetCompare</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>htim3<span class="token punctuation">,</span>TIM_CHANNEL_1<span class="token punctuation">,</span>ld1_duty<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h4 id="主要代码为"><a href="#主要代码为" class="headerlink" title="主要代码为"></a>主要代码为</h4><figure><div class="code-wrapper"><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token comment">// 省略一堆初始化函数</span>  <span class="token comment">// 记录变强还是变弱</span>  <span class="token class-name">uint8_t</span> ld1_dir <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment">// 相当于CNT</span>  <span class="token class-name">uint16_t</span> ld1_duty <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment">// 初始化，启动 TIM3 通道1的 PWM 模式  </span>  <span class="token function">HAL_TIM_PWM_Start</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>htim3<span class="token punctuation">,</span>TIM_CHANNEL_1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//PA6</span>  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>    <span class="token comment">// 变强状态</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>ld1_dir <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      ld1_duty <span class="token operator">+=</span> <span class="token number">20</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 变弱状态</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>ld1_dir <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      ld1_duty <span class="token operator">-=</span> <span class="token number">20</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 由强变弱</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>ld1_duty <span class="token operator">>=</span> <span class="token number">500</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      ld1_dir <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 由弱变强</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>ld1_duty <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      ld1_dir <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 使用库函数改变 TIM3 通道1 PWM 的占空比</span>    <span class="token function">__HAL_TIM_SetCompare</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>htim3<span class="token punctuation">,</span>TIM_CHANNEL_1<span class="token punctuation">,</span>ld1_duty<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//延时</span><span class="token function">HAL_Delay</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h4 id="大概效果"><a href="#大概效果" class="headerlink" title="大概效果"></a>大概效果</h4><p><img src="/img/posts/mg995/1.gif" alt="1"></p><h3 id="驱动MG995舵机"><a href="#驱动MG995舵机" class="headerlink" title="驱动MG995舵机"></a>驱动MG995舵机</h3><p>这玩意具体参数可以去参考的博客去看</p><h4 id="控制原理"><a href="#控制原理" class="headerlink" title="控制原理"></a>控制原理</h4><p>舵机的控制一般需要一个20ms的时基脉冲，该脉冲的高电平部分一般为0.5ms~2.5ms范围内的角度控制脉冲部分。以180度角度舵机为例，那么对应的控制关系是这样的：</p><blockquote><p>0.5ms————–0度；<br>1.0ms————45度；<br>1.5ms————90度；<br>2.0ms———–135度；<br>2.5ms———–180度；</p></blockquote><img src="https://img-blog.csdn.net/20180129143043496?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaGVfX3l1YW4=" style="zoom:67%;" /><p>既然前面已经配置好时钟了，可以直接写代码了</p><p>调上面的角度转换成对应高电平部分</p><figure><div class="code-wrapper"><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">// 对应角度 0 45 90 135 180</span> <span class="token class-name">uint8_t</span> deg<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p>启动 TIM3 通道1的 PWM 模式</p><figure><div class="code-wrapper"><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token function">HAL_TIM_PWM_Start</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>htim3<span class="token punctuation">,</span>TIM_CHANNEL_1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//PA6</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>所以主函数为</p><figure><div class="code-wrapper"><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token comment">// 省了略各种初始化函数</span>  <span class="token class-name">uint8_t</span> deg<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token comment">// 初始化，启动 TIM3 通道1的 PWM 模式</span>  <span class="token function">HAL_TIM_PWM_Start</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>htim3<span class="token punctuation">,</span>TIM_CHANNEL_1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//PA6</span>  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>    <span class="token comment">// 先正转，再反转</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 更新CCR1值，直接用寄存器操作</span>      TIM3 <span class="token operator">-></span> CCR1 <span class="token operator">=</span> deg<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token comment">// 延时，等舵机转过去</span>      <span class="token function">HAL_Delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span> i <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token operator">--</span>i<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      TIM3 <span class="token operator">-></span> CCR1 <span class="token operator">=</span> deg<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token function">HAL_Delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h4 id="转动效果"><a href="#转动效果" class="headerlink" title="转动效果"></a>转动效果</h4><p>对了如果发现不转记得检查一下供电，最好插上电源线再测试。</p><p><img src="/img/posts/mg995/2.gif" alt="2"></p>