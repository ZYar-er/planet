(*/ω＼*)<hr /><blockquote><p>感谢尚宇学长送的开发板，希望龙芯以后发展越来越好&lt;(&#x3D;w&#x3D;)&gt;</p></blockquote><p>这回折腾用到的主要有：</p><ul><li>本体：2k0300 久久派_Plus_V1.0</li><li>开发设备：Linux环境笔记本电脑</li><li>串口转接器：用一个老51开发板糊弄过去了（</li><li>路由器：提供稳定网络连接和局域网</li></ul><h2 id="开箱"><a href="#开箱" class="headerlink" title="开箱"></a>开箱</h2><p><img src="/img/Pasted%20image%2020240912154924.png"></p><p><img src="/img/Pasted%20image%2020240912155406.png"></p><p>尊贵的总裁签名版（虽然看不太清）↑</p><p><img src="/img/Pasted%20image%2020240912154938.png"></p><p>接口丰富度没得说，两个RJ45，两个USB2.0，一个3.5mm音频接口，UART，ADC，JTAG和Type-C供电，还有个MicroSD卡插槽。</p><p>这规格，只要三位数出头的价格，<del>它就是炸了我都夸它炸得好听</del>。稳定性跟功耗也没得说，ABI2.0的龙架构让它能拥有开源社区的支持，基本所有开源软件都可以通过交叉编译在这个板子上使用，未来可期属于是。</p><h2 id="上电"><a href="#上电" class="headerlink" title="上电"></a>上电</h2><p>手头刚好没USB转串口，想到个幽默办法。掏出以前的51单片机开发板HC6800MS，给ST89C52RC薅下来，TX，RX，GND分别接到开发板的RXD0，TXD0，GND上：</p><p><img src="/img/Pasted%20image%2020240912161052.png"></p><p>然后给那个老板子插电脑上：</p><p><img src="/img/Pasted%20image%2020240912160313.png"></p><p>诶，这不就有了吗。</p><p>现在就能用<code>screen</code>从串口连接上开发板了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo screen /dev/ttyUSB0 115200</span><br></pre></td></tr></table></figure><p>效果如下：</p><p><img src="/img/Pasted%20image%2020240912161227.png"></p><p>板子上电之后会默认启动WiFi热点，配置文件如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/etc/hostapd.conf</span></span><br><span class="line">interface=wlan0  </span><br><span class="line">driver=nl80211  </span><br><span class="line">ssid=LoongsonWIFI  </span><br><span class="line">hw_mode=g  </span><br><span class="line">channel=6  </span><br><span class="line">macaddr_acl=0  </span><br><span class="line">auth_algs=1  </span><br><span class="line">ignore_broadcast_ssid=0  </span><br><span class="line">wpa=2  </span><br><span class="line">wpa_passphrase=loongson123456  </span><br><span class="line">wpa_key_mgmt=WPA-PSK  </span><br><span class="line">wpa_pairwise=TKIP  </span><br><span class="line">rsn_pairwise=CCMP</span><br></pre></td></tr></table></figure><p>虽然可以连上WiFi，但是它的<code>sshd</code>进程好像是默认不开启的。</p><p>哦它没有openssh啊。</p><h2 id="交叉编译OpenSSH"><a href="#交叉编译OpenSSH" class="headerlink" title="交叉编译OpenSSH"></a>交叉编译OpenSSH</h2><p>准备目录.&#x2F;openssh并进入，下载源码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget https://cdn.openbsd.org/pub/OpenBSD/OpenSSH/portable/openssh-9.8p  </span><br><span class="line">1.tar.gz</span><br><span class="line">wget http://www.zlib.net/zlib-1.3.1.tar.gz</span><br><span class="line">wget https://github.com/openssl/openssl/releases/download/openssl-3.3.  </span><br><span class="line">2/openssl-3.3.2.tar.gz</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> $(<span class="built_in">ls</span> ./);<span class="keyword">do</span> tar -zxvf <span class="variable">$item</span>; <span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>创建目录.&#x2F;openssh&#x2F;install<br>创建脚本env.sh：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$PATH</span>:/path/to/cross-tools/bin&quot;</span></span><br></pre></td></tr></table></figure><p>上面指向的是交叉编译工具链的路径，提前准备。</p><p>准备环境：<code>source ~/env.sh</code></p><p>编译zlib：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> zlib-1.3.1/</span><br><span class="line">prefix=<span class="variable">$HOME</span>/2k300/openssh/zlib CC=loongarch64-unknown-linux-gnu-gcc AR=loongarch64-unknown-linux-gnu-ar ./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>编译<code>openssl</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> openssl-3.3.2/</span><br><span class="line">./Configure linux64-loongarch64 --cross-compile-prefix=loongarch64-unknown-linux-gnu- --prefix=<span class="variable">$HOME</span>/2k300/openssh/install/openssl shared no-asm</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>编译openssh：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">./configure --host=loongarch64-unknown-linux-gnu --prefix=<span class="variable">$HOME</span>/2k300/openssh/install/openssh --with-ssl-dir=<span class="variable">$HOME</span>/2k300/openssh/install/openssl --with-zlib=<span class="variable">$HOME</span>  </span><br><span class="line">/2k300/openssh/install/zlib LDFLAGS=<span class="string">&quot;-static -pthread&quot;</span> --sysconfdir=/etc/ssh --disable-strip</span><br><span class="line">make</span><br><span class="line">make install-files</span><br></pre></td></tr></table></figure><blockquote><p>注意 此处使用<code>~</code>概率会导致编译异常，使用<code>$HOME</code>代替</p></blockquote><p>这里因为没找到在哪指定strip工具的位置而禁用了strip，所以产物会稍微有丶大。</p><p>编译结束之后，产物可以在<code>$HOME/2k300/openssh/install/openssh</code>中找到。直接把文件传输到99pi对应的目录里即可。</p><p>传输方法可以使用tty串口传输，不过速度太慢：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># server-side</span></span><br><span class="line">uuencode [filename-in-99pi] &lt; [file] &gt; /dev/ttyUSB0</span><br><span class="line"><span class="comment"># 99pi-side</span></span><br><span class="line">uudecode &lt; /dev/ttyS0 </span><br></pre></td></tr></table></figure><p>也可以使用tftp传输：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># server-side:</span></span><br><span class="line">sudo uftpd -n -o ftp=0,tftp=69 ./</span><br><span class="line"><span class="comment"># 99pi-side</span></span><br><span class="line">tftp -g -l ssh-xxx -r openssh/bin/ssh-xxx [114.5.1.4]</span><br></pre></td></tr></table></figure><p>剩下的后面说。</p>