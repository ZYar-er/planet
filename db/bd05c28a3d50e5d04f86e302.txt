<blockquote>非常好ESP32+EC800M，使我系统兼容</blockquote><blockquote><p>Ref:<a href="https://www.cnblogs.com/orangeQWJ/p/17762992.html">ESP32-MicroPython 开发环境 - orangeQWJ - 博客园</a></p></blockquote><p>之前一直想在Linux上玩玩手头的ESP32板子，但是奈何开发工具（好像叫Thonny）兼容Win，也懒得在Linux上再装一个。最近有空了才研究了一下，发现把板子插上，系统里是会出现一个字符设备的。不过大前提是<strong>ESP32的板子是MicroPython固件</strong>应该才行。</p><h2 id="连接终端"><a href="#连接终端" class="headerlink" title="连接终端"></a>连接终端</h2><blockquote><p><a href="https://www.cnblogs.com/muahao/articles/5673282.html">[转载]各种终端 &#x2F;dev&#x2F;tty - 苏小北1024 - 博客园</a></p></blockquote><p>既然设备在<code>/dev</code>底下显示了，那肯定就能连上。在Win上的时候IDE会自动连接上设备的MicroPython的repl解释器。Linux底下根据参考资料应该是可以借助<code>screen</code>连接。我的设备显示为<code>/dev/ttyUSB0</code>，那么就使用下面的指令以115200的波特率连接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen /dev/ttyUSB0 115200</span><br></pre></td></tr></table></figure><p>连接后能看到确实是MicroPython的repl。</p><p>这里补充一下screen的使用，这里的<code>C-x</code>指的是<code>Ctrl+x</code>这样的组合键：</p><ul><li><code>C-a d</code>：断开当前screen的连接</li><li><code>C-a k</code>：终止当前screen的连接。完成repl交互的时候务必终止，不然会阻碍ampy的连接</li><li><code>screen -R</code>：恢复screen的连接</li></ul><h2 id="文件传输"><a href="#文件传输" class="headerlink" title="文件传输"></a>文件传输</h2><p>虽然能用repl的<code>os.listdir()</code>和文件操作查看源码和其他文件的内容，但是还是不太方便。搜了一下发现Adafruit提供了一个用于在MicroPythhon兼容设备上文件管理的工具。我这里直接从AUR安装了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S ampy</span><br></pre></td></tr></table></figure><p>装好之后，可以先设置一下环境变量，省得每次都要指定端口号：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;export AMPY_PORT=/dev/ttyUSB0&quot;</span> &gt;&gt; <span class="variable">$HOME</span>/.bashrc</span><br></pre></td></tr></table></figure><p>之后就不用指定下面所有的<code>--port /dev/ttyUSB0</code>参数了。</p><ul><li><code>ampy --port &lt;PORT&gt; ls [REMOTE_DIR]</code>：列出文件</li><li><code>ampy --port &lt;PORT&gt; get &lt;REMOTE_FILE&gt; [LOCAL_FILE]</code>：下载文件，输出到stdout&#x2F;本地文件</li><li><code>ampy --port &lt;PORT&gt; put &lt;FILE&gt;</code>：上传文件</li><li><code>ampy --port &lt;PORT&gt; rm &lt;REMOTE_FILE&gt;</code>：删除文件</li><li><code>ampy --port &lt;PORT&gt; mkdir &lt;DIR&gt;</code>：创建文件夹</li><li><code>ampy --port &lt;PORT&gt; run &lt;REMOTE_SCRIPT&gt;</code>：执行远程脚本</li></ul><h2 id="特殊文件"><a href="#特殊文件" class="headerlink" title="特殊文件"></a>特殊文件</h2><p>MicroPython固件会在开机时先执行<code>/boot.py</code>，再执行<code>/main.py</code>主程序。如何编写就看程序的设计了。</p><hr><blockquote><p>PS：为了快速复制引用的网页还抽了半个小时做了个插件：<a href="https://github.com/xeonds/tab-clip?tab=readme-ov-file">xeonds&#x2F;tab-clip: Extension for clip the site info in markdown url format</a><br>虽然感觉有点傻就是了）</p></blockquote>