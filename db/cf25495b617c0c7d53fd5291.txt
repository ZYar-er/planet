<blockquote><h1 id="批量转换文件编码gb2312转utf-8"><a href="#批量转换文件编码gb2312转utf-8" class="headerlink" title="批量转换文件编码gb2312转utf-8"></a>批量转换文件编码gb2312转utf-8</h1><</blockquote><h1 id="批量转换文件编码gb2312转utf-8"><a href="#批量转换文件编码gb2312转utf-8" class="headerlink" title="批量转换文件编码gb2312转utf-8"></a>批量转换文件编码gb2312转utf-8</h1><p><del>锟斤拷烫烫烫</del></p><p>这几天网上找代码学习用vscode打开之后中文全是乱码，转换编码为 <code>gb2312</code> 后才正常显示，之前也因为这玩意狠狠的踩坑（ <code>Keil</code> 默认的编码对中文来说太坑了。但是一个工程里文件很多，所以就需要一个批量把这些文件转换为 <code>utf-8</code> 的脚本。</p><img src="https://yun.ksfu.top/blog/gb2312/1.webp" style="zoom: 67%;" /><h2 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h2><blockquote><p><a href="https://blog.csdn.net/a417655340/article/details/124460824">批量转换文件编码gb2312转utf-8_每天一罐可乐的博客-CSDN博客_批量转换编码格式</a></p><p><a href="https://blog.csdn.net/qq_42336581/article/details/125776879">python 递归遍历目录下的所有文件_Joy-&gt;Boy的博客-CSDN博客_python递归获取文件夹下所有文件</a></p></blockquote><h2 id="关于文件编码"><a href="#关于文件编码" class="headerlink" title="关于文件编码"></a>关于文件编码</h2><p>b站上找到的这个视频挺好。</p><p><a href="https://www.bilibili.com/video/BV1U5411d7FB">「烫烫屯屯锟斤拷」揭秘ASCII、GBK、UTF-8，B站独家，一听就懂</a></p><iframe src="//player.bilibili.com/player.html?aid=468972234&bvid=BV1U5411d7FB&cid=715388833&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><p>其实网上随便一搜就有好多，试了一个效果不错，但是只能转换根目录下的文件。于是我稍微做了点修改。</p><p>效果还是不错的</p><details><summary>运行结果</summary><figure><div class="code-wrapper"><pre class="  language-bash" data-language="bash"><code class="  language-bash">请输入要转换编码的文件夹路径:C:\Demo_OLED_STM32F103RCT6_Software_IIC===============================================================fileName                                          fileEncoding===============================================================core_cm3.c                                        GB18030core_cm3.h                                        GB18030iic.c                                             GB18030iic.h                                             GB18030bmp.h                                             GB18030oled.c                                            GB18030oled.h                                            GB18030oledfont.h                                        GB18030RTE_Components.h                                  GB18030misc.h                                            GB18030stm32f10x_adc.h                                   GB18030stm32f10x_bkp.h                                   GB18030stm32f10x_can.h                                   GB18030stm32f10x_cec.h                                   GB18030stm32f10x_crc.h                                   GB18030stm32f10x_dac.h                                   GB18030stm32f10x_dbgmcu.h                                GB18030stm32f10x_dma.h                                   GB18030stm32f10x_exti.h                                  GB18030stm32f10x_flash.h                                 GB18030stm32f10x_fsmc.h                                  GB18030stm32f10x_gpio.h                                  GB18030stm32f10x_i2c.h                                   GB18030stm32f10x_iwdg.h                                  GB18030stm32f10x_pwr.h                                   GB18030stm32f10x_rcc.h                                   GB18030stm32f10x_rtc.h                                   GB18030stm32f10x_sdio.h                                  GB18030stm32f10x_spi.h                                   GB18030stm32f10x_tim.h                                   GB18030stm32f10x_usart.h                                 GB18030stm32f10x_wwdg.h                                  GB18030misc.c                                            GB18030stm32f10x_adc.c                                   GB18030stm32f10x_bkp.c                                   GB18030stm32f10x_can.c                                   GB18030stm32f10x_cec.c                                   GB18030stm32f10x_crc.c                                   GB18030stm32f10x_dac.c                                   GB18030stm32f10x_dbgmcu.c                                GB18030stm32f10x_dma.c                                   GB18030stm32f10x_exti.c                                  GB18030stm32f10x_flash.c                                 GB18030stm32f10x_fsmc.c                                  GB18030stm32f10x_gpio.c                                  GB18030stm32f10x_i2c.c                                   GB18030stm32f10x_iwdg.c                                  GB18030stm32f10x_pwr.c                                   GB18030stm32f10x_rcc.c                                   GB18030stm32f10x_rtc.c                                   GB18030stm32f10x_sdio.c                                  GB18030stm32f10x_spi.c                                   GB18030stm32f10x_tim.c                                   GB18030stm32f10x_usart.c                                 GB18030stm32f10x_wwdg.c                                  GB18030delay.c                                           GB18030delay.h                                           GB18030sys.c                                             GB18030sys.h                                             GB18030gui.c                                             GB18030gui.h                                             GB18030main.c                                            GB18030stm32f10x.h                                       GB18030stm32f10x_conf.h                                  GB18030stm32f10x_it.c                                    GB18030stm32f10x_it.h                                    GB18030system_stm32f10x.c                                GB18030system_stm32f10x.h                                GB18030test.c                                            GB18030test.h                                            GB18030---------错误统计------------共0个错误！-----------------------------</code></pre></div></figure></details><img src="https://yun.ksfu.top/blog/gb2312/2.webp" style="zoom:67%;" /><p>直接打开，舒服了<span class="diana_bixin"></span></p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> codecsgErrArray <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">convert</span><span class="token punctuation">(</span>fileName<span class="token punctuation">,</span> filePath<span class="token punctuation">,</span> out_enc<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        content <span class="token operator">=</span> codecs<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># 直接设置GB18030编码节省时间</span>        source_encoding <span class="token operator">=</span> <span class="token string">'GB18030'</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"&#123;0:50&#125;&#123;1&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>fileName<span class="token punctuation">,</span> source_encoding<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> source_encoding <span class="token operator">!=</span> <span class="token boolean">None</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> source_encoding <span class="token operator">==</span> out_enc<span class="token punctuation">:</span>                <span class="token keyword">return</span>            content <span class="token operator">=</span> content<span class="token punctuation">.</span>decode<span class="token punctuation">(</span>source_encoding<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span>out_enc<span class="token punctuation">)</span>            codecs<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>content<span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            gErrArray<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"can not recgonize file encoding %s"</span> <span class="token operator">%</span> filePath<span class="token punctuation">)</span>    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> err<span class="token punctuation">:</span>        gErrArray<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"%s:%s"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">show_files</span><span class="token punctuation">(</span>base_path<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    遍历当前目录所有py文件及文件夹    :param path:    :param all_files:    :return:    """</span>    file_list <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>base_path<span class="token punctuation">)</span>    <span class="token comment"># 准备循环判断每个元素是否是文件夹还是文件，是文件的话，把名称传入list，是文件夹的话，递归</span>    <span class="token keyword">for</span> <span class="token builtin">file</span> <span class="token keyword">in</span> file_list<span class="token punctuation">:</span>        <span class="token comment"># 利用os.path.join()方法取得路径全名，并存入cur_path变量，否则每次只能遍历一层目录</span>        cur_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>base_path<span class="token punctuation">,</span> <span class="token builtin">file</span><span class="token punctuation">)</span>        <span class="token comment"># 判断是否是文件夹</span>        <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>isdir<span class="token punctuation">(</span>cur_path<span class="token punctuation">)</span><span class="token punctuation">:</span>            show_files<span class="token punctuation">(</span>cur_path<span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            suffix <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>            <span class="token keyword">if</span> suffix <span class="token operator">==</span> <span class="token string">'.h'</span> <span class="token keyword">or</span> suffix <span class="token operator">==</span> <span class="token string">'.c'</span> <span class="token keyword">or</span> suffix <span class="token operator">==</span> <span class="token string">'.cpp'</span> <span class="token keyword">or</span> suffix <span class="token operator">==</span> <span class="token string">'.hpp'</span> <span class="token keyword">or</span> suffix <span class="token operator">==</span> <span class="token string">'.bat'</span> <span class="token keyword">or</span> suffix <span class="token operator">==</span> <span class="token string">'.java'</span> <span class="token keyword">or</span> suffix <span class="token operator">==</span> <span class="token string">'.txt'</span><span class="token punctuation">:</span>                convert<span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">,</span> cur_path<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment">#explore(os.getcwd())</span>    filePath <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入要转换编码的文件夹路径: \n"</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\r\n==============================================================="</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"&#123;0:50&#125;&#123;1&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token string">'fileName'</span><span class="token punctuation">,</span> <span class="token string">'fileEncoding'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"==============================================================="</span><span class="token punctuation">)</span>    show_files<span class="token punctuation">(</span>filePath<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\r\n---------错误统计------------'</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> index<span class="token punctuation">,</span> item <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>gErrArray<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\r\n共%d个错误！'</span> <span class="token operator">%</span> <span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>gErrArray<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>gErrArray<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"请检查错误文件手动修改编码"</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\r\n-----------------------------'</span><span class="token punctuation">)</span> <span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>