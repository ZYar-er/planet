<img src="https://legacy.superbart.top/picture/Random/Cirno-Easter%20Egg.png" alt="Featured image of post 我在 2022 年学到了什么" /><p>把去年学到的东西，没说过的拼接一下，回见了您。
(之前名称叫 Hadoop 额外技能，不能就这样就和老博客同步，索性把大作业里面我顺手提到的东西都罗列一通)</p>
<h2 id="c-大作业技术罗列">C++ 大作业技术罗列</h2>
<p>C++ 大作业学到的偏门东西。</p>
<h3 id="va_list-对象">va_list 对象</h3>
<p>不用 <code>printf()</code> 函数，运用 <code>cstdarg</code> 库实现类似该函数的 <code>error()</code>。</p>
<ul>
<li>函数原型</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-C" data-lang="C"><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">error</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">format</span><span class="p">,</span> <span class="p">...)</span>
</span></span></code></pre></div><ul>
<li>算法</li>
</ul>
<ol>
<li>生成 <code>va_list</code> 对象，然后初始化。</li>
<li>通过对母字符串的逐个字符读取，判断以下情况:
<ul>
<li>如果不是 <code>%</code> 直接输出。</li>
<li>如果是 <code>%</code>， 后面跟着是：
<table>
<thead>
<tr>
<th style="text-align:center">输入 |</th>
<th style="text-align:center">输出    |</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">s   |</td>
<td style="text-align:center">字符串  |</td>
</tr>
<tr>
<td style="text-align:center">c   |</td>
<td style="text-align:center">字符    |</td>
</tr>
<tr>
<td style="text-align:center">d   |</td>
<td style="text-align:center">整型数  |</td>
</tr>
<tr>
<td style="text-align:center">%   |</td>
<td style="text-align:center"><code>%</code>符号 |</td>
</tr>
</tbody>
</table>
</li>
</ul>
</li>
<li>注意判断字符还是整数的时候，先按照整型数读入，然后按情况强制类型转换看看。</li>
</ol>
<ul>
<li><code>cstdarg</code> 函数库怎么搞不定长形参的？</li>
</ul>
<ol>
<li>形参的最后一定要是省略号。</li>
<li><code>va_list</code> 规定一个不定长形参变量。</li>
<li><code>va_start</code> 让其找到开始位置，之后 <code>va_arg</code> 向后读取一个参数。</li>
<li><code>va_end</code> 终止 <code>va_list</code> 存在。</li>
</ol>
<p>代码如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-C++" data-lang="C++"><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;cstdarg&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">error</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">format</span><span class="p">,</span> <span class="p">...)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">va_list</span> <span class="n">ap</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">va_start</span><span class="p">(</span><span class="n">ap</span><span class="p">,</span> <span class="n">format</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="n">string</span> <span class="n">toOutput</span> <span class="o">=</span> <span class="n">format</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">toOutput</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="n">toOutput</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="sc">&#39;%&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">i</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="p">(</span><span class="n">toOutput</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="sc">&#39;%&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="sc">&#39;%&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">            <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">toOutput</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="sc">&#39;s&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="n">string</span> <span class="n">a</span> <span class="o">=</span> <span class="n">va_arg</span><span class="p">(</span><span class="n">ap</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">                <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">a</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">            <span class="k">else</span>
</span></span><span class="line"><span class="cl">            <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">va_arg</span><span class="p">(</span><span class="n">ap</span><span class="p">,</span> <span class="kt">int</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">                <span class="k">if</span> <span class="p">(</span><span class="n">toOutput</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="sc">&#39;c&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="kt">char</span><span class="p">)</span><span class="n">a</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="cl">                <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">toOutput</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="sc">&#39;d&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">a</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">else</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">toOutput</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="n">va_end</span><span class="p">(</span><span class="n">ap</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">error</span><span class="p">(</span><span class="s">&#34;Hello %s, %d, %c. %%</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="s">&#34;SuperBart&#34;</span><span class="p">,</span> <span class="sc">&#39;f&#39;</span><span class="p">,</span> <span class="sc">&#39;f&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// For test.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">printf</span><span class="p">(</span><span class="s">&#34;Hello %s, %d, %c. %%</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span> <span class="s">&#34;SuperBart&#34;</span><span class="p">,</span> <span class="sc">&#39;f&#39;</span><span class="p">,</span> <span class="sc">&#39;f&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h3 id="如何更加省心地随便编个数">如何更加省心地随便编个数</h3>
<ol>
<li>先引入 C++ 11 标准的全新标准库 <code>random</code>。</li>
<li>先找个能生成随机种子的随机数引擎，我用的是 <code>random_device</code>，在 Linux 上相当于读取 <code>/dev/urandom</code> 产生的随机数。我们不使用该引擎生成随机数，因为根据原理，在生成随机数的时候，会产生大量的输入输出中断，一定程度上影响性能，而且会下降 <code>/dev/urandom</code> 生成随机数的质量。</li>
<li>然后利用上述引擎，生成我们要用的引擎 <code>default_random_engine</code>。</li>
<li>我们利用该随机数引擎，生成随机数。由于我们这里使用无符号的随机数，遵循均匀分布，我们使用 <code>uniform_int_distribution&lt;uint&gt;</code> 类来生成之。
顺便说一句，<code>random</code>库还能支持你在概率论课程上学到的所有玩意，比如万恶的正态分布，泊松分布啥的。</li>
</ol>
<h2 id="如何在虚拟机之间搞互联互通-以-virtualbox-为示例">如何在虚拟机之间搞互联互通？—— 以 VirtualBox 为示例</h2>
<p>为了 Hadoop 的主从模式，我搞了三个虚拟机。</p>
<h3 id="概述">概述</h3>
<ol>
<li>管理 -&gt; 主机网络管理器新建一个新网卡 vboxnet0</li>
<li>在每个虚拟机的设置中，设置网络为仅主机网络，界面名称 vboxnet0</li>
<li>每个虚拟机里面要设置好固定 ip ，关闭防火墙，和 ssh 免密码登录</li>
<li>(可选但推荐) 修改所有虚拟机的 host 文件，标记所有虚拟机的地址</li>
</ol>
<h3 id="截图主机网络管理器">截图~主机网络管理器</h3>
<p><figure 
	>
	<a href="https://legacy.superbart.top/picture/Random/VirtualBox-1.png" >
		<img src="https://legacy.superbart.top/picture/Random/VirtualBox-1.png"
			
			
			
			loading="lazy"
			>
	</a>
	
</figure></p>
<p>如果设置成功的话，你的宿主机应该可以 ping 到你的虚拟机。查看你电脑的 ip，可以执行 <code>ifconfig</code> 或者 <code>ip a</code>。</p>
<h3 id="如何关闭网络防火墙">如何关闭网络防火墙</h3>
<p>基本上我见到的 Linux 系统，防火墙软件都是 <a class="link" href="https://firewalld.org/"  target="_blank" rel="noopener"
    >firewalld</a>。关闭防火墙，也就是关掉这个服务。所以我们要执行</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">sudo systemctl stop firewalld.service <span class="c1"># 停止防火墙服务</span>
</span></span><span class="line"><span class="cl">sudo systemctl disable firewalld.service <span class="c1"># 防止防火墙开机自启动</span>
</span></span></code></pre></div><p>说到这了，看看 Systemd 还能搞啥</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">sudo systemctl status firewalld.service <span class="c1"># 看看这玩意运行状态</span>
</span></span></code></pre></div><p>另外，如果你安装的是 Ubuntu Server ，安装时候可以关掉防火墙选项的。如果你安装的是 OpenSUSE，你也可以在 YaST 里面关掉，或者开 22 和 23 端口。</p>
<h3 id="如何设置免密码登录-ssh">如何设置免密码登录 ssh</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ssh-keygen
</span></span><span class="line"><span class="cl">$ <span class="nb">cd</span> ~/.ssh
</span></span><span class="line"><span class="cl">$ ssh-copy-id 另外一个虚拟机的用户名@另外一个虚拟机的ip
</span></span><span class="line"><span class="cl">$ ssh 另外一个虚拟机的用户名@另外一个虚拟机的ip <span class="c1"># 测试是否成功</span>
</span></span></code></pre></div><p>注意，.ssh目录的权限为700，其下文件authorized_keys和私钥的权限为600。如有问题，请使用 chmod 修改。</p>
<h2 id="修改-host-文件">修改 Host 文件</h2>
<pre tabindex="0"><code>sudo nano /etc/hosts
</code></pre><p>修改方式是 ip + 电脑名称</p>
<h2 id="c-语言的-sqlite-函数概览">C 语言的 SQLite 函数概览</h2>
<p>为啥是 C 语言的，因为 Vala 的 SQLite 支持是把 C 语言支持的头文件给“照搬”了。</p>
<h3 id="基础函数">基础函数</h3>
<p>通过这个方式来创建一个 SQLite 结构体：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-C" data-lang="C"><span class="line"><span class="cl"><span class="n">sqlite</span> <span class="o">*</span><span class="n">db</span><span class="p">;</span>
</span></span></code></pre></div><p>通过这个方式，打开一个数据库：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-C" data-lang="C"><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">sqlite3_open</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">filename</span><span class="p">,</span>    <span class="cm">/* 文件所在的路径 */</span>
</span></span><span class="line"><span class="cl">    <span class="n">sqlite3</span> <span class="o">**</span><span class="n">ppDb</span>           <span class="cm">/* 对应的 SQLite 结构体 */</span>
</span></span><span class="line"><span class="cl"><span class="p">);</span>
</span></span></code></pre></div><p>通过这个方式，来在这个数据库上执行 SQL 语句：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-C" data-lang="C"><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">sqlite3_exec</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="n">sqlite3</span><span class="o">*</span><span class="p">,</span>            <span class="cm">/* 要执行的数据库 */</span>
</span></span><span class="line"><span class="cl">    <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">sql</span><span class="p">,</span>     <span class="cm">/* 执行语句 */</span>
</span></span><span class="line"><span class="cl">    <span class="n">sqlite_callback</span><span class="p">,</span>     <span class="cm">/* 回调 */</span>
</span></span><span class="line"><span class="cl">    <span class="kt">void</span> <span class="o">*</span><span class="n">data</span><span class="p">,</span>          <span class="cm">/* 回调参数 */</span>
</span></span><span class="line"><span class="cl">    <span class="kt">char</span> <span class="o">**</span><span class="n">errmsg</span>        <span class="cm">/* 接受错误信息的字符串 */</span>
</span></span><span class="line"><span class="cl"><span class="p">);</span>
</span></span></code></pre></div><p>使用完数据库后，通过这个函数释放数据库。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-C" data-lang="C"><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">sqlite3_close</span><span class="p">(</span> <span class="n">sqlite3</span><span class="o">*</span> <span class="cm">/* 你需要关闭的数据库 */</span> <span class="p">);</span>
</span></span></code></pre></div><h3 id="函数返回值">函数返回值</h3>
<p>SQLite 里面的函数在执行的时候，都会有一个返回值。在 C 语言头文件里面，是一堆 define 。以下是 sqlite3.h 文件里面的东西。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="cm">/*
</span></span></span><span class="line"><span class="cl"><span class="cm">** sqlite3.h, version 3.40.0, line 433-476.
</span></span></span><span class="line"><span class="cl"><span class="cm">**
</span></span></span><span class="line"><span class="cl"><span class="cm">** CAPI3REF: Result Codes
</span></span></span><span class="line"><span class="cl"><span class="cm">** KEYWORDS: {result code definitions}
</span></span></span><span class="line"><span class="cl"><span class="cm">** 返回值 要点：返回值和定义
</span></span></span><span class="line"><span class="cl"><span class="cm">**
</span></span></span><span class="line"><span class="cl"><span class="cm">** Many SQLite functions return an integer result code from the set shown
</span></span></span><span class="line"><span class="cl"><span class="cm">** here in order to indicate success or failure.
</span></span></span><span class="line"><span class="cl"><span class="cm">** 许多 SQLite 函数的返回值是下面定义的整型，以反映成功/失败状态。
</span></span></span><span class="line"><span class="cl"><span class="cm">**
</span></span></span><span class="line"><span class="cl"><span class="cm">** New error codes may be added in future versions of SQLite.
</span></span></span><span class="line"><span class="cl"><span class="cm">** 新的错误码将会在未来版本加入。
</span></span></span><span class="line"><span class="cl"><span class="cm">**
</span></span></span><span class="line"><span class="cl"><span class="cm">** See also: [extended result code definitions]
</span></span></span><span class="line"><span class="cl"><span class="cm">** 还有扩充版返回值定义:-P
</span></span></span><span class="line"><span class="cl"><span class="cm">*/</span>
</span></span><span class="line"><span class="cl"><span class="cp">#define SQLITE_OK           0   </span><span class="cm">/* Successful result */</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span><span class="cm">/* beginning-of-error-codes */</span>
</span></span><span class="line"><span class="cl"><span class="cm">/* 除了0之外全是出错 */</span>
</span></span><span class="line"><span class="cl"><span class="cp">#define SQLITE_ERROR        1   </span><span class="cm">/* Generic error */</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#define SQLITE_INTERNAL     2   </span><span class="cm">/* Internal logic error in SQLite */</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#define SQLITE_PERM         3   </span><span class="cm">/* Access permission denied */</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#define SQLITE_ABORT        4   </span><span class="cm">/* Callback routine requested an abort */</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#define SQLITE_BUSY         5   </span><span class="cm">/* The database file is locked */</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#define SQLITE_LOCKED       6   </span><span class="cm">/* A table in the database is locked */</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#define SQLITE_NOMEM        7   </span><span class="cm">/* A malloc() failed */</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#define SQLITE_READONLY     8   </span><span class="cm">/* Attempt to write a readonly database */</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#define SQLITE_INTERRUPT    9   </span><span class="cm">/* Operation terminated by sqlite3_interrupt()*/</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#define SQLITE_IOERR       10   </span><span class="cm">/* Some kind of disk I/O error occurred */</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#define SQLITE_CORRUPT     11   </span><span class="cm">/* The database disk image is malformed */</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#define SQLITE_NOTFOUND    12   </span><span class="cm">/* Unknown opcode in sqlite3_file_control() */</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#define SQLITE_FULL        13   </span><span class="cm">/* Insertion failed because database is full */</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#define SQLITE_CANTOPEN    14   </span><span class="cm">/* Unable to open the database file */</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#define SQLITE_PROTOCOL    15   </span><span class="cm">/* Database lock protocol error */</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#define SQLITE_EMPTY       16   </span><span class="cm">/* Internal use only */</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#define SQLITE_SCHEMA      17   </span><span class="cm">/* The database schema changed */</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#define SQLITE_TOOBIG      18   </span><span class="cm">/* String or BLOB exceeds size limit */</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#define SQLITE_CONSTRAINT  19   </span><span class="cm">/* Abort due to constraint violation */</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#define SQLITE_MISMATCH    20   </span><span class="cm">/* Data type mismatch */</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#define SQLITE_MISUSE      21   </span><span class="cm">/* Library used incorrectly */</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#define SQLITE_NOLFS       22   </span><span class="cm">/* Uses OS features not supported on host */</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#define SQLITE_AUTH        23   </span><span class="cm">/* Authorization denied */</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#define SQLITE_FORMAT      24   </span><span class="cm">/* Not used */</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#define SQLITE_RANGE       25   </span><span class="cm">/* 2nd parameter to sqlite3_bind out of range */</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#define SQLITE_NOTADB      26   </span><span class="cm">/* File opened that is not a database file */</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#define SQLITE_NOTICE      27   </span><span class="cm">/* Notifications from sqlite3_log() */</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#define SQLITE_WARNING     28   </span><span class="cm">/* Warnings from sqlite3_log() */</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#define SQLITE_ROW         100  </span><span class="cm">/* sqlite3_step() has another row ready */</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#define SQLITE_DONE        101  </span><span class="cm">/* sqlite3_step() has finished executing */</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span><span class="cm">/* end-of-error-codes */</span>
</span></span></code></pre></div><p>看看 SQLite 的头文件吧，很详细的。</p>
<h2 id="使用-sqlite-声明">使用 SQLite 声明</h2>
<p>使用 SQLite 声明来执行 SQL 语句，比直接调用 exec 更高效。</p>
<p>首先，你需要写好一个 SQL 语句，碰到待定的地方可以用问号，或者 <code>$xxx</code> 等形式表示。以下是我程序里面的示例：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-vala" data-lang="vala"><span class="line"><span class="cl"><span class="kd">private</span><span class="w"> </span><span class="kd">const</span><span class="w"> </span><span class="kt">string</span><span class="w"> </span><span class="n">ADD_HOTEL_DATA</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;&#34;&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">INSERT</span><span class="w"> </span><span class="n">INTO</span><span class="w"> </span><span class="n">HOTEL</span><span class="w"> </span><span class="p">(</span><span class="n">location</span><span class="p">,</span><span class="w"> </span><span class="n">price</span><span class="p">,</span><span class="w"> </span><span class="n">numRooms</span><span class="p">,</span><span class="w"> </span><span class="n">numAvail</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">VALUES</span><span class="w"> </span><span class="p">(</span><span class="err">$</span><span class="n">LOCATION</span><span class="p">,</span><span class="w"> </span><span class="err">$</span><span class="n">PRICE</span><span class="p">,</span><span class="w"> </span><span class="err">$</span><span class="n">NUMBEROFROOMS</span><span class="p">,</span><span class="w"> </span><span class="err">$</span><span class="n">NUMBEROFAVALIABLE</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="s">&#34;&#34;&#34;;</span><span class="w">
</span></span></span></code></pre></div><p>然后使用这个函数，准备声明：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-C" data-lang="C"><span class="line"><span class="cl"><span class="n">sqlite3_stmt</span> <span class="o">*</span><span class="n">stmt</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span> <span class="cm">/* 先初始化一个空的 */</span>
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">sqlite3_prepare_v2</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">  <span class="n">sqlite3</span> <span class="o">*</span><span class="n">db</span><span class="p">,</span>             <span class="cm">/* 需要用到的数据库 */</span>
</span></span><span class="line"><span class="cl">  <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">zSql</span><span class="p">,</span>        <span class="cm">/* SQL 语句 */</span>
</span></span><span class="line"><span class="cl">  <span class="kt">int</span> <span class="n">nByte</span><span class="p">,</span>               <span class="cm">/* 字符串长度 */</span>
</span></span><span class="line"><span class="cl">  <span class="n">sqlite3_stmt</span> <span class="o">**</span><span class="n">ppStmt</span><span class="p">,</span>   <span class="cm">/* OUT: 指向一个需要初始化的声明 */</span>
</span></span><span class="line"><span class="cl">  <span class="k">const</span> <span class="kt">char</span> <span class="o">**</span><span class="n">pzTail</span>      <span class="cm">/* OUT: 貌似是说 SQL 声明的尾部，可以不管吧 */</span>
</span></span><span class="line"><span class="cl"><span class="p">);</span>
</span></span></code></pre></div><p>然后，使用 <code>sqlite_bind</code>系列函数在声明上绑定变量，以下用 <code>sqlite3_bind_text</code> 举例：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-C" data-lang="C"><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">sqlite3_bind_text</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="n">sqlite3_stmt</span><span class="o">*</span><span class="p">,</span>        <span class="cm">/* 需要用到的声明 */</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span><span class="p">,</span>                  <span class="cm">/* 在声明需要绑定位置的索引，从 1 开始计数 */</span>
</span></span><span class="line"><span class="cl">    <span class="k">const</span> <span class="kt">char</span><span class="o">*</span><span class="p">,</span>          <span class="cm">/* 需要绑定的字符串 */</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span><span class="p">,</span>                  <span class="cm">/* 字符串的长度 */</span>
</span></span><span class="line"><span class="cl">    <span class="kt">void</span><span class="p">(</span><span class="o">*</span><span class="p">)(</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span>        <span class="cm">/* 某种析构函数，当绑定失败执行这个吧 */</span>
</span></span><span class="line"><span class="cl"><span class="p">);</span>
</span></span></code></pre></div><p>还有 <code>sqlite3_bind_int</code>，<code>sqlite3_bind_double</code>之类，用法都差不多。</p>
<p>注意，你可以用这个函数寻找声明里面的索引：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">sqlite3_bind_parameter_index</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="n">sqlite3_stmt</span><span class="o">*</span><span class="p">,</span>         <span class="cm">/* 需要用到的声明 */</span>
</span></span><span class="line"><span class="cl">    <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">zName</span>      <span class="cm">/* 需要寻找的绑定位置 */</span>
</span></span><span class="line"><span class="cl"><span class="p">);</span>
</span></span></code></pre></div><p>如果没找到的话，就返回 0。</p>
<p>现在你可以执行绑定完变量的声明了。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">sqlite3_step</span><span class="p">(</span> <span class="n">sqlite3_stmt</span><span class="o">*</span> <span class="cm">/* 需要用到的声明 */</span> <span class="p">);</span>
</span></span></code></pre></div><p>这个函数执行完，有三个状态：<code>SQLITE_DONE</code>，<code>SQLITE_ROW</code>和各种报错。接下来我们关注 ``SQLITE_ROW`，也就是返回一条行记录的状况，这个一般会出现在执行了 SELECT 的情况。</p>
<p>我们使用 <code>sqlite_column</code>系列函数取出这些东西，先输入使用到的声明，然后输入索引，返回值就是里面的数据。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-C" data-lang="C"><span class="line"><span class="cl"><span class="k">const</span> <span class="kt">void</span> <span class="o">*</span><span class="nf">sqlite3_column_blob</span><span class="p">(</span><span class="n">sqlite3_stmt</span><span class="o">*</span><span class="p">,</span> <span class="kt">int</span> <span class="n">iCol</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="kt">double</span> <span class="nf">sqlite3_column_double</span><span class="p">(</span><span class="n">sqlite3_stmt</span><span class="o">*</span><span class="p">,</span> <span class="kt">int</span> <span class="n">iCol</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">sqlite3_column_int</span><span class="p">(</span><span class="n">sqlite3_stmt</span><span class="o">*</span><span class="p">,</span> <span class="kt">int</span> <span class="n">iCol</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="n">sqlite3_int64</span> <span class="nf">sqlite3_column_int64</span><span class="p">(</span><span class="n">sqlite3_stmt</span><span class="o">*</span><span class="p">,</span> <span class="kt">int</span> <span class="n">iCol</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="k">const</span> <span class="kt">unsigned</span> <span class="kt">char</span> <span class="o">*</span><span class="nf">sqlite3_column_text</span><span class="p">(</span><span class="n">sqlite3_stmt</span><span class="o">*</span><span class="p">,</span> <span class="kt">int</span> <span class="n">iCol</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="k">const</span> <span class="kt">void</span> <span class="o">*</span><span class="nf">sqlite3_column_text16</span><span class="p">(</span><span class="n">sqlite3_stmt</span><span class="o">*</span><span class="p">,</span> <span class="kt">int</span> <span class="n">iCol</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="n">sqlite3_value</span> <span class="o">*</span><span class="nf">sqlite3_column_value</span><span class="p">(</span><span class="n">sqlite3_stmt</span><span class="o">*</span><span class="p">,</span> <span class="kt">int</span> <span class="n">iCol</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">sqlite3_column_bytes</span><span class="p">(</span><span class="n">sqlite3_stmt</span><span class="o">*</span><span class="p">,</span> <span class="kt">int</span> <span class="n">iCol</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">sqlite3_column_bytes16</span><span class="p">(</span><span class="n">sqlite3_stmt</span><span class="o">*</span><span class="p">,</span> <span class="kt">int</span> <span class="n">iCol</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">sqlite3_column_type</span><span class="p">(</span><span class="n">sqlite3_stmt</span><span class="o">*</span><span class="p">,</span> <span class="kt">int</span> <span class="n">iCol</span><span class="p">);</span>
</span></span></code></pre></div><p>清除绑定，使用如下函数：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-C" data-lang="C"><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">sqlite3_reset</span><span class="p">(</span><span class="n">sqlite3_stmt</span> <span class="o">*</span><span class="n">pStmt</span> <span class="cm">/* 需要用到的声明 */</span> <span class="p">);</span>
</span></span></code></pre></div><p>删除声明，使用如下函数：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-C" data-lang="C"><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">sqlite3_finalize</span><span class="p">(</span><span class="n">sqlite3_stmt</span> <span class="o">*</span><span class="n">pStmt</span> <span class="cm">/* 需要删除的声明 */</span> <span class="p">);</span>
</span></span></code></pre></div><h3 id="举个-cpp-里面的例子">举个 CPP 里面的例子</h3>
<p>目前我没有找到能让我舒心使用的 CPP SQLITE 库。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-CPP" data-lang="CPP"><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;cstddef&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;sqlite3.h&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;cstring&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;sstream&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;map&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;algorithm&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="cm">/*======================================
</span></span></span><span class="line"><span class="cl"><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">            Data Structure
</span></span></span><span class="line"><span class="cl"><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">======================================*/</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">struct</span> <span class="nc">TeacherDS</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">string</span> <span class="n">Tno</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">string</span> <span class="n">Tname</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">string</span> <span class="n">Tele</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">string</span> <span class="n">TRS</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">string</span> <span class="n">Pass</span><span class="p">;</span> 
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">typedef</span> <span class="n">map</span><span class="o">&lt;</span><span class="kt">int</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">pair</span><span class="o">&lt;</span><span class="kt">int</span><span class="p">,</span><span class="kt">int</span><span class="o">&gt;&gt;&gt;</span> <span class="n">TimeInformation</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="cm">/*======================================
</span></span></span><span class="line"><span class="cl"><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">            Database Class
</span></span></span><span class="line"><span class="cl"><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">======================================*/</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Database class
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">struct</span> <span class="nc">Database</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="k">private</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">sqlite3</span> <span class="o">*</span><span class="n">db</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">rc</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">char</span> <span class="o">*</span><span class="n">zErrMsg</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">private</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">    <span class="kt">bool</span> <span class="n">create</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="k">public</span><span class="o">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">Database</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="o">~</span><span class="n">Database</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="kt">void</span> <span class="nf">exec</span><span class="p">(</span><span class="n">string</span> <span class="n">sql</span><span class="p">);</span>          <span class="c1">// For insert and delete.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">TimeInformation</span> <span class="nf">get_spare</span><span class="p">();</span>    <span class="c1">// Query the empty time in 2022-12-31.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Create an new database file.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kt">bool</span> <span class="n">Database</span><span class="o">::</span><span class="n">create</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// Create an empty database.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">rc</span> <span class="o">=</span> <span class="n">sqlite3_open_v2</span><span class="p">(</span><span class="s">&#34;management.db&#34;</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">db</span><span class="p">,</span> <span class="n">SQLITE_OPEN_READWRITE</span> <span class="o">|</span> <span class="n">SQLITE_OPEN_CREATE</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&#34;Can&#39;t create database: &#34;</span> <span class="o">&lt;&lt;</span> <span class="n">rc</span> <span class="o">&lt;&lt;</span> <span class="s">&#34;, &#34;</span> <span class="o">&lt;&lt;</span> <span class="n">sqlite3_errmsg</span><span class="p">(</span><span class="n">db</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nb">false</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// Create new table.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">create_table_queries</span> <span class="o">=</span>  
</span></span><span class="line"><span class="cl">        <span class="s">&#34;CREATE TABLE IF NOT EXISTS Teacher ( Tno VARCHAR(10), Tname VARCHAR(20), Tele VARCHAR(20) , TRS VARCHAR(30) ,Pass VARCHAR(40),PRIMARY KEY (Tno));&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="s">&#34;CREATE TABLE IF NOT EXISTS Instrument ( Ino VARCHAR(10), Iname VARCHAR(20), Stat VARCHAR(10),PRIMARY KEY (Ino));&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="s">&#34;CREATE TABLE IF NOT EXISTS Manage( Ino VARCHAR(10),Lno VARCHAR(10),PRIMARY KEY (Ino,Lno),FOREIGN KEY (Ino)REFERENCES Instrument(Ino),FOREIGN KEY (Lno)REFERENCES Lab(Lno) );&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="s">&#34;CREATE TABLE IF NOT EXISTS Lab( Lno VARCHAR(10), Lname VARCHAR(40),  People INT ,Purpose VARCHAR(40),Time INT,PRIMARY KEY (Lno));&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="s">&#34;CREATE TABLE IF NOT EXISTS Orders( Tno VARCHAR(10), Lno VARCHAR(10),  Users VARCHAR(30) ,Btime DATETIME,Etime DATETIME,PRIMARY KEY (Tno,Lno,Btime,Etime),FOREIGN KEY (Tno)REFERENCES Teacher(Tno),FOREIGN KEY (Lno)REFERENCES Lab(Lno) );&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="s">&#34;CREATE VIEW IF NOT EXISTS SJ_PROJECT AS SELECT Sno,Pno,Qty FROM SPJ,J WHERE Jname = &#39;三建&#39; AND J.Jno = SPJ.Jno;&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">rc</span> <span class="o">=</span> <span class="n">sqlite3_exec</span><span class="p">(</span><span class="n">db</span><span class="p">,</span> <span class="n">create_table_queries</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">zErrMsg</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&#34;Can&#39;t create tables: &#34;</span> <span class="o">&lt;&lt;</span> <span class="n">rc</span> <span class="o">&lt;&lt;</span> <span class="s">&#34;, &#34;</span> <span class="o">&lt;&lt;</span> <span class="n">sqlite3_errmsg</span><span class="p">(</span><span class="n">db</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nb">false</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&#34;Created database successfully&#34;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nb">true</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">Database</span><span class="o">::</span><span class="n">Database</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">rc</span> <span class="o">=</span> <span class="n">sqlite3_open_v2</span><span class="p">(</span><span class="s">&#34;management.db&#34;</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">db</span><span class="p">,</span> <span class="n">SQLITE_OPEN_READWRITE</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&#34;Can&#39;t open database: &#34;</span> <span class="o">&lt;&lt;</span> <span class="n">rc</span> <span class="o">&lt;&lt;</span> <span class="s">&#34;, &#34;</span> <span class="o">&lt;&lt;</span> <span class="n">sqlite3_errmsg</span><span class="p">(</span><span class="n">db</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">create</span><span class="p">())</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&#34;Opened database successfully.&#34;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">Database</span><span class="o">::~</span><span class="n">Database</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">sqlite3_close_v2</span><span class="p">(</span><span class="n">db</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kt">void</span> <span class="n">Database</span><span class="o">::</span><span class="n">exec</span><span class="p">(</span><span class="n">string</span> <span class="n">sql</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">rc</span> <span class="o">=</span> <span class="n">sqlite3_exec</span><span class="p">(</span><span class="n">db</span><span class="p">,</span> <span class="n">sql</span><span class="p">.</span><span class="n">c_str</span><span class="p">(),</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&#34;Can&#39;t execute this sql line: &#34;</span> <span class="o">&lt;&lt;</span> <span class="n">sql</span><span class="p">.</span><span class="n">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">15</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="s">&#34;... with the following error: &#34;</span> <span class="o">&lt;&lt;</span> <span class="n">rc</span> <span class="o">&lt;&lt;</span> <span class="s">&#34;, &#34;</span> <span class="o">&lt;&lt;</span> <span class="n">sqlite3_errmsg</span><span class="p">(</span><span class="n">db</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">TimeInformation</span> <span class="n">Database</span><span class="o">::</span><span class="n">get_spare</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">TimeInformation</span> <span class="n">toReturn</span><span class="p">,</span> <span class="n">occupied</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">string</span> <span class="n">sql</span> <span class="o">=</span> <span class="s">&#34;select * from Spare_Time&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">sqlite3_stmt</span> <span class="o">*</span><span class="n">stmt</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">rc</span> <span class="o">=</span> <span class="n">sqlite3_prepare_v2</span><span class="p">(</span><span class="n">db</span><span class="p">,</span> <span class="n">sql</span><span class="p">.</span><span class="n">c_str</span><span class="p">(),</span> <span class="n">sql</span><span class="p">.</span><span class="n">length</span><span class="p">(),</span> <span class="o">&amp;</span><span class="n">stmt</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span> <span class="n">rc</span> <span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">stringstream</span> <span class="n">error</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">error</span> <span class="o">&lt;&lt;</span> <span class="s">&#34;Can&#39;t prepare statement: &#34;</span> <span class="o">&lt;&lt;</span> <span class="n">rc</span> <span class="o">&lt;&lt;</span> <span class="n">sqlite3_errmsg</span><span class="p">(</span><span class="n">db</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="k">throw</span> <span class="n">error</span><span class="p">.</span><span class="n">str</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">while</span> <span class="p">(</span><span class="n">sqlite3_step</span><span class="p">(</span><span class="n">stmt</span><span class="p">)</span> <span class="o">==</span> <span class="n">SQLITE_ROW</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">occupied</span><span class="p">[</span><span class="n">sqlite3_column_int</span><span class="p">(</span><span class="n">stmt</span><span class="p">,</span><span class="mi">0</span><span class="p">)].</span><span class="n">push_back</span><span class="p">({</span>
</span></span><span class="line"><span class="cl">                <span class="n">sqlite3_column_int</span><span class="p">(</span><span class="n">stmt</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">                <span class="n">sqlite3_column_int</span><span class="p">(</span><span class="n">stmt</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="p">});</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// Too crap to write, because my math is taught by Cirno:-P
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">for</span> <span class="p">(</span><span class="k">auto</span> <span class="nl">i</span> <span class="p">:</span> <span class="n">occupied</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="kt">int</span> <span class="n">start</span> <span class="o">=</span> <span class="mi">8</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="kt">int</span> <span class="n">end</span> <span class="o">=</span> <span class="mi">9</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="p">(</span><span class="k">auto</span> <span class="nl">j</span> <span class="p">:</span> <span class="n">i</span><span class="p">.</span><span class="n">second</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="p">(</span><span class="n">start</span> <span class="o">!=</span> <span class="n">j</span><span class="p">.</span><span class="n">first</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="n">end</span> <span class="o">=</span> <span class="n">j</span><span class="p">.</span><span class="n">first</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                <span class="n">toReturn</span><span class="p">[</span><span class="n">i</span><span class="p">.</span><span class="n">first</span><span class="p">].</span><span class="n">push_back</span><span class="p">({</span><span class="n">start</span><span class="p">,</span><span class="n">end</span><span class="p">});</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">            <span class="n">start</span> <span class="o">=</span> <span class="n">j</span><span class="p">.</span><span class="n">second</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="n">end</span> <span class="o">=</span> <span class="n">start</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="n">start</span> <span class="o">&lt;=</span> <span class="mi">20</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">toReturn</span><span class="p">[</span><span class="n">i</span><span class="p">.</span><span class="n">first</span><span class="p">].</span><span class="n">push_back</span><span class="p">({</span><span class="n">start</span><span class="p">,</span><span class="mi">20</span><span class="p">});</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="p">(</span><span class="k">auto</span> <span class="nl">i</span> <span class="p">:</span> <span class="n">toReturn</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">i</span><span class="p">.</span><span class="n">first</span> <span class="o">&lt;&lt;</span> <span class="s">&#34;: &#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="p">(</span><span class="k">auto</span> <span class="nl">j</span> <span class="p">:</span> <span class="n">i</span><span class="p">.</span><span class="n">second</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">j</span><span class="p">.</span><span class="n">first</span> <span class="o">&lt;&lt;</span> <span class="s">&#34;-&#34;</span> <span class="o">&lt;&lt;</span> <span class="n">j</span><span class="p">.</span><span class="n">second</span> <span class="o">&lt;&lt;</span> <span class="s">&#34; &#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&#34;Rest of the Lab are all avaliable from 8 to 20.&#34;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">toReturn</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Entry formula.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span><span class="o">**</span> <span class="n">argv</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&#34;Lab manage system initialing...&#34;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">Database</span> <span class="n">db</span> <span class="o">=</span> <span class="n">Database</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="n">db</span><span class="p">.</span><span class="n">rc</span> <span class="o">!=</span> <span class="n">SQLITE_OK</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="n">argc</span> <span class="o">==</span> <span class="mi">2</span> <span class="o">&amp;&amp;</span> <span class="n">strcmp</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="s">&#34;--query&#34;</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&#34;Query the empty time in 2022-12-31.&#34;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">db</span><span class="p">.</span><span class="n">get_spare</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&#34;Lab manage system instructions.&#34;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&#34;Usage: lab-management [option]&#34;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&#34;Options: &#34;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// cout &lt;&lt; &#34;  --user    Login this system as teacher.&#34; &lt;&lt; endl;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&#34;  --query   Query the empty time in 2022-12-31.&#34;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>自行了解用途，我已经忘了。</p><hr />